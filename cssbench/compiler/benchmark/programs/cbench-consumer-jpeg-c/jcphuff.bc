; ModuleID = 'jcphuff.bc'
source_filename = "jcphuff.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_compress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, double, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], [16 x i8], [16 x i8], [16 x i8], i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_memory_mgr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64 }
%struct.phuff_entropy_encoder = type { %struct.jpeg_entropy_encoder, i32, ptr, i64, i64, i32, ptr, [4 x i32], i32, i32, i32, ptr, i32, i32, [4 x ptr], [4 x ptr] }
%struct.jpeg_entropy_encoder = type { ptr, ptr, ptr }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }
%struct.jpeg_error_mgr = type { ptr, ptr, ptr, ptr, ptr, i32, %union.anon, i32, i64, ptr, i32, ptr, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_destination_mgr = type { ptr, i64, ptr, ptr, ptr }
%struct.c_derived_tbl = type { [256 x i32], [256 x i8] }

@jpeg_natural_order = external constant [0 x i32], align 4

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_phuff_encoder(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %5 = load ptr, ptr %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %5, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %7, i32 0, i32 0
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %2, align 8
  %11 = call ptr %9(ptr noundef %10, i32 noundef 1, i64 noundef 184)
  store ptr %11, ptr %3, align 8
  %12 = load ptr, ptr %3, align 8
  %13 = load ptr, ptr %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %13, i32 0, i32 59
  store ptr %12, ptr %14, align 8
  %15 = load ptr, ptr %3, align 8
  %16 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %15, i32 0, i32 0
  %17 = getelementptr inbounds %struct.jpeg_entropy_encoder, ptr %16, i32 0, i32 0
  store ptr @start_pass_phuff, ptr %17, align 8
  store i32 0, ptr %4, align 4
  br label %18

18:                                               ; preds = %32, %1
  %19 = load i32, ptr %4, align 4
  %20 = icmp slt i32 %19, 4
  br i1 %20, label %21, label %35

21:                                               ; preds = %18
  %22 = load ptr, ptr %3, align 8
  %23 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %22, i32 0, i32 14
  %24 = load i32, ptr %4, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [4 x ptr], ptr %23, i64 0, i64 %25
  store ptr null, ptr %26, align 8
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %27, i32 0, i32 15
  %29 = load i32, ptr %4, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [4 x ptr], ptr %28, i64 0, i64 %30
  store ptr null, ptr %31, align 8
  br label %32

32:                                               ; preds = %21
  %33 = load i32, ptr %4, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, ptr %4, align 4
  br label %18, !llvm.loop !6

35:                                               ; preds = %18
  %36 = load ptr, ptr %3, align 8
  %37 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %36, i32 0, i32 11
  store ptr null, ptr %37, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_phuff(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store i32 %1, ptr %4, align 4
  %10 = load ptr, ptr %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %10, i32 0, i32 59
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %5, align 8
  %13 = load ptr, ptr %3, align 8
  %14 = load ptr, ptr %5, align 8
  %15 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %14, i32 0, i32 6
  store ptr %13, ptr %15, align 8
  %16 = load i32, ptr %4, align 4
  %17 = load ptr, ptr %5, align 8
  %18 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %17, i32 0, i32 1
  store i32 %16, ptr %18, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %19, i32 0, i32 47
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq i32 %21, 0
  %23 = zext i1 %22 to i32
  store i32 %23, ptr %6, align 4
  %24 = load ptr, ptr %3, align 8
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %24, i32 0, i32 49
  %26 = load i32, ptr %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %2
  %29 = load i32, ptr %6, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = load ptr, ptr %5, align 8
  %33 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.jpeg_entropy_encoder, ptr %33, i32 0, i32 1
  store ptr @encode_mcu_DC_first, ptr %34, align 8
  br label %39

35:                                               ; preds = %28
  %36 = load ptr, ptr %5, align 8
  %37 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %36, i32 0, i32 0
  %38 = getelementptr inbounds %struct.jpeg_entropy_encoder, ptr %37, i32 0, i32 1
  store ptr @encode_mcu_AC_first, ptr %38, align 8
  br label %39

39:                                               ; preds = %35, %31
  br label %67

40:                                               ; preds = %2
  %41 = load i32, ptr %6, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %40
  %44 = load ptr, ptr %5, align 8
  %45 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %44, i32 0, i32 0
  %46 = getelementptr inbounds %struct.jpeg_entropy_encoder, ptr %45, i32 0, i32 1
  store ptr @encode_mcu_DC_refine, ptr %46, align 8
  br label %66

47:                                               ; preds = %40
  %48 = load ptr, ptr %5, align 8
  %49 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %48, i32 0, i32 0
  %50 = getelementptr inbounds %struct.jpeg_entropy_encoder, ptr %49, i32 0, i32 1
  store ptr @encode_mcu_AC_refine, ptr %50, align 8
  %51 = load ptr, ptr %5, align 8
  %52 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %51, i32 0, i32 11
  %53 = load ptr, ptr %52, align 8
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %65

55:                                               ; preds = %47
  %56 = load ptr, ptr %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %56, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8
  %59 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %58, i32 0, i32 0
  %60 = load ptr, ptr %59, align 8
  %61 = load ptr, ptr %3, align 8
  %62 = call ptr %60(ptr noundef %61, i32 noundef 1, i64 noundef 1000)
  %63 = load ptr, ptr %5, align 8
  %64 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %63, i32 0, i32 11
  store ptr %62, ptr %64, align 8
  br label %65

65:                                               ; preds = %55, %47
  br label %66

66:                                               ; preds = %65, %43
  br label %67

67:                                               ; preds = %66, %39
  %68 = load i32, ptr %4, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %67
  %71 = load ptr, ptr %5, align 8
  %72 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %71, i32 0, i32 0
  %73 = getelementptr inbounds %struct.jpeg_entropy_encoder, ptr %72, i32 0, i32 2
  store ptr @finish_pass_gather_phuff, ptr %73, align 8
  br label %78

74:                                               ; preds = %67
  %75 = load ptr, ptr %5, align 8
  %76 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %75, i32 0, i32 0
  %77 = getelementptr inbounds %struct.jpeg_entropy_encoder, ptr %76, i32 0, i32 2
  store ptr @finish_pass_phuff, ptr %77, align 8
  br label %78

78:                                               ; preds = %74, %70
  store i32 0, ptr %7, align 4
  br label %79

79:                                               ; preds = %245, %78
  %80 = load i32, ptr %7, align 4
  %81 = load ptr, ptr %3, align 8
  %82 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %81, i32 0, i32 41
  %83 = load i32, ptr %82, align 4
  %84 = icmp slt i32 %80, %83
  br i1 %84, label %85, label %248

85:                                               ; preds = %79
  %86 = load ptr, ptr %3, align 8
  %87 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %86, i32 0, i32 42
  %88 = load i32, ptr %7, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [4 x ptr], ptr %87, i64 0, i64 %89
  %91 = load ptr, ptr %90, align 8
  store ptr %91, ptr %9, align 8
  %92 = load ptr, ptr %5, align 8
  %93 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %92, i32 0, i32 7
  %94 = load i32, ptr %7, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [4 x i32], ptr %93, i64 0, i64 %95
  store i32 0, ptr %96, align 4
  %97 = load i32, ptr %6, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %143

99:                                               ; preds = %85
  %100 = load ptr, ptr %3, align 8
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %100, i32 0, i32 49
  %102 = load i32, ptr %101, align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %99
  br label %245

105:                                              ; preds = %99
  %106 = load ptr, ptr %9, align 8
  %107 = getelementptr inbounds %struct.jpeg_component_info, ptr %106, i32 0, i32 5
  %108 = load i32, ptr %107, align 4
  store i32 %108, ptr %8, align 4
  %109 = load i32, ptr %8, align 4
  %110 = icmp slt i32 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %105
  %112 = load i32, ptr %8, align 4
  %113 = icmp sge i32 %112, 4
  br i1 %113, label %125, label %114

114:                                              ; preds = %111
  %115 = load ptr, ptr %3, align 8
  %116 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %115, i32 0, i32 16
  %117 = load i32, ptr %8, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [4 x ptr], ptr %116, i64 0, i64 %118
  %120 = load ptr, ptr %119, align 8
  %121 = icmp eq ptr %120, null
  br i1 %121, label %122, label %142

122:                                              ; preds = %114
  %123 = load i32, ptr %4, align 4
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %142, label %125

125:                                              ; preds = %122, %111, %105
  %126 = load ptr, ptr %3, align 8
  %127 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %126, i32 0, i32 0
  %128 = load ptr, ptr %127, align 8
  %129 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %128, i32 0, i32 5
  store i32 49, ptr %129, align 8
  %130 = load i32, ptr %8, align 4
  %131 = load ptr, ptr %3, align 8
  %132 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %131, i32 0, i32 0
  %133 = load ptr, ptr %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %133, i32 0, i32 6
  %135 = getelementptr inbounds [8 x i32], ptr %134, i64 0, i64 0
  store i32 %130, ptr %135, align 4
  %136 = load ptr, ptr %3, align 8
  %137 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %136, i32 0, i32 0
  %138 = load ptr, ptr %137, align 8
  %139 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %138, i32 0, i32 0
  %140 = load ptr, ptr %139, align 8
  %141 = load ptr, ptr %3, align 8
  call void %140(ptr noundef %141)
  br label %142

142:                                              ; preds = %125, %122, %114
  br label %183

143:                                              ; preds = %85
  %144 = load ptr, ptr %9, align 8
  %145 = getelementptr inbounds %struct.jpeg_component_info, ptr %144, i32 0, i32 6
  %146 = load i32, ptr %145, align 8
  store i32 %146, ptr %8, align 4
  %147 = load ptr, ptr %5, align 8
  %148 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %147, i32 0, i32 8
  store i32 %146, ptr %148, align 8
  %149 = load i32, ptr %8, align 4
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %165, label %151

151:                                              ; preds = %143
  %152 = load i32, ptr %8, align 4
  %153 = icmp sge i32 %152, 4
  br i1 %153, label %165, label %154

154:                                              ; preds = %151
  %155 = load ptr, ptr %3, align 8
  %156 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %155, i32 0, i32 17
  %157 = load i32, ptr %8, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [4 x ptr], ptr %156, i64 0, i64 %158
  %160 = load ptr, ptr %159, align 8
  %161 = icmp eq ptr %160, null
  br i1 %161, label %162, label %182

162:                                              ; preds = %154
  %163 = load i32, ptr %4, align 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %182, label %165

165:                                              ; preds = %162, %151, %143
  %166 = load ptr, ptr %3, align 8
  %167 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %166, i32 0, i32 0
  %168 = load ptr, ptr %167, align 8
  %169 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %168, i32 0, i32 5
  store i32 49, ptr %169, align 8
  %170 = load i32, ptr %8, align 4
  %171 = load ptr, ptr %3, align 8
  %172 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %171, i32 0, i32 0
  %173 = load ptr, ptr %172, align 8
  %174 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %173, i32 0, i32 6
  %175 = getelementptr inbounds [8 x i32], ptr %174, i64 0, i64 0
  store i32 %170, ptr %175, align 4
  %176 = load ptr, ptr %3, align 8
  %177 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %176, i32 0, i32 0
  %178 = load ptr, ptr %177, align 8
  %179 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %178, i32 0, i32 0
  %180 = load ptr, ptr %179, align 8
  %181 = load ptr, ptr %3, align 8
  call void %180(ptr noundef %181)
  br label %182

182:                                              ; preds = %165, %162, %154
  br label %183

183:                                              ; preds = %182, %142
  %184 = load i32, ptr %4, align 4
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %186, label %214

186:                                              ; preds = %183
  %187 = load ptr, ptr %5, align 8
  %188 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %187, i32 0, i32 15
  %189 = load i32, ptr %8, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [4 x ptr], ptr %188, i64 0, i64 %190
  %192 = load ptr, ptr %191, align 8
  %193 = icmp eq ptr %192, null
  br i1 %193, label %194, label %207

194:                                              ; preds = %186
  %195 = load ptr, ptr %3, align 8
  %196 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %195, i32 0, i32 1
  %197 = load ptr, ptr %196, align 8
  %198 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %197, i32 0, i32 0
  %199 = load ptr, ptr %198, align 8
  %200 = load ptr, ptr %3, align 8
  %201 = call ptr %199(ptr noundef %200, i32 noundef 1, i64 noundef 2056)
  %202 = load ptr, ptr %5, align 8
  %203 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %202, i32 0, i32 15
  %204 = load i32, ptr %8, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [4 x ptr], ptr %203, i64 0, i64 %205
  store ptr %201, ptr %206, align 8
  br label %207

207:                                              ; preds = %194, %186
  %208 = load ptr, ptr %5, align 8
  %209 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %208, i32 0, i32 15
  %210 = load i32, ptr %8, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [4 x ptr], ptr %209, i64 0, i64 %211
  %213 = load ptr, ptr %212, align 8
  call void @llvm.memset.p0.i64(ptr align 1 %213, i8 0, i64 2056, i1 false)
  br label %244

214:                                              ; preds = %183
  %215 = load i32, ptr %6, align 4
  %216 = icmp ne i32 %215, 0
  br i1 %216, label %217, label %230

217:                                              ; preds = %214
  %218 = load ptr, ptr %3, align 8
  %219 = load ptr, ptr %3, align 8
  %220 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %219, i32 0, i32 16
  %221 = load i32, ptr %8, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [4 x ptr], ptr %220, i64 0, i64 %222
  %224 = load ptr, ptr %223, align 8
  %225 = load ptr, ptr %5, align 8
  %226 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %225, i32 0, i32 14
  %227 = load i32, ptr %8, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [4 x ptr], ptr %226, i64 0, i64 %228
  call void @jpeg_make_c_derived_tbl(ptr noundef %218, ptr noundef %224, ptr noundef %229)
  br label %243

230:                                              ; preds = %214
  %231 = load ptr, ptr %3, align 8
  %232 = load ptr, ptr %3, align 8
  %233 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %232, i32 0, i32 17
  %234 = load i32, ptr %8, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [4 x ptr], ptr %233, i64 0, i64 %235
  %237 = load ptr, ptr %236, align 8
  %238 = load ptr, ptr %5, align 8
  %239 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %238, i32 0, i32 14
  %240 = load i32, ptr %8, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [4 x ptr], ptr %239, i64 0, i64 %241
  call void @jpeg_make_c_derived_tbl(ptr noundef %231, ptr noundef %237, ptr noundef %242)
  br label %243

243:                                              ; preds = %230, %217
  br label %244

244:                                              ; preds = %243, %207
  br label %245

245:                                              ; preds = %244, %104
  %246 = load i32, ptr %7, align 4
  %247 = add nsw i32 %246, 1
  store i32 %247, ptr %7, align 4
  br label %79, !llvm.loop !8

248:                                              ; preds = %79
  %249 = load ptr, ptr %5, align 8
  %250 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %249, i32 0, i32 9
  store i32 0, ptr %250, align 4
  %251 = load ptr, ptr %5, align 8
  %252 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %251, i32 0, i32 10
  store i32 0, ptr %252, align 8
  %253 = load ptr, ptr %5, align 8
  %254 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %253, i32 0, i32 4
  store i64 0, ptr %254, align 8
  %255 = load ptr, ptr %5, align 8
  %256 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %255, i32 0, i32 5
  store i32 0, ptr %256, align 8
  %257 = load ptr, ptr %3, align 8
  %258 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %257, i32 0, i32 29
  %259 = load i32, ptr %258, align 8
  %260 = load ptr, ptr %5, align 8
  %261 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %260, i32 0, i32 12
  store i32 %259, ptr %261, align 8
  %262 = load ptr, ptr %5, align 8
  %263 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %262, i32 0, i32 13
  store i32 0, ptr %263, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_DC_first(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %14 = load ptr, ptr %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %14, i32 0, i32 59
  %16 = load ptr, ptr %15, align 8
  store ptr %16, ptr %5, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %17, i32 0, i32 50
  %19 = load i32, ptr %18, align 8
  store i32 %19, ptr %11, align 4
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %20, i32 0, i32 5
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %22, i32 0, i32 0
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %5, align 8
  %26 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %25, i32 0, i32 2
  store ptr %24, ptr %26, align 8
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %27, i32 0, i32 5
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %29, i32 0, i32 1
  %31 = load i64, ptr %30, align 8
  %32 = load ptr, ptr %5, align 8
  %33 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %32, i32 0, i32 3
  store i64 %31, ptr %33, align 8
  %34 = load ptr, ptr %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %34, i32 0, i32 29
  %36 = load i32, ptr %35, align 8
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %2
  %39 = load ptr, ptr %5, align 8
  %40 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %39, i32 0, i32 12
  %41 = load i32, ptr %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = load ptr, ptr %5, align 8
  %45 = load ptr, ptr %5, align 8
  %46 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %45, i32 0, i32 13
  %47 = load i32, ptr %46, align 4
  call void @emit_restart(ptr noundef %44, i32 noundef %47)
  br label %48

48:                                               ; preds = %43, %38
  br label %49

49:                                               ; preds = %48, %2
  store i32 0, ptr %9, align 4
  br label %50

50:                                               ; preds = %124, %49
  %51 = load i32, ptr %9, align 4
  %52 = load ptr, ptr %3, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %52, i32 0, i32 45
  %54 = load i32, ptr %53, align 8
  %55 = icmp slt i32 %51, %54
  br i1 %55, label %56, label %127

56:                                               ; preds = %50
  %57 = load ptr, ptr %4, align 8
  %58 = load i32, ptr %9, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds ptr, ptr %57, i64 %59
  %61 = load ptr, ptr %60, align 8
  store ptr %61, ptr %12, align 8
  %62 = load ptr, ptr %3, align 8
  %63 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %62, i32 0, i32 46
  %64 = load i32, ptr %9, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [10 x i32], ptr %63, i64 0, i64 %65
  %67 = load i32, ptr %66, align 4
  store i32 %67, ptr %10, align 4
  %68 = load ptr, ptr %3, align 8
  %69 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %68, i32 0, i32 42
  %70 = load i32, ptr %10, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [4 x ptr], ptr %69, i64 0, i64 %71
  %73 = load ptr, ptr %72, align 8
  store ptr %73, ptr %13, align 8
  %74 = load ptr, ptr %12, align 8
  %75 = getelementptr inbounds [64 x i16], ptr %74, i64 0, i64 0
  %76 = load i16, ptr %75, align 2
  %77 = sext i16 %76 to i32
  %78 = load i32, ptr %11, align 4
  %79 = ashr i32 %77, %78
  store i32 %79, ptr %7, align 4
  %80 = load i32, ptr %7, align 4
  %81 = load ptr, ptr %5, align 8
  %82 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %81, i32 0, i32 7
  %83 = load i32, ptr %10, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [4 x i32], ptr %82, i64 0, i64 %84
  %86 = load i32, ptr %85, align 4
  %87 = sub nsw i32 %80, %86
  store i32 %87, ptr %6, align 4
  %88 = load i32, ptr %7, align 4
  %89 = load ptr, ptr %5, align 8
  %90 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %89, i32 0, i32 7
  %91 = load i32, ptr %10, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [4 x i32], ptr %90, i64 0, i64 %92
  store i32 %88, ptr %93, align 4
  %94 = load i32, ptr %6, align 4
  store i32 %94, ptr %7, align 4
  %95 = load i32, ptr %6, align 4
  %96 = icmp slt i32 %95, 0
  br i1 %96, label %97, label %102

97:                                               ; preds = %56
  %98 = load i32, ptr %6, align 4
  %99 = sub nsw i32 0, %98
  store i32 %99, ptr %6, align 4
  %100 = load i32, ptr %7, align 4
  %101 = add nsw i32 %100, -1
  store i32 %101, ptr %7, align 4
  br label %102

102:                                              ; preds = %97, %56
  store i32 0, ptr %8, align 4
  br label %103

103:                                              ; preds = %106, %102
  %104 = load i32, ptr %6, align 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %111

106:                                              ; preds = %103
  %107 = load i32, ptr %8, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, ptr %8, align 4
  %109 = load i32, ptr %6, align 4
  %110 = ashr i32 %109, 1
  store i32 %110, ptr %6, align 4
  br label %103, !llvm.loop !9

111:                                              ; preds = %103
  %112 = load ptr, ptr %5, align 8
  %113 = load ptr, ptr %13, align 8
  %114 = getelementptr inbounds %struct.jpeg_component_info, ptr %113, i32 0, i32 5
  %115 = load i32, ptr %114, align 4
  %116 = load i32, ptr %8, align 4
  call void @emit_symbol(ptr noundef %112, i32 noundef %115, i32 noundef %116)
  %117 = load i32, ptr %8, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %111
  %120 = load ptr, ptr %5, align 8
  %121 = load i32, ptr %7, align 4
  %122 = load i32, ptr %8, align 4
  call void @emit_bits(ptr noundef %120, i32 noundef %121, i32 noundef %122)
  br label %123

123:                                              ; preds = %119, %111
  br label %124

124:                                              ; preds = %123
  %125 = load i32, ptr %9, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, ptr %9, align 4
  br label %50, !llvm.loop !10

127:                                              ; preds = %50
  %128 = load ptr, ptr %5, align 8
  %129 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %128, i32 0, i32 2
  %130 = load ptr, ptr %129, align 8
  %131 = load ptr, ptr %3, align 8
  %132 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %131, i32 0, i32 5
  %133 = load ptr, ptr %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %133, i32 0, i32 0
  store ptr %130, ptr %134, align 8
  %135 = load ptr, ptr %5, align 8
  %136 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %135, i32 0, i32 3
  %137 = load i64, ptr %136, align 8
  %138 = load ptr, ptr %3, align 8
  %139 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %138, i32 0, i32 5
  %140 = load ptr, ptr %139, align 8
  %141 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %140, i32 0, i32 1
  store i64 %137, ptr %141, align 8
  %142 = load ptr, ptr %3, align 8
  %143 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %142, i32 0, i32 29
  %144 = load i32, ptr %143, align 8
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %146, label %170

146:                                              ; preds = %127
  %147 = load ptr, ptr %5, align 8
  %148 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %147, i32 0, i32 12
  %149 = load i32, ptr %148, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %165

151:                                              ; preds = %146
  %152 = load ptr, ptr %3, align 8
  %153 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %152, i32 0, i32 29
  %154 = load i32, ptr %153, align 8
  %155 = load ptr, ptr %5, align 8
  %156 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %155, i32 0, i32 12
  store i32 %154, ptr %156, align 8
  %157 = load ptr, ptr %5, align 8
  %158 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %157, i32 0, i32 13
  %159 = load i32, ptr %158, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, ptr %158, align 4
  %161 = load ptr, ptr %5, align 8
  %162 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %161, i32 0, i32 13
  %163 = load i32, ptr %162, align 4
  %164 = and i32 %163, 7
  store i32 %164, ptr %162, align 4
  br label %165

165:                                              ; preds = %151, %146
  %166 = load ptr, ptr %5, align 8
  %167 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %166, i32 0, i32 12
  %168 = load i32, ptr %167, align 8
  %169 = add i32 %168, -1
  store i32 %169, ptr %167, align 8
  br label %170

170:                                              ; preds = %165, %127
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_AC_first(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %14 = load ptr, ptr %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %14, i32 0, i32 59
  %16 = load ptr, ptr %15, align 8
  store ptr %16, ptr %5, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %17, i32 0, i32 48
  %19 = load i32, ptr %18, align 8
  store i32 %19, ptr %11, align 4
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %20, i32 0, i32 50
  %22 = load i32, ptr %21, align 8
  store i32 %22, ptr %12, align 4
  %23 = load ptr, ptr %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %23, i32 0, i32 5
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %25, i32 0, i32 0
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr %5, align 8
  %29 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %28, i32 0, i32 2
  store ptr %27, ptr %29, align 8
  %30 = load ptr, ptr %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %30, i32 0, i32 5
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %32, i32 0, i32 1
  %34 = load i64, ptr %33, align 8
  %35 = load ptr, ptr %5, align 8
  %36 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %35, i32 0, i32 3
  store i64 %34, ptr %36, align 8
  %37 = load ptr, ptr %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %37, i32 0, i32 29
  %39 = load i32, ptr %38, align 8
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %52

41:                                               ; preds = %2
  %42 = load ptr, ptr %5, align 8
  %43 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %42, i32 0, i32 12
  %44 = load i32, ptr %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = load ptr, ptr %5, align 8
  %48 = load ptr, ptr %5, align 8
  %49 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %48, i32 0, i32 13
  %50 = load i32, ptr %49, align 4
  call void @emit_restart(ptr noundef %47, i32 noundef %50)
  br label %51

51:                                               ; preds = %46, %41
  br label %52

52:                                               ; preds = %51, %2
  %53 = load ptr, ptr %4, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 0
  %55 = load ptr, ptr %54, align 8
  store ptr %55, ptr %13, align 8
  store i32 0, ptr %9, align 4
  %56 = load ptr, ptr %3, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %56, i32 0, i32 47
  %58 = load i32, ptr %57, align 4
  store i32 %58, ptr %10, align 4
  br label %59

59:                                               ; preds = %137, %52
  %60 = load i32, ptr %10, align 4
  %61 = load i32, ptr %11, align 4
  %62 = icmp sle i32 %60, %61
  br i1 %62, label %63, label %140

63:                                               ; preds = %59
  %64 = load ptr, ptr %13, align 8
  %65 = load i32, ptr %10, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [0 x i32], ptr @jpeg_natural_order, i64 0, i64 %66
  %68 = load i32, ptr %67, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [64 x i16], ptr %64, i64 0, i64 %69
  %71 = load i16, ptr %70, align 2
  %72 = sext i16 %71 to i32
  store i32 %72, ptr %6, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %63
  %75 = load i32, ptr %9, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, ptr %9, align 4
  br label %137

77:                                               ; preds = %63
  %78 = load i32, ptr %6, align 4
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %77
  %81 = load i32, ptr %6, align 4
  %82 = sub nsw i32 0, %81
  store i32 %82, ptr %6, align 4
  %83 = load i32, ptr %12, align 4
  %84 = load i32, ptr %6, align 4
  %85 = ashr i32 %84, %83
  store i32 %85, ptr %6, align 4
  %86 = load i32, ptr %6, align 4
  %87 = xor i32 %86, -1
  store i32 %87, ptr %7, align 4
  br label %93

88:                                               ; preds = %77
  %89 = load i32, ptr %12, align 4
  %90 = load i32, ptr %6, align 4
  %91 = ashr i32 %90, %89
  store i32 %91, ptr %6, align 4
  %92 = load i32, ptr %6, align 4
  store i32 %92, ptr %7, align 4
  br label %93

93:                                               ; preds = %88, %80
  %94 = load i32, ptr %6, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %93
  %97 = load i32, ptr %9, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, ptr %9, align 4
  br label %137

99:                                               ; preds = %93
  %100 = load ptr, ptr %5, align 8
  %101 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %100, i32 0, i32 9
  %102 = load i32, ptr %101, align 4
  %103 = icmp ugt i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = load ptr, ptr %5, align 8
  call void @emit_eobrun(ptr noundef %105)
  br label %106

106:                                              ; preds = %104, %99
  br label %107

107:                                              ; preds = %110, %106
  %108 = load i32, ptr %9, align 4
  %109 = icmp sgt i32 %108, 15
  br i1 %109, label %110, label %117

110:                                              ; preds = %107
  %111 = load ptr, ptr %5, align 8
  %112 = load ptr, ptr %5, align 8
  %113 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %112, i32 0, i32 8
  %114 = load i32, ptr %113, align 8
  call void @emit_symbol(ptr noundef %111, i32 noundef %114, i32 noundef 240)
  %115 = load i32, ptr %9, align 4
  %116 = sub nsw i32 %115, 16
  store i32 %116, ptr %9, align 4
  br label %107, !llvm.loop !11

117:                                              ; preds = %107
  store i32 1, ptr %8, align 4
  br label %118

118:                                              ; preds = %122, %117
  %119 = load i32, ptr %6, align 4
  %120 = ashr i32 %119, 1
  store i32 %120, ptr %6, align 4
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = load i32, ptr %8, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, ptr %8, align 4
  br label %118, !llvm.loop !12

125:                                              ; preds = %118
  %126 = load ptr, ptr %5, align 8
  %127 = load ptr, ptr %5, align 8
  %128 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %127, i32 0, i32 8
  %129 = load i32, ptr %128, align 8
  %130 = load i32, ptr %9, align 4
  %131 = shl i32 %130, 4
  %132 = load i32, ptr %8, align 4
  %133 = add nsw i32 %131, %132
  call void @emit_symbol(ptr noundef %126, i32 noundef %129, i32 noundef %133)
  %134 = load ptr, ptr %5, align 8
  %135 = load i32, ptr %7, align 4
  %136 = load i32, ptr %8, align 4
  call void @emit_bits(ptr noundef %134, i32 noundef %135, i32 noundef %136)
  store i32 0, ptr %9, align 4
  br label %137

137:                                              ; preds = %125, %96, %74
  %138 = load i32, ptr %10, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, ptr %10, align 4
  br label %59, !llvm.loop !13

140:                                              ; preds = %59
  %141 = load i32, ptr %9, align 4
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %140
  %144 = load ptr, ptr %5, align 8
  %145 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %144, i32 0, i32 9
  %146 = load i32, ptr %145, align 4
  %147 = add i32 %146, 1
  store i32 %147, ptr %145, align 4
  %148 = load ptr, ptr %5, align 8
  %149 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %148, i32 0, i32 9
  %150 = load i32, ptr %149, align 4
  %151 = icmp eq i32 %150, 32767
  br i1 %151, label %152, label %154

152:                                              ; preds = %143
  %153 = load ptr, ptr %5, align 8
  call void @emit_eobrun(ptr noundef %153)
  br label %154

154:                                              ; preds = %152, %143
  br label %155

155:                                              ; preds = %154, %140
  %156 = load ptr, ptr %5, align 8
  %157 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %156, i32 0, i32 2
  %158 = load ptr, ptr %157, align 8
  %159 = load ptr, ptr %3, align 8
  %160 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %159, i32 0, i32 5
  %161 = load ptr, ptr %160, align 8
  %162 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %161, i32 0, i32 0
  store ptr %158, ptr %162, align 8
  %163 = load ptr, ptr %5, align 8
  %164 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %163, i32 0, i32 3
  %165 = load i64, ptr %164, align 8
  %166 = load ptr, ptr %3, align 8
  %167 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %166, i32 0, i32 5
  %168 = load ptr, ptr %167, align 8
  %169 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %168, i32 0, i32 1
  store i64 %165, ptr %169, align 8
  %170 = load ptr, ptr %3, align 8
  %171 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %170, i32 0, i32 29
  %172 = load i32, ptr %171, align 8
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %198

174:                                              ; preds = %155
  %175 = load ptr, ptr %5, align 8
  %176 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %175, i32 0, i32 12
  %177 = load i32, ptr %176, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %193

179:                                              ; preds = %174
  %180 = load ptr, ptr %3, align 8
  %181 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %180, i32 0, i32 29
  %182 = load i32, ptr %181, align 8
  %183 = load ptr, ptr %5, align 8
  %184 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %183, i32 0, i32 12
  store i32 %182, ptr %184, align 8
  %185 = load ptr, ptr %5, align 8
  %186 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %185, i32 0, i32 13
  %187 = load i32, ptr %186, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, ptr %186, align 4
  %189 = load ptr, ptr %5, align 8
  %190 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %189, i32 0, i32 13
  %191 = load i32, ptr %190, align 4
  %192 = and i32 %191, 7
  store i32 %192, ptr %190, align 4
  br label %193

193:                                              ; preds = %179, %174
  %194 = load ptr, ptr %5, align 8
  %195 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %194, i32 0, i32 12
  %196 = load i32, ptr %195, align 8
  %197 = add i32 %196, -1
  store i32 %197, ptr %195, align 8
  br label %198

198:                                              ; preds = %193, %155
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_DC_refine(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %10 = load ptr, ptr %3, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %10, i32 0, i32 59
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %5, align 8
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %13, i32 0, i32 50
  %15 = load i32, ptr %14, align 8
  store i32 %15, ptr %8, align 4
  %16 = load ptr, ptr %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %16, i32 0, i32 5
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %18, i32 0, i32 0
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr %5, align 8
  %22 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %21, i32 0, i32 2
  store ptr %20, ptr %22, align 8
  %23 = load ptr, ptr %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %23, i32 0, i32 5
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %25, i32 0, i32 1
  %27 = load i64, ptr %26, align 8
  %28 = load ptr, ptr %5, align 8
  %29 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %28, i32 0, i32 3
  store i64 %27, ptr %29, align 8
  %30 = load ptr, ptr %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %30, i32 0, i32 29
  %32 = load i32, ptr %31, align 8
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %45

34:                                               ; preds = %2
  %35 = load ptr, ptr %5, align 8
  %36 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %35, i32 0, i32 12
  %37 = load i32, ptr %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %34
  %40 = load ptr, ptr %5, align 8
  %41 = load ptr, ptr %5, align 8
  %42 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %41, i32 0, i32 13
  %43 = load i32, ptr %42, align 4
  call void @emit_restart(ptr noundef %40, i32 noundef %43)
  br label %44

44:                                               ; preds = %39, %34
  br label %45

45:                                               ; preds = %44, %2
  store i32 0, ptr %7, align 4
  br label %46

46:                                               ; preds = %66, %45
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %3, align 8
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %48, i32 0, i32 45
  %50 = load i32, ptr %49, align 8
  %51 = icmp slt i32 %47, %50
  br i1 %51, label %52, label %69

52:                                               ; preds = %46
  %53 = load ptr, ptr %4, align 8
  %54 = load i32, ptr %7, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds ptr, ptr %53, i64 %55
  %57 = load ptr, ptr %56, align 8
  store ptr %57, ptr %9, align 8
  %58 = load ptr, ptr %9, align 8
  %59 = getelementptr inbounds [64 x i16], ptr %58, i64 0, i64 0
  %60 = load i16, ptr %59, align 2
  %61 = sext i16 %60 to i32
  store i32 %61, ptr %6, align 4
  %62 = load ptr, ptr %5, align 8
  %63 = load i32, ptr %6, align 4
  %64 = load i32, ptr %8, align 4
  %65 = ashr i32 %63, %64
  call void @emit_bits(ptr noundef %62, i32 noundef %65, i32 noundef 1)
  br label %66

66:                                               ; preds = %52
  %67 = load i32, ptr %7, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, ptr %7, align 4
  br label %46, !llvm.loop !14

69:                                               ; preds = %46
  %70 = load ptr, ptr %5, align 8
  %71 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %70, i32 0, i32 2
  %72 = load ptr, ptr %71, align 8
  %73 = load ptr, ptr %3, align 8
  %74 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %73, i32 0, i32 5
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %75, i32 0, i32 0
  store ptr %72, ptr %76, align 8
  %77 = load ptr, ptr %5, align 8
  %78 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %77, i32 0, i32 3
  %79 = load i64, ptr %78, align 8
  %80 = load ptr, ptr %3, align 8
  %81 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %80, i32 0, i32 5
  %82 = load ptr, ptr %81, align 8
  %83 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %82, i32 0, i32 1
  store i64 %79, ptr %83, align 8
  %84 = load ptr, ptr %3, align 8
  %85 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %84, i32 0, i32 29
  %86 = load i32, ptr %85, align 8
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %112

88:                                               ; preds = %69
  %89 = load ptr, ptr %5, align 8
  %90 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %89, i32 0, i32 12
  %91 = load i32, ptr %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %107

93:                                               ; preds = %88
  %94 = load ptr, ptr %3, align 8
  %95 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %94, i32 0, i32 29
  %96 = load i32, ptr %95, align 8
  %97 = load ptr, ptr %5, align 8
  %98 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %97, i32 0, i32 12
  store i32 %96, ptr %98, align 8
  %99 = load ptr, ptr %5, align 8
  %100 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %99, i32 0, i32 13
  %101 = load i32, ptr %100, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, ptr %100, align 4
  %103 = load ptr, ptr %5, align 8
  %104 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %103, i32 0, i32 13
  %105 = load i32, ptr %104, align 4
  %106 = and i32 %105, 7
  store i32 %106, ptr %104, align 4
  br label %107

107:                                              ; preds = %93, %88
  %108 = load ptr, ptr %5, align 8
  %109 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %108, i32 0, i32 12
  %110 = load i32, ptr %109, align 8
  %111 = add i32 %110, -1
  store i32 %111, ptr %109, align 8
  br label %112

112:                                              ; preds = %107, %69
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_mcu_AC_refine(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca [64 x i32], align 16
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %16 = load ptr, ptr %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %16, i32 0, i32 59
  %18 = load ptr, ptr %17, align 8
  store ptr %18, ptr %5, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %19, i32 0, i32 48
  %21 = load i32, ptr %20, align 8
  store i32 %21, ptr %12, align 4
  %22 = load ptr, ptr %3, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %22, i32 0, i32 50
  %24 = load i32, ptr %23, align 8
  store i32 %24, ptr %13, align 4
  %25 = load ptr, ptr %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %25, i32 0, i32 5
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %27, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr %5, align 8
  %31 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %30, i32 0, i32 2
  store ptr %29, ptr %31, align 8
  %32 = load ptr, ptr %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %32, i32 0, i32 5
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %34, i32 0, i32 1
  %36 = load i64, ptr %35, align 8
  %37 = load ptr, ptr %5, align 8
  %38 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %37, i32 0, i32 3
  store i64 %36, ptr %38, align 8
  %39 = load ptr, ptr %3, align 8
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %39, i32 0, i32 29
  %41 = load i32, ptr %40, align 8
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %2
  %44 = load ptr, ptr %5, align 8
  %45 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %44, i32 0, i32 12
  %46 = load i32, ptr %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = load ptr, ptr %5, align 8
  %50 = load ptr, ptr %5, align 8
  %51 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %50, i32 0, i32 13
  %52 = load i32, ptr %51, align 4
  call void @emit_restart(ptr noundef %49, i32 noundef %52)
  br label %53

53:                                               ; preds = %48, %43
  br label %54

54:                                               ; preds = %53, %2
  %55 = load ptr, ptr %4, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 0
  %57 = load ptr, ptr %56, align 8
  store ptr %57, ptr %14, align 8
  store i32 0, ptr %9, align 4
  %58 = load ptr, ptr %3, align 8
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %58, i32 0, i32 47
  %60 = load i32, ptr %59, align 4
  store i32 %60, ptr %8, align 4
  br label %61

61:                                               ; preds = %93, %54
  %62 = load i32, ptr %8, align 4
  %63 = load i32, ptr %12, align 4
  %64 = icmp sle i32 %62, %63
  br i1 %64, label %65, label %96

65:                                               ; preds = %61
  %66 = load ptr, ptr %14, align 8
  %67 = load i32, ptr %8, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [0 x i32], ptr @jpeg_natural_order, i64 0, i64 %68
  %70 = load i32, ptr %69, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [64 x i16], ptr %66, i64 0, i64 %71
  %73 = load i16, ptr %72, align 2
  %74 = sext i16 %73 to i32
  store i32 %74, ptr %6, align 4
  %75 = load i32, ptr %6, align 4
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %65
  %78 = load i32, ptr %6, align 4
  %79 = sub nsw i32 0, %78
  store i32 %79, ptr %6, align 4
  br label %80

80:                                               ; preds = %77, %65
  %81 = load i32, ptr %13, align 4
  %82 = load i32, ptr %6, align 4
  %83 = ashr i32 %82, %81
  store i32 %83, ptr %6, align 4
  %84 = load i32, ptr %6, align 4
  %85 = load i32, ptr %8, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [64 x i32], ptr %15, i64 0, i64 %86
  store i32 %84, ptr %87, align 4
  %88 = load i32, ptr %6, align 4
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %80
  %91 = load i32, ptr %8, align 4
  store i32 %91, ptr %9, align 4
  br label %92

92:                                               ; preds = %90, %80
  br label %93

93:                                               ; preds = %92
  %94 = load i32, ptr %8, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, ptr %8, align 4
  br label %61, !llvm.loop !15

96:                                               ; preds = %61
  store i32 0, ptr %7, align 4
  store i32 0, ptr %11, align 4
  %97 = load ptr, ptr %5, align 8
  %98 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %97, i32 0, i32 11
  %99 = load ptr, ptr %98, align 8
  %100 = load ptr, ptr %5, align 8
  %101 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %100, i32 0, i32 10
  %102 = load i32, ptr %101, align 8
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i8, ptr %99, i64 %103
  store ptr %104, ptr %10, align 8
  %105 = load ptr, ptr %3, align 8
  %106 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %105, i32 0, i32 47
  %107 = load i32, ptr %106, align 4
  store i32 %107, ptr %8, align 4
  br label %108

108:                                              ; preds = %186, %96
  %109 = load i32, ptr %8, align 4
  %110 = load i32, ptr %12, align 4
  %111 = icmp sle i32 %109, %110
  br i1 %111, label %112, label %189

112:                                              ; preds = %108
  %113 = load i32, ptr %8, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [64 x i32], ptr %15, i64 0, i64 %114
  %116 = load i32, ptr %115, align 4
  store i32 %116, ptr %6, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = load i32, ptr %7, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, ptr %7, align 4
  br label %186

121:                                              ; preds = %112
  br label %122

122:                                              ; preds = %131, %121
  %123 = load i32, ptr %7, align 4
  %124 = icmp sgt i32 %123, 15
  br i1 %124, label %125, label %129

125:                                              ; preds = %122
  %126 = load i32, ptr %8, align 4
  %127 = load i32, ptr %9, align 4
  %128 = icmp sle i32 %126, %127
  br label %129

129:                                              ; preds = %125, %122
  %130 = phi i1 [ false, %122 ], [ %128, %125 ]
  br i1 %130, label %131, label %145

131:                                              ; preds = %129
  %132 = load ptr, ptr %5, align 8
  call void @emit_eobrun(ptr noundef %132)
  %133 = load ptr, ptr %5, align 8
  %134 = load ptr, ptr %5, align 8
  %135 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %134, i32 0, i32 8
  %136 = load i32, ptr %135, align 8
  call void @emit_symbol(ptr noundef %133, i32 noundef %136, i32 noundef 240)
  %137 = load i32, ptr %7, align 4
  %138 = sub nsw i32 %137, 16
  store i32 %138, ptr %7, align 4
  %139 = load ptr, ptr %5, align 8
  %140 = load ptr, ptr %10, align 8
  %141 = load i32, ptr %11, align 4
  call void @emit_buffered_bits(ptr noundef %139, ptr noundef %140, i32 noundef %141)
  %142 = load ptr, ptr %5, align 8
  %143 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %142, i32 0, i32 11
  %144 = load ptr, ptr %143, align 8
  store ptr %144, ptr %10, align 8
  store i32 0, ptr %11, align 4
  br label %122, !llvm.loop !16

145:                                              ; preds = %129
  %146 = load i32, ptr %6, align 4
  %147 = icmp sgt i32 %146, 1
  br i1 %147, label %148, label %157

148:                                              ; preds = %145
  %149 = load i32, ptr %6, align 4
  %150 = and i32 %149, 1
  %151 = trunc i32 %150 to i8
  %152 = load ptr, ptr %10, align 8
  %153 = load i32, ptr %11, align 4
  %154 = add i32 %153, 1
  store i32 %154, ptr %11, align 4
  %155 = zext i32 %153 to i64
  %156 = getelementptr inbounds i8, ptr %152, i64 %155
  store i8 %151, ptr %156, align 1
  br label %186

157:                                              ; preds = %145
  %158 = load ptr, ptr %5, align 8
  call void @emit_eobrun(ptr noundef %158)
  %159 = load ptr, ptr %5, align 8
  %160 = load ptr, ptr %5, align 8
  %161 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %160, i32 0, i32 8
  %162 = load i32, ptr %161, align 8
  %163 = load i32, ptr %7, align 4
  %164 = shl i32 %163, 4
  %165 = add nsw i32 %164, 1
  call void @emit_symbol(ptr noundef %159, i32 noundef %162, i32 noundef %165)
  %166 = load ptr, ptr %14, align 8
  %167 = load i32, ptr %8, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [0 x i32], ptr @jpeg_natural_order, i64 0, i64 %168
  %170 = load i32, ptr %169, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [64 x i16], ptr %166, i64 0, i64 %171
  %173 = load i16, ptr %172, align 2
  %174 = sext i16 %173 to i32
  %175 = icmp slt i32 %174, 0
  %176 = zext i1 %175 to i64
  %177 = select i1 %175, i32 0, i32 1
  store i32 %177, ptr %6, align 4
  %178 = load ptr, ptr %5, align 8
  %179 = load i32, ptr %6, align 4
  call void @emit_bits(ptr noundef %178, i32 noundef %179, i32 noundef 1)
  %180 = load ptr, ptr %5, align 8
  %181 = load ptr, ptr %10, align 8
  %182 = load i32, ptr %11, align 4
  call void @emit_buffered_bits(ptr noundef %180, ptr noundef %181, i32 noundef %182)
  %183 = load ptr, ptr %5, align 8
  %184 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %183, i32 0, i32 11
  %185 = load ptr, ptr %184, align 8
  store ptr %185, ptr %10, align 8
  store i32 0, ptr %11, align 4
  store i32 0, ptr %7, align 4
  br label %186

186:                                              ; preds = %157, %148, %118
  %187 = load i32, ptr %8, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, ptr %8, align 4
  br label %108, !llvm.loop !17

189:                                              ; preds = %108
  %190 = load i32, ptr %7, align 4
  %191 = icmp sgt i32 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %189
  %193 = load i32, ptr %11, align 4
  %194 = icmp ugt i32 %193, 0
  br i1 %194, label %195, label %217

195:                                              ; preds = %192, %189
  %196 = load ptr, ptr %5, align 8
  %197 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %196, i32 0, i32 9
  %198 = load i32, ptr %197, align 4
  %199 = add i32 %198, 1
  store i32 %199, ptr %197, align 4
  %200 = load i32, ptr %11, align 4
  %201 = load ptr, ptr %5, align 8
  %202 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %201, i32 0, i32 10
  %203 = load i32, ptr %202, align 8
  %204 = add i32 %203, %200
  store i32 %204, ptr %202, align 8
  %205 = load ptr, ptr %5, align 8
  %206 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %205, i32 0, i32 9
  %207 = load i32, ptr %206, align 4
  %208 = icmp eq i32 %207, 32767
  br i1 %208, label %214, label %209

209:                                              ; preds = %195
  %210 = load ptr, ptr %5, align 8
  %211 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %210, i32 0, i32 10
  %212 = load i32, ptr %211, align 8
  %213 = icmp ugt i32 %212, 937
  br i1 %213, label %214, label %216

214:                                              ; preds = %209, %195
  %215 = load ptr, ptr %5, align 8
  call void @emit_eobrun(ptr noundef %215)
  br label %216

216:                                              ; preds = %214, %209
  br label %217

217:                                              ; preds = %216, %192
  %218 = load ptr, ptr %5, align 8
  %219 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %218, i32 0, i32 2
  %220 = load ptr, ptr %219, align 8
  %221 = load ptr, ptr %3, align 8
  %222 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %221, i32 0, i32 5
  %223 = load ptr, ptr %222, align 8
  %224 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %223, i32 0, i32 0
  store ptr %220, ptr %224, align 8
  %225 = load ptr, ptr %5, align 8
  %226 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %225, i32 0, i32 3
  %227 = load i64, ptr %226, align 8
  %228 = load ptr, ptr %3, align 8
  %229 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %228, i32 0, i32 5
  %230 = load ptr, ptr %229, align 8
  %231 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %230, i32 0, i32 1
  store i64 %227, ptr %231, align 8
  %232 = load ptr, ptr %3, align 8
  %233 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %232, i32 0, i32 29
  %234 = load i32, ptr %233, align 8
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %236, label %260

236:                                              ; preds = %217
  %237 = load ptr, ptr %5, align 8
  %238 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %237, i32 0, i32 12
  %239 = load i32, ptr %238, align 8
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %255

241:                                              ; preds = %236
  %242 = load ptr, ptr %3, align 8
  %243 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %242, i32 0, i32 29
  %244 = load i32, ptr %243, align 8
  %245 = load ptr, ptr %5, align 8
  %246 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %245, i32 0, i32 12
  store i32 %244, ptr %246, align 8
  %247 = load ptr, ptr %5, align 8
  %248 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %247, i32 0, i32 13
  %249 = load i32, ptr %248, align 4
  %250 = add nsw i32 %249, 1
  store i32 %250, ptr %248, align 4
  %251 = load ptr, ptr %5, align 8
  %252 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %251, i32 0, i32 13
  %253 = load i32, ptr %252, align 4
  %254 = and i32 %253, 7
  store i32 %254, ptr %252, align 4
  br label %255

255:                                              ; preds = %241, %236
  %256 = load ptr, ptr %5, align 8
  %257 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %256, i32 0, i32 12
  %258 = load i32, ptr %257, align 8
  %259 = add i32 %258, -1
  store i32 %259, ptr %257, align 8
  br label %260

260:                                              ; preds = %255, %217
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass_gather_phuff(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca [4 x i32], align 16
  store ptr %0, ptr %2, align 8
  %10 = load ptr, ptr %2, align 8
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %10, i32 0, i32 59
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %3, align 8
  %13 = load ptr, ptr %3, align 8
  call void @emit_eobrun(ptr noundef %13)
  %14 = load ptr, ptr %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %14, i32 0, i32 47
  %16 = load i32, ptr %15, align 4
  %17 = icmp eq i32 %16, 0
  %18 = zext i1 %17 to i32
  store i32 %18, ptr %4, align 4
  %19 = getelementptr inbounds [4 x i32], ptr %9, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 16 %19, i8 0, i64 16, i1 false)
  store i32 0, ptr %5, align 4
  br label %20

20:                                               ; preds = %92, %1
  %21 = load i32, ptr %5, align 4
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %22, i32 0, i32 41
  %24 = load i32, ptr %23, align 4
  %25 = icmp slt i32 %21, %24
  br i1 %25, label %26, label %95

26:                                               ; preds = %20
  %27 = load ptr, ptr %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %27, i32 0, i32 42
  %29 = load i32, ptr %5, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [4 x ptr], ptr %28, i64 0, i64 %30
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %7, align 8
  %33 = load i32, ptr %4, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %26
  %36 = load ptr, ptr %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %36, i32 0, i32 49
  %38 = load i32, ptr %37, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  br label %92

41:                                               ; preds = %35
  %42 = load ptr, ptr %7, align 8
  %43 = getelementptr inbounds %struct.jpeg_component_info, ptr %42, i32 0, i32 5
  %44 = load i32, ptr %43, align 4
  store i32 %44, ptr %6, align 4
  br label %49

45:                                               ; preds = %26
  %46 = load ptr, ptr %7, align 8
  %47 = getelementptr inbounds %struct.jpeg_component_info, ptr %46, i32 0, i32 6
  %48 = load i32, ptr %47, align 8
  store i32 %48, ptr %6, align 4
  br label %49

49:                                               ; preds = %45, %41
  %50 = load i32, ptr %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [4 x i32], ptr %9, i64 0, i64 %51
  %53 = load i32, ptr %52, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %91, label %55

55:                                               ; preds = %49
  %56 = load i32, ptr %4, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %55
  %59 = load ptr, ptr %2, align 8
  %60 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %59, i32 0, i32 16
  %61 = load i32, ptr %6, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [4 x ptr], ptr %60, i64 0, i64 %62
  store ptr %63, ptr %8, align 8
  br label %70

64:                                               ; preds = %55
  %65 = load ptr, ptr %2, align 8
  %66 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %65, i32 0, i32 17
  %67 = load i32, ptr %6, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [4 x ptr], ptr %66, i64 0, i64 %68
  store ptr %69, ptr %8, align 8
  br label %70

70:                                               ; preds = %64, %58
  %71 = load ptr, ptr %8, align 8
  %72 = load ptr, ptr %71, align 8
  %73 = icmp eq ptr %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = load ptr, ptr %2, align 8
  %76 = call ptr @jpeg_alloc_huff_table(ptr noundef %75)
  %77 = load ptr, ptr %8, align 8
  store ptr %76, ptr %77, align 8
  br label %78

78:                                               ; preds = %74, %70
  %79 = load ptr, ptr %2, align 8
  %80 = load ptr, ptr %8, align 8
  %81 = load ptr, ptr %80, align 8
  %82 = load ptr, ptr %3, align 8
  %83 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %82, i32 0, i32 15
  %84 = load i32, ptr %6, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [4 x ptr], ptr %83, i64 0, i64 %85
  %87 = load ptr, ptr %86, align 8
  call void @jpeg_gen_optimal_table(ptr noundef %79, ptr noundef %81, ptr noundef %87)
  %88 = load i32, ptr %6, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [4 x i32], ptr %9, i64 0, i64 %89
  store i32 1, ptr %90, align 4
  br label %91

91:                                               ; preds = %78, %49
  br label %92

92:                                               ; preds = %91, %40
  %93 = load i32, ptr %5, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, ptr %5, align 4
  br label %20, !llvm.loop !18

95:                                               ; preds = %20
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_pass_phuff(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %4, i32 0, i32 59
  %6 = load ptr, ptr %5, align 8
  store ptr %6, ptr %3, align 8
  %7 = load ptr, ptr %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %7, i32 0, i32 5
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %12, i32 0, i32 2
  store ptr %11, ptr %13, align 8
  %14 = load ptr, ptr %2, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %14, i32 0, i32 5
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %16, i32 0, i32 1
  %18 = load i64, ptr %17, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %19, i32 0, i32 3
  store i64 %18, ptr %20, align 8
  %21 = load ptr, ptr %3, align 8
  call void @emit_eobrun(ptr noundef %21)
  %22 = load ptr, ptr %3, align 8
  call void @flush_bits(ptr noundef %22)
  %23 = load ptr, ptr %3, align 8
  %24 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %23, i32 0, i32 2
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %2, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %26, i32 0, i32 5
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %28, i32 0, i32 0
  store ptr %25, ptr %29, align 8
  %30 = load ptr, ptr %3, align 8
  %31 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %30, i32 0, i32 3
  %32 = load i64, ptr %31, align 8
  %33 = load ptr, ptr %2, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %33, i32 0, i32 5
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %35, i32 0, i32 1
  store i64 %32, ptr %36, align 8
  ret void
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #1

declare void @jpeg_make_c_derived_tbl(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emit_restart(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store i32 %1, ptr %4, align 4
  %6 = load ptr, ptr %3, align 8
  call void @emit_eobrun(ptr noundef %6)
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %7, i32 0, i32 1
  %9 = load i32, ptr %8, align 8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %40, label %11

11:                                               ; preds = %2
  %12 = load ptr, ptr %3, align 8
  call void @flush_bits(ptr noundef %12)
  %13 = load ptr, ptr %3, align 8
  %14 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %13, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds i8, ptr %15, i32 1
  store ptr %16, ptr %14, align 8
  store i8 -1, ptr %15, align 1
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %17, i32 0, i32 3
  %19 = load i64, ptr %18, align 8
  %20 = add i64 %19, -1
  store i64 %20, ptr %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = load ptr, ptr %3, align 8
  call void @dump_buffer(ptr noundef %23)
  br label %24

24:                                               ; preds = %22, %11
  %25 = load i32, ptr %4, align 4
  %26 = add nsw i32 208, %25
  %27 = trunc i32 %26 to i8
  %28 = load ptr, ptr %3, align 8
  %29 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %28, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds i8, ptr %30, i32 1
  store ptr %31, ptr %29, align 8
  store i8 %27, ptr %30, align 1
  %32 = load ptr, ptr %3, align 8
  %33 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %32, i32 0, i32 3
  %34 = load i64, ptr %33, align 8
  %35 = add i64 %34, -1
  store i64 %35, ptr %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = load ptr, ptr %3, align 8
  call void @dump_buffer(ptr noundef %38)
  br label %39

39:                                               ; preds = %37, %24
  br label %40

40:                                               ; preds = %39, %2
  %41 = load ptr, ptr %3, align 8
  %42 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %41, i32 0, i32 6
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %43, i32 0, i32 47
  %45 = load i32, ptr %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %66

47:                                               ; preds = %40
  store i32 0, ptr %5, align 4
  br label %48

48:                                               ; preds = %62, %47
  %49 = load i32, ptr %5, align 4
  %50 = load ptr, ptr %3, align 8
  %51 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %50, i32 0, i32 6
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %52, i32 0, i32 41
  %54 = load i32, ptr %53, align 4
  %55 = icmp slt i32 %49, %54
  br i1 %55, label %56, label %65

56:                                               ; preds = %48
  %57 = load ptr, ptr %3, align 8
  %58 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %57, i32 0, i32 7
  %59 = load i32, ptr %5, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [4 x i32], ptr %58, i64 0, i64 %60
  store i32 0, ptr %61, align 4
  br label %62

62:                                               ; preds = %56
  %63 = load i32, ptr %5, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, ptr %5, align 4
  br label %48, !llvm.loop !19

65:                                               ; preds = %48
  br label %71

66:                                               ; preds = %40
  %67 = load ptr, ptr %3, align 8
  %68 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %67, i32 0, i32 9
  store i32 0, ptr %68, align 4
  %69 = load ptr, ptr %3, align 8
  %70 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %69, i32 0, i32 10
  store i32 0, ptr %70, align 8
  br label %71

71:                                               ; preds = %66, %65
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_symbol(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %8 = load ptr, ptr %4, align 8
  %9 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %8, i32 0, i32 1
  %10 = load i32, ptr %9, align 8
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %3
  %13 = load ptr, ptr %4, align 8
  %14 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %13, i32 0, i32 15
  %15 = load i32, ptr %5, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [4 x ptr], ptr %14, i64 0, i64 %16
  %18 = load ptr, ptr %17, align 8
  %19 = load i32, ptr %6, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i64, ptr %18, i64 %20
  %22 = load i64, ptr %21, align 8
  %23 = add nsw i64 %22, 1
  store i64 %23, ptr %21, align 8
  br label %45

24:                                               ; preds = %3
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %25, i32 0, i32 14
  %27 = load i32, ptr %5, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [4 x ptr], ptr %26, i64 0, i64 %28
  %30 = load ptr, ptr %29, align 8
  store ptr %30, ptr %7, align 8
  %31 = load ptr, ptr %4, align 8
  %32 = load ptr, ptr %7, align 8
  %33 = getelementptr inbounds %struct.c_derived_tbl, ptr %32, i32 0, i32 0
  %34 = load i32, ptr %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [256 x i32], ptr %33, i64 0, i64 %35
  %37 = load i32, ptr %36, align 4
  %38 = load ptr, ptr %7, align 8
  %39 = getelementptr inbounds %struct.c_derived_tbl, ptr %38, i32 0, i32 1
  %40 = load i32, ptr %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [256 x i8], ptr %39, i64 0, i64 %41
  %43 = load i8, ptr %42, align 1
  %44 = sext i8 %43 to i32
  call void @emit_bits(ptr noundef %31, i32 noundef %37, i32 noundef %44)
  br label %45

45:                                               ; preds = %24, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_bits(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %10 = load i32, ptr %5, align 4
  %11 = zext i32 %10 to i64
  store i64 %11, ptr %7, align 8
  %12 = load ptr, ptr %4, align 8
  %13 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %12, i32 0, i32 5
  %14 = load i32, ptr %13, align 8
  store i32 %14, ptr %8, align 4
  %15 = load i32, ptr %6, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %34

17:                                               ; preds = %3
  %18 = load ptr, ptr %4, align 8
  %19 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %18, i32 0, i32 6
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %20, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %22, i32 0, i32 5
  store i32 39, ptr %23, align 8
  %24 = load ptr, ptr %4, align 8
  %25 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %24, i32 0, i32 6
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %26, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %28, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %4, align 8
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %31, i32 0, i32 6
  %33 = load ptr, ptr %32, align 8
  call void %30(ptr noundef %33)
  br label %34

34:                                               ; preds = %17, %3
  %35 = load ptr, ptr %4, align 8
  %36 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  br label %109

40:                                               ; preds = %34
  %41 = load i32, ptr %6, align 4
  %42 = zext i32 %41 to i64
  %43 = shl i64 1, %42
  %44 = sub nsw i64 %43, 1
  %45 = load i64, ptr %7, align 8
  %46 = and i64 %45, %44
  store i64 %46, ptr %7, align 8
  %47 = load i32, ptr %6, align 4
  %48 = load i32, ptr %8, align 4
  %49 = add nsw i32 %48, %47
  store i32 %49, ptr %8, align 4
  %50 = load i32, ptr %8, align 4
  %51 = sub nsw i32 24, %50
  %52 = load i64, ptr %7, align 8
  %53 = zext i32 %51 to i64
  %54 = shl i64 %52, %53
  store i64 %54, ptr %7, align 8
  %55 = load ptr, ptr %4, align 8
  %56 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %55, i32 0, i32 4
  %57 = load i64, ptr %56, align 8
  %58 = load i64, ptr %7, align 8
  %59 = or i64 %58, %57
  store i64 %59, ptr %7, align 8
  br label %60

60:                                               ; preds = %97, %40
  %61 = load i32, ptr %8, align 4
  %62 = icmp sge i32 %61, 8
  br i1 %62, label %63, label %102

63:                                               ; preds = %60
  %64 = load i64, ptr %7, align 8
  %65 = ashr i64 %64, 16
  %66 = and i64 %65, 255
  %67 = trunc i64 %66 to i32
  store i32 %67, ptr %9, align 4
  %68 = load i32, ptr %9, align 4
  %69 = trunc i32 %68 to i8
  %70 = load ptr, ptr %4, align 8
  %71 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %70, i32 0, i32 2
  %72 = load ptr, ptr %71, align 8
  %73 = getelementptr inbounds i8, ptr %72, i32 1
  store ptr %73, ptr %71, align 8
  store i8 %69, ptr %72, align 1
  %74 = load ptr, ptr %4, align 8
  %75 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %74, i32 0, i32 3
  %76 = load i64, ptr %75, align 8
  %77 = add i64 %76, -1
  store i64 %77, ptr %75, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %63
  %80 = load ptr, ptr %4, align 8
  call void @dump_buffer(ptr noundef %80)
  br label %81

81:                                               ; preds = %79, %63
  %82 = load i32, ptr %9, align 4
  %83 = icmp eq i32 %82, 255
  br i1 %83, label %84, label %97

84:                                               ; preds = %81
  %85 = load ptr, ptr %4, align 8
  %86 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %85, i32 0, i32 2
  %87 = load ptr, ptr %86, align 8
  %88 = getelementptr inbounds i8, ptr %87, i32 1
  store ptr %88, ptr %86, align 8
  store i8 0, ptr %87, align 1
  %89 = load ptr, ptr %4, align 8
  %90 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %89, i32 0, i32 3
  %91 = load i64, ptr %90, align 8
  %92 = add i64 %91, -1
  store i64 %92, ptr %90, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %84
  %95 = load ptr, ptr %4, align 8
  call void @dump_buffer(ptr noundef %95)
  br label %96

96:                                               ; preds = %94, %84
  br label %97

97:                                               ; preds = %96, %81
  %98 = load i64, ptr %7, align 8
  %99 = shl i64 %98, 8
  store i64 %99, ptr %7, align 8
  %100 = load i32, ptr %8, align 4
  %101 = sub nsw i32 %100, 8
  store i32 %101, ptr %8, align 4
  br label %60, !llvm.loop !20

102:                                              ; preds = %60
  %103 = load i64, ptr %7, align 8
  %104 = load ptr, ptr %4, align 8
  %105 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %104, i32 0, i32 4
  store i64 %103, ptr %105, align 8
  %106 = load i32, ptr %8, align 4
  %107 = load ptr, ptr %4, align 8
  %108 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %107, i32 0, i32 5
  store i32 %106, ptr %108, align 8
  br label %109

109:                                              ; preds = %102, %39
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_eobrun(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %5 = load ptr, ptr %2, align 8
  %6 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %5, i32 0, i32 9
  %7 = load i32, ptr %6, align 4
  %8 = icmp ugt i32 %7, 0
  br i1 %8, label %9, label %47

9:                                                ; preds = %1
  %10 = load ptr, ptr %2, align 8
  %11 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %10, i32 0, i32 9
  %12 = load i32, ptr %11, align 4
  store i32 %12, ptr %3, align 4
  store i32 0, ptr %4, align 4
  br label %13

13:                                               ; preds = %17, %9
  %14 = load i32, ptr %3, align 4
  %15 = ashr i32 %14, 1
  store i32 %15, ptr %3, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = load i32, ptr %4, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, ptr %4, align 4
  br label %13, !llvm.loop !21

20:                                               ; preds = %13
  %21 = load ptr, ptr %2, align 8
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %22, i32 0, i32 8
  %24 = load i32, ptr %23, align 8
  %25 = load i32, ptr %4, align 4
  %26 = shl i32 %25, 4
  call void @emit_symbol(ptr noundef %21, i32 noundef %24, i32 noundef %26)
  %27 = load i32, ptr %4, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %20
  %30 = load ptr, ptr %2, align 8
  %31 = load ptr, ptr %2, align 8
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %31, i32 0, i32 9
  %33 = load i32, ptr %32, align 4
  %34 = load i32, ptr %4, align 4
  call void @emit_bits(ptr noundef %30, i32 noundef %33, i32 noundef %34)
  br label %35

35:                                               ; preds = %29, %20
  %36 = load ptr, ptr %2, align 8
  %37 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %36, i32 0, i32 9
  store i32 0, ptr %37, align 4
  %38 = load ptr, ptr %2, align 8
  %39 = load ptr, ptr %2, align 8
  %40 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %39, i32 0, i32 11
  %41 = load ptr, ptr %40, align 8
  %42 = load ptr, ptr %2, align 8
  %43 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %42, i32 0, i32 10
  %44 = load i32, ptr %43, align 8
  call void @emit_buffered_bits(ptr noundef %38, ptr noundef %41, i32 noundef %44)
  %45 = load ptr, ptr %2, align 8
  %46 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %45, i32 0, i32 10
  store i32 0, ptr %46, align 8
  br label %47

47:                                               ; preds = %35, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_bits(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  call void @emit_bits(ptr noundef %3, i32 noundef 127, i32 noundef 7)
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %4, i32 0, i32 4
  store i64 0, ptr %5, align 8
  %6 = load ptr, ptr %2, align 8
  %7 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %6, i32 0, i32 5
  store i32 0, ptr %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_buffer(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %4, i32 0, i32 6
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %6, i32 0, i32 5
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %3, align 8
  %9 = load ptr, ptr %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %9, i32 0, i32 3
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %2, align 8
  %13 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %12, i32 0, i32 6
  %14 = load ptr, ptr %13, align 8
  %15 = call i32 %11(ptr noundef %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %1
  %18 = load ptr, ptr %2, align 8
  %19 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %18, i32 0, i32 6
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %20, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %22, i32 0, i32 5
  store i32 22, ptr %23, align 8
  %24 = load ptr, ptr %2, align 8
  %25 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %24, i32 0, i32 6
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %26, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %28, i32 0, i32 0
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %2, align 8
  %32 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %31, i32 0, i32 6
  %33 = load ptr, ptr %32, align 8
  call void %30(ptr noundef %33)
  br label %34

34:                                               ; preds = %17, %1
  %35 = load ptr, ptr %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %35, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr %2, align 8
  %39 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %38, i32 0, i32 2
  store ptr %37, ptr %39, align 8
  %40 = load ptr, ptr %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_destination_mgr, ptr %40, i32 0, i32 1
  %42 = load i64, ptr %41, align 8
  %43 = load ptr, ptr %2, align 8
  %44 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %43, i32 0, i32 3
  store i64 %42, ptr %44, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_buffered_bits(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  store i32 %2, ptr %6, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = getelementptr inbounds %struct.phuff_entropy_encoder, ptr %7, i32 0, i32 1
  %9 = load i32, ptr %8, align 8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  br label %25

12:                                               ; preds = %3
  br label %13

13:                                               ; preds = %16, %12
  %14 = load i32, ptr %6, align 4
  %15 = icmp ugt i32 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %13
  %17 = load ptr, ptr %4, align 8
  %18 = load ptr, ptr %5, align 8
  %19 = load i8, ptr %18, align 1
  %20 = sext i8 %19 to i32
  call void @emit_bits(ptr noundef %17, i32 noundef %20, i32 noundef 1)
  %21 = load ptr, ptr %5, align 8
  %22 = getelementptr inbounds i8, ptr %21, i32 1
  store ptr %22, ptr %5, align 8
  %23 = load i32, ptr %6, align 4
  %24 = add i32 %23, -1
  store i32 %24, ptr %6, align 4
  br label %13, !llvm.loop !22

25:                                               ; preds = %11, %13
  ret void
}

declare ptr @jpeg_alloc_huff_table(ptr noundef) #2

declare void @jpeg_gen_optimal_table(ptr noundef, ptr noundef, ptr noundef) #2

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !7}
!20 = distinct !{!20, !7}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !7}
