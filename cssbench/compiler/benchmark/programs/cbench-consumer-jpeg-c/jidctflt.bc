; ModuleID = 'jidctflt.bc'
source_filename = "jidctflt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_decompress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], i32, ptr, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, ptr, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_idct_float(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = alloca float, align 4
  %15 = alloca float, align 4
  %16 = alloca float, align 4
  %17 = alloca float, align 4
  %18 = alloca float, align 4
  %19 = alloca float, align 4
  %20 = alloca float, align 4
  %21 = alloca float, align 4
  %22 = alloca float, align 4
  %23 = alloca float, align 4
  %24 = alloca float, align 4
  %25 = alloca float, align 4
  %26 = alloca float, align 4
  %27 = alloca float, align 4
  %28 = alloca ptr, align 8
  %29 = alloca ptr, align 8
  %30 = alloca ptr, align 8
  %31 = alloca ptr, align 8
  %32 = alloca ptr, align 8
  %33 = alloca i32, align 4
  %34 = alloca [64 x float], align 16
  %35 = alloca float, align 4
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store ptr %3, ptr %9, align 8
  store i32 %4, ptr %10, align 4
  %36 = load ptr, ptr %6, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %36, i32 0, i32 61
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds i8, ptr %38, i64 128
  store ptr %39, ptr %32, align 8
  %40 = load ptr, ptr %8, align 8
  store ptr %40, ptr %28, align 8
  %41 = load ptr, ptr %7, align 8
  %42 = getelementptr inbounds %struct.jpeg_component_info, ptr %41, i32 0, i32 20
  %43 = load ptr, ptr %42, align 8
  store ptr %43, ptr %29, align 8
  %44 = getelementptr inbounds [64 x float], ptr %34, i64 0, i64 0
  store ptr %44, ptr %30, align 8
  store i32 8, ptr %33, align 4
  br label %45

45:                                               ; preds = %300, %5
  %46 = load i32, ptr %33, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %303

48:                                               ; preds = %45
  %49 = load ptr, ptr %28, align 8
  %50 = getelementptr inbounds i16, ptr %49, i64 8
  %51 = load i16, ptr %50, align 2
  %52 = sext i16 %51 to i32
  %53 = load ptr, ptr %28, align 8
  %54 = getelementptr inbounds i16, ptr %53, i64 16
  %55 = load i16, ptr %54, align 2
  %56 = sext i16 %55 to i32
  %57 = or i32 %52, %56
  %58 = load ptr, ptr %28, align 8
  %59 = getelementptr inbounds i16, ptr %58, i64 24
  %60 = load i16, ptr %59, align 2
  %61 = sext i16 %60 to i32
  %62 = or i32 %57, %61
  %63 = load ptr, ptr %28, align 8
  %64 = getelementptr inbounds i16, ptr %63, i64 32
  %65 = load i16, ptr %64, align 2
  %66 = sext i16 %65 to i32
  %67 = or i32 %62, %66
  %68 = load ptr, ptr %28, align 8
  %69 = getelementptr inbounds i16, ptr %68, i64 40
  %70 = load i16, ptr %69, align 2
  %71 = sext i16 %70 to i32
  %72 = or i32 %67, %71
  %73 = load ptr, ptr %28, align 8
  %74 = getelementptr inbounds i16, ptr %73, i64 48
  %75 = load i16, ptr %74, align 2
  %76 = sext i16 %75 to i32
  %77 = or i32 %72, %76
  %78 = load ptr, ptr %28, align 8
  %79 = getelementptr inbounds i16, ptr %78, i64 56
  %80 = load i16, ptr %79, align 2
  %81 = sext i16 %80 to i32
  %82 = or i32 %77, %81
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %123

84:                                               ; preds = %48
  %85 = load ptr, ptr %28, align 8
  %86 = getelementptr inbounds i16, ptr %85, i64 0
  %87 = load i16, ptr %86, align 2
  %88 = sitofp i16 %87 to float
  %89 = load ptr, ptr %29, align 8
  %90 = getelementptr inbounds float, ptr %89, i64 0
  %91 = load float, ptr %90, align 4
  %92 = fmul float %88, %91
  store float %92, ptr %35, align 4
  %93 = load float, ptr %35, align 4
  %94 = load ptr, ptr %30, align 8
  %95 = getelementptr inbounds float, ptr %94, i64 0
  store float %93, ptr %95, align 4
  %96 = load float, ptr %35, align 4
  %97 = load ptr, ptr %30, align 8
  %98 = getelementptr inbounds float, ptr %97, i64 8
  store float %96, ptr %98, align 4
  %99 = load float, ptr %35, align 4
  %100 = load ptr, ptr %30, align 8
  %101 = getelementptr inbounds float, ptr %100, i64 16
  store float %99, ptr %101, align 4
  %102 = load float, ptr %35, align 4
  %103 = load ptr, ptr %30, align 8
  %104 = getelementptr inbounds float, ptr %103, i64 24
  store float %102, ptr %104, align 4
  %105 = load float, ptr %35, align 4
  %106 = load ptr, ptr %30, align 8
  %107 = getelementptr inbounds float, ptr %106, i64 32
  store float %105, ptr %107, align 4
  %108 = load float, ptr %35, align 4
  %109 = load ptr, ptr %30, align 8
  %110 = getelementptr inbounds float, ptr %109, i64 40
  store float %108, ptr %110, align 4
  %111 = load float, ptr %35, align 4
  %112 = load ptr, ptr %30, align 8
  %113 = getelementptr inbounds float, ptr %112, i64 48
  store float %111, ptr %113, align 4
  %114 = load float, ptr %35, align 4
  %115 = load ptr, ptr %30, align 8
  %116 = getelementptr inbounds float, ptr %115, i64 56
  store float %114, ptr %116, align 4
  %117 = load ptr, ptr %28, align 8
  %118 = getelementptr inbounds i16, ptr %117, i32 1
  store ptr %118, ptr %28, align 8
  %119 = load ptr, ptr %29, align 8
  %120 = getelementptr inbounds float, ptr %119, i32 1
  store ptr %120, ptr %29, align 8
  %121 = load ptr, ptr %30, align 8
  %122 = getelementptr inbounds float, ptr %121, i32 1
  store ptr %122, ptr %30, align 8
  br label %300

123:                                              ; preds = %48
  %124 = load ptr, ptr %28, align 8
  %125 = getelementptr inbounds i16, ptr %124, i64 0
  %126 = load i16, ptr %125, align 2
  %127 = sitofp i16 %126 to float
  %128 = load ptr, ptr %29, align 8
  %129 = getelementptr inbounds float, ptr %128, i64 0
  %130 = load float, ptr %129, align 4
  %131 = fmul float %127, %130
  store float %131, ptr %11, align 4
  %132 = load ptr, ptr %28, align 8
  %133 = getelementptr inbounds i16, ptr %132, i64 16
  %134 = load i16, ptr %133, align 2
  %135 = sitofp i16 %134 to float
  %136 = load ptr, ptr %29, align 8
  %137 = getelementptr inbounds float, ptr %136, i64 16
  %138 = load float, ptr %137, align 4
  %139 = fmul float %135, %138
  store float %139, ptr %12, align 4
  %140 = load ptr, ptr %28, align 8
  %141 = getelementptr inbounds i16, ptr %140, i64 32
  %142 = load i16, ptr %141, align 2
  %143 = sitofp i16 %142 to float
  %144 = load ptr, ptr %29, align 8
  %145 = getelementptr inbounds float, ptr %144, i64 32
  %146 = load float, ptr %145, align 4
  %147 = fmul float %143, %146
  store float %147, ptr %13, align 4
  %148 = load ptr, ptr %28, align 8
  %149 = getelementptr inbounds i16, ptr %148, i64 48
  %150 = load i16, ptr %149, align 2
  %151 = sitofp i16 %150 to float
  %152 = load ptr, ptr %29, align 8
  %153 = getelementptr inbounds float, ptr %152, i64 48
  %154 = load float, ptr %153, align 4
  %155 = fmul float %151, %154
  store float %155, ptr %14, align 4
  %156 = load float, ptr %11, align 4
  %157 = load float, ptr %13, align 4
  %158 = fadd float %156, %157
  store float %158, ptr %19, align 4
  %159 = load float, ptr %11, align 4
  %160 = load float, ptr %13, align 4
  %161 = fsub float %159, %160
  store float %161, ptr %20, align 4
  %162 = load float, ptr %12, align 4
  %163 = load float, ptr %14, align 4
  %164 = fadd float %162, %163
  store float %164, ptr %22, align 4
  %165 = load float, ptr %12, align 4
  %166 = load float, ptr %14, align 4
  %167 = fsub float %165, %166
  %168 = load float, ptr %22, align 4
  %169 = fneg float %168
  %170 = call float @llvm.fmuladd.f32(float %167, float 0x3FF6A09E60000000, float %169)
  store float %170, ptr %21, align 4
  %171 = load float, ptr %19, align 4
  %172 = load float, ptr %22, align 4
  %173 = fadd float %171, %172
  store float %173, ptr %11, align 4
  %174 = load float, ptr %19, align 4
  %175 = load float, ptr %22, align 4
  %176 = fsub float %174, %175
  store float %176, ptr %14, align 4
  %177 = load float, ptr %20, align 4
  %178 = load float, ptr %21, align 4
  %179 = fadd float %177, %178
  store float %179, ptr %12, align 4
  %180 = load float, ptr %20, align 4
  %181 = load float, ptr %21, align 4
  %182 = fsub float %180, %181
  store float %182, ptr %13, align 4
  %183 = load ptr, ptr %28, align 8
  %184 = getelementptr inbounds i16, ptr %183, i64 8
  %185 = load i16, ptr %184, align 2
  %186 = sitofp i16 %185 to float
  %187 = load ptr, ptr %29, align 8
  %188 = getelementptr inbounds float, ptr %187, i64 8
  %189 = load float, ptr %188, align 4
  %190 = fmul float %186, %189
  store float %190, ptr %15, align 4
  %191 = load ptr, ptr %28, align 8
  %192 = getelementptr inbounds i16, ptr %191, i64 24
  %193 = load i16, ptr %192, align 2
  %194 = sitofp i16 %193 to float
  %195 = load ptr, ptr %29, align 8
  %196 = getelementptr inbounds float, ptr %195, i64 24
  %197 = load float, ptr %196, align 4
  %198 = fmul float %194, %197
  store float %198, ptr %16, align 4
  %199 = load ptr, ptr %28, align 8
  %200 = getelementptr inbounds i16, ptr %199, i64 40
  %201 = load i16, ptr %200, align 2
  %202 = sitofp i16 %201 to float
  %203 = load ptr, ptr %29, align 8
  %204 = getelementptr inbounds float, ptr %203, i64 40
  %205 = load float, ptr %204, align 4
  %206 = fmul float %202, %205
  store float %206, ptr %17, align 4
  %207 = load ptr, ptr %28, align 8
  %208 = getelementptr inbounds i16, ptr %207, i64 56
  %209 = load i16, ptr %208, align 2
  %210 = sitofp i16 %209 to float
  %211 = load ptr, ptr %29, align 8
  %212 = getelementptr inbounds float, ptr %211, i64 56
  %213 = load float, ptr %212, align 4
  %214 = fmul float %210, %213
  store float %214, ptr %18, align 4
  %215 = load float, ptr %17, align 4
  %216 = load float, ptr %16, align 4
  %217 = fadd float %215, %216
  store float %217, ptr %27, align 4
  %218 = load float, ptr %17, align 4
  %219 = load float, ptr %16, align 4
  %220 = fsub float %218, %219
  store float %220, ptr %24, align 4
  %221 = load float, ptr %15, align 4
  %222 = load float, ptr %18, align 4
  %223 = fadd float %221, %222
  store float %223, ptr %25, align 4
  %224 = load float, ptr %15, align 4
  %225 = load float, ptr %18, align 4
  %226 = fsub float %224, %225
  store float %226, ptr %26, align 4
  %227 = load float, ptr %25, align 4
  %228 = load float, ptr %27, align 4
  %229 = fadd float %227, %228
  store float %229, ptr %18, align 4
  %230 = load float, ptr %25, align 4
  %231 = load float, ptr %27, align 4
  %232 = fsub float %230, %231
  %233 = fmul float %232, 0x3FF6A09E60000000
  store float %233, ptr %20, align 4
  %234 = load float, ptr %24, align 4
  %235 = load float, ptr %26, align 4
  %236 = fadd float %234, %235
  %237 = fmul float %236, 0x3FFD906BC0000000
  store float %237, ptr %23, align 4
  %238 = load float, ptr %26, align 4
  %239 = load float, ptr %23, align 4
  %240 = fneg float %239
  %241 = call float @llvm.fmuladd.f32(float 0x3FF1517A80000000, float %238, float %240)
  store float %241, ptr %19, align 4
  %242 = load float, ptr %24, align 4
  %243 = load float, ptr %23, align 4
  %244 = call float @llvm.fmuladd.f32(float 0xC004E7AEA0000000, float %242, float %243)
  store float %244, ptr %21, align 4
  %245 = load float, ptr %21, align 4
  %246 = load float, ptr %18, align 4
  %247 = fsub float %245, %246
  store float %247, ptr %17, align 4
  %248 = load float, ptr %20, align 4
  %249 = load float, ptr %17, align 4
  %250 = fsub float %248, %249
  store float %250, ptr %16, align 4
  %251 = load float, ptr %19, align 4
  %252 = load float, ptr %16, align 4
  %253 = fadd float %251, %252
  store float %253, ptr %15, align 4
  %254 = load float, ptr %11, align 4
  %255 = load float, ptr %18, align 4
  %256 = fadd float %254, %255
  %257 = load ptr, ptr %30, align 8
  %258 = getelementptr inbounds float, ptr %257, i64 0
  store float %256, ptr %258, align 4
  %259 = load float, ptr %11, align 4
  %260 = load float, ptr %18, align 4
  %261 = fsub float %259, %260
  %262 = load ptr, ptr %30, align 8
  %263 = getelementptr inbounds float, ptr %262, i64 56
  store float %261, ptr %263, align 4
  %264 = load float, ptr %12, align 4
  %265 = load float, ptr %17, align 4
  %266 = fadd float %264, %265
  %267 = load ptr, ptr %30, align 8
  %268 = getelementptr inbounds float, ptr %267, i64 8
  store float %266, ptr %268, align 4
  %269 = load float, ptr %12, align 4
  %270 = load float, ptr %17, align 4
  %271 = fsub float %269, %270
  %272 = load ptr, ptr %30, align 8
  %273 = getelementptr inbounds float, ptr %272, i64 48
  store float %271, ptr %273, align 4
  %274 = load float, ptr %13, align 4
  %275 = load float, ptr %16, align 4
  %276 = fadd float %274, %275
  %277 = load ptr, ptr %30, align 8
  %278 = getelementptr inbounds float, ptr %277, i64 16
  store float %276, ptr %278, align 4
  %279 = load float, ptr %13, align 4
  %280 = load float, ptr %16, align 4
  %281 = fsub float %279, %280
  %282 = load ptr, ptr %30, align 8
  %283 = getelementptr inbounds float, ptr %282, i64 40
  store float %281, ptr %283, align 4
  %284 = load float, ptr %14, align 4
  %285 = load float, ptr %15, align 4
  %286 = fadd float %284, %285
  %287 = load ptr, ptr %30, align 8
  %288 = getelementptr inbounds float, ptr %287, i64 32
  store float %286, ptr %288, align 4
  %289 = load float, ptr %14, align 4
  %290 = load float, ptr %15, align 4
  %291 = fsub float %289, %290
  %292 = load ptr, ptr %30, align 8
  %293 = getelementptr inbounds float, ptr %292, i64 24
  store float %291, ptr %293, align 4
  %294 = load ptr, ptr %28, align 8
  %295 = getelementptr inbounds i16, ptr %294, i32 1
  store ptr %295, ptr %28, align 8
  %296 = load ptr, ptr %29, align 8
  %297 = getelementptr inbounds float, ptr %296, i32 1
  store ptr %297, ptr %29, align 8
  %298 = load ptr, ptr %30, align 8
  %299 = getelementptr inbounds float, ptr %298, i32 1
  store ptr %299, ptr %30, align 8
  br label %300

300:                                              ; preds = %123, %84
  %301 = load i32, ptr %33, align 4
  %302 = add nsw i32 %301, -1
  store i32 %302, ptr %33, align 4
  br label %45, !llvm.loop !6

303:                                              ; preds = %45
  %304 = getelementptr inbounds [64 x float], ptr %34, i64 0, i64 0
  store ptr %304, ptr %30, align 8
  store i32 0, ptr %33, align 4
  br label %305

305:                                              ; preds = %529, %303
  %306 = load i32, ptr %33, align 4
  %307 = icmp slt i32 %306, 8
  br i1 %307, label %308, label %532

308:                                              ; preds = %305
  %309 = load ptr, ptr %9, align 8
  %310 = load i32, ptr %33, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds ptr, ptr %309, i64 %311
  %313 = load ptr, ptr %312, align 8
  %314 = load i32, ptr %10, align 4
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds i8, ptr %313, i64 %315
  store ptr %316, ptr %31, align 8
  %317 = load ptr, ptr %30, align 8
  %318 = getelementptr inbounds float, ptr %317, i64 0
  %319 = load float, ptr %318, align 4
  %320 = load ptr, ptr %30, align 8
  %321 = getelementptr inbounds float, ptr %320, i64 4
  %322 = load float, ptr %321, align 4
  %323 = fadd float %319, %322
  store float %323, ptr %19, align 4
  %324 = load ptr, ptr %30, align 8
  %325 = getelementptr inbounds float, ptr %324, i64 0
  %326 = load float, ptr %325, align 4
  %327 = load ptr, ptr %30, align 8
  %328 = getelementptr inbounds float, ptr %327, i64 4
  %329 = load float, ptr %328, align 4
  %330 = fsub float %326, %329
  store float %330, ptr %20, align 4
  %331 = load ptr, ptr %30, align 8
  %332 = getelementptr inbounds float, ptr %331, i64 2
  %333 = load float, ptr %332, align 4
  %334 = load ptr, ptr %30, align 8
  %335 = getelementptr inbounds float, ptr %334, i64 6
  %336 = load float, ptr %335, align 4
  %337 = fadd float %333, %336
  store float %337, ptr %22, align 4
  %338 = load ptr, ptr %30, align 8
  %339 = getelementptr inbounds float, ptr %338, i64 2
  %340 = load float, ptr %339, align 4
  %341 = load ptr, ptr %30, align 8
  %342 = getelementptr inbounds float, ptr %341, i64 6
  %343 = load float, ptr %342, align 4
  %344 = fsub float %340, %343
  %345 = load float, ptr %22, align 4
  %346 = fneg float %345
  %347 = call float @llvm.fmuladd.f32(float %344, float 0x3FF6A09E60000000, float %346)
  store float %347, ptr %21, align 4
  %348 = load float, ptr %19, align 4
  %349 = load float, ptr %22, align 4
  %350 = fadd float %348, %349
  store float %350, ptr %11, align 4
  %351 = load float, ptr %19, align 4
  %352 = load float, ptr %22, align 4
  %353 = fsub float %351, %352
  store float %353, ptr %14, align 4
  %354 = load float, ptr %20, align 4
  %355 = load float, ptr %21, align 4
  %356 = fadd float %354, %355
  store float %356, ptr %12, align 4
  %357 = load float, ptr %20, align 4
  %358 = load float, ptr %21, align 4
  %359 = fsub float %357, %358
  store float %359, ptr %13, align 4
  %360 = load ptr, ptr %30, align 8
  %361 = getelementptr inbounds float, ptr %360, i64 5
  %362 = load float, ptr %361, align 4
  %363 = load ptr, ptr %30, align 8
  %364 = getelementptr inbounds float, ptr %363, i64 3
  %365 = load float, ptr %364, align 4
  %366 = fadd float %362, %365
  store float %366, ptr %27, align 4
  %367 = load ptr, ptr %30, align 8
  %368 = getelementptr inbounds float, ptr %367, i64 5
  %369 = load float, ptr %368, align 4
  %370 = load ptr, ptr %30, align 8
  %371 = getelementptr inbounds float, ptr %370, i64 3
  %372 = load float, ptr %371, align 4
  %373 = fsub float %369, %372
  store float %373, ptr %24, align 4
  %374 = load ptr, ptr %30, align 8
  %375 = getelementptr inbounds float, ptr %374, i64 1
  %376 = load float, ptr %375, align 4
  %377 = load ptr, ptr %30, align 8
  %378 = getelementptr inbounds float, ptr %377, i64 7
  %379 = load float, ptr %378, align 4
  %380 = fadd float %376, %379
  store float %380, ptr %25, align 4
  %381 = load ptr, ptr %30, align 8
  %382 = getelementptr inbounds float, ptr %381, i64 1
  %383 = load float, ptr %382, align 4
  %384 = load ptr, ptr %30, align 8
  %385 = getelementptr inbounds float, ptr %384, i64 7
  %386 = load float, ptr %385, align 4
  %387 = fsub float %383, %386
  store float %387, ptr %26, align 4
  %388 = load float, ptr %25, align 4
  %389 = load float, ptr %27, align 4
  %390 = fadd float %388, %389
  store float %390, ptr %18, align 4
  %391 = load float, ptr %25, align 4
  %392 = load float, ptr %27, align 4
  %393 = fsub float %391, %392
  %394 = fmul float %393, 0x3FF6A09E60000000
  store float %394, ptr %20, align 4
  %395 = load float, ptr %24, align 4
  %396 = load float, ptr %26, align 4
  %397 = fadd float %395, %396
  %398 = fmul float %397, 0x3FFD906BC0000000
  store float %398, ptr %23, align 4
  %399 = load float, ptr %26, align 4
  %400 = load float, ptr %23, align 4
  %401 = fneg float %400
  %402 = call float @llvm.fmuladd.f32(float 0x3FF1517A80000000, float %399, float %401)
  store float %402, ptr %19, align 4
  %403 = load float, ptr %24, align 4
  %404 = load float, ptr %23, align 4
  %405 = call float @llvm.fmuladd.f32(float 0xC004E7AEA0000000, float %403, float %404)
  store float %405, ptr %21, align 4
  %406 = load float, ptr %21, align 4
  %407 = load float, ptr %18, align 4
  %408 = fsub float %406, %407
  store float %408, ptr %17, align 4
  %409 = load float, ptr %20, align 4
  %410 = load float, ptr %17, align 4
  %411 = fsub float %409, %410
  store float %411, ptr %16, align 4
  %412 = load float, ptr %19, align 4
  %413 = load float, ptr %16, align 4
  %414 = fadd float %412, %413
  store float %414, ptr %15, align 4
  %415 = load ptr, ptr %32, align 8
  %416 = load float, ptr %11, align 4
  %417 = load float, ptr %18, align 4
  %418 = fadd float %416, %417
  %419 = fptosi float %418 to i64
  %420 = add nsw i64 %419, 4
  %421 = ashr i64 %420, 3
  %422 = trunc i64 %421 to i32
  %423 = and i32 %422, 1023
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds i8, ptr %415, i64 %424
  %426 = load i8, ptr %425, align 1
  %427 = load ptr, ptr %31, align 8
  %428 = getelementptr inbounds i8, ptr %427, i64 0
  store i8 %426, ptr %428, align 1
  %429 = load ptr, ptr %32, align 8
  %430 = load float, ptr %11, align 4
  %431 = load float, ptr %18, align 4
  %432 = fsub float %430, %431
  %433 = fptosi float %432 to i64
  %434 = add nsw i64 %433, 4
  %435 = ashr i64 %434, 3
  %436 = trunc i64 %435 to i32
  %437 = and i32 %436, 1023
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i8, ptr %429, i64 %438
  %440 = load i8, ptr %439, align 1
  %441 = load ptr, ptr %31, align 8
  %442 = getelementptr inbounds i8, ptr %441, i64 7
  store i8 %440, ptr %442, align 1
  %443 = load ptr, ptr %32, align 8
  %444 = load float, ptr %12, align 4
  %445 = load float, ptr %17, align 4
  %446 = fadd float %444, %445
  %447 = fptosi float %446 to i64
  %448 = add nsw i64 %447, 4
  %449 = ashr i64 %448, 3
  %450 = trunc i64 %449 to i32
  %451 = and i32 %450, 1023
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds i8, ptr %443, i64 %452
  %454 = load i8, ptr %453, align 1
  %455 = load ptr, ptr %31, align 8
  %456 = getelementptr inbounds i8, ptr %455, i64 1
  store i8 %454, ptr %456, align 1
  %457 = load ptr, ptr %32, align 8
  %458 = load float, ptr %12, align 4
  %459 = load float, ptr %17, align 4
  %460 = fsub float %458, %459
  %461 = fptosi float %460 to i64
  %462 = add nsw i64 %461, 4
  %463 = ashr i64 %462, 3
  %464 = trunc i64 %463 to i32
  %465 = and i32 %464, 1023
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i8, ptr %457, i64 %466
  %468 = load i8, ptr %467, align 1
  %469 = load ptr, ptr %31, align 8
  %470 = getelementptr inbounds i8, ptr %469, i64 6
  store i8 %468, ptr %470, align 1
  %471 = load ptr, ptr %32, align 8
  %472 = load float, ptr %13, align 4
  %473 = load float, ptr %16, align 4
  %474 = fadd float %472, %473
  %475 = fptosi float %474 to i64
  %476 = add nsw i64 %475, 4
  %477 = ashr i64 %476, 3
  %478 = trunc i64 %477 to i32
  %479 = and i32 %478, 1023
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i8, ptr %471, i64 %480
  %482 = load i8, ptr %481, align 1
  %483 = load ptr, ptr %31, align 8
  %484 = getelementptr inbounds i8, ptr %483, i64 2
  store i8 %482, ptr %484, align 1
  %485 = load ptr, ptr %32, align 8
  %486 = load float, ptr %13, align 4
  %487 = load float, ptr %16, align 4
  %488 = fsub float %486, %487
  %489 = fptosi float %488 to i64
  %490 = add nsw i64 %489, 4
  %491 = ashr i64 %490, 3
  %492 = trunc i64 %491 to i32
  %493 = and i32 %492, 1023
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i8, ptr %485, i64 %494
  %496 = load i8, ptr %495, align 1
  %497 = load ptr, ptr %31, align 8
  %498 = getelementptr inbounds i8, ptr %497, i64 5
  store i8 %496, ptr %498, align 1
  %499 = load ptr, ptr %32, align 8
  %500 = load float, ptr %14, align 4
  %501 = load float, ptr %15, align 4
  %502 = fadd float %500, %501
  %503 = fptosi float %502 to i64
  %504 = add nsw i64 %503, 4
  %505 = ashr i64 %504, 3
  %506 = trunc i64 %505 to i32
  %507 = and i32 %506, 1023
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds i8, ptr %499, i64 %508
  %510 = load i8, ptr %509, align 1
  %511 = load ptr, ptr %31, align 8
  %512 = getelementptr inbounds i8, ptr %511, i64 4
  store i8 %510, ptr %512, align 1
  %513 = load ptr, ptr %32, align 8
  %514 = load float, ptr %14, align 4
  %515 = load float, ptr %15, align 4
  %516 = fsub float %514, %515
  %517 = fptosi float %516 to i64
  %518 = add nsw i64 %517, 4
  %519 = ashr i64 %518, 3
  %520 = trunc i64 %519 to i32
  %521 = and i32 %520, 1023
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds i8, ptr %513, i64 %522
  %524 = load i8, ptr %523, align 1
  %525 = load ptr, ptr %31, align 8
  %526 = getelementptr inbounds i8, ptr %525, i64 3
  store i8 %524, ptr %526, align 1
  %527 = load ptr, ptr %30, align 8
  %528 = getelementptr inbounds float, ptr %527, i64 8
  store ptr %528, ptr %30, align 8
  br label %529

529:                                              ; preds = %308
  %530 = load i32, ptr %33, align 4
  %531 = add nsw i32 %530, 1
  store i32 %531, ptr %33, align 4
  br label %305, !llvm.loop !8

532:                                              ; preds = %305
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #1

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
