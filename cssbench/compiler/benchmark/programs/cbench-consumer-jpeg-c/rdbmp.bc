; ModuleID = 'rdbmp.bc'
source_filename = "rdbmp.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_compress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, double, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], [16 x i8], [16 x i8], [16 x i8], i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_memory_mgr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64 }
%struct._bmp_source_struct = type { %struct.cjpeg_source_struct, ptr, ptr, ptr, i32, i32, i32 }
%struct.cjpeg_source_struct = type { ptr, ptr, ptr, ptr, ptr, i32 }
%struct.jpeg_error_mgr = type { ptr, ptr, ptr, ptr, ptr, i32, %union.anon, i32, i64, ptr, i32, ptr, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.cdjpeg_progress_mgr = type { %struct.jpeg_progress_mgr, i32, i32, i32 }
%struct.jpeg_progress_mgr = type { ptr, i64, i64, i32, i32 }

; Function Attrs: noinline nounwind uwtable
define dso_local ptr @jinit_read_bmp(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %4, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %6, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %2, align 8
  %10 = call ptr %8(ptr noundef %9, i32 noundef 1, i64 noundef 88)
  store ptr %10, ptr %3, align 8
  %11 = load ptr, ptr %2, align 8
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct._bmp_source_struct, ptr %12, i32 0, i32 1
  store ptr %11, ptr %13, align 8
  %14 = load ptr, ptr %3, align 8
  %15 = getelementptr inbounds %struct._bmp_source_struct, ptr %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %15, i32 0, i32 0
  store ptr @start_input_bmp, ptr %16, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct._bmp_source_struct, ptr %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %18, i32 0, i32 2
  store ptr @finish_input_bmp, ptr %19, align 8
  %20 = load ptr, ptr %3, align 8
  ret ptr %20
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_input_bmp(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca [14 x i8], align 1
  %7 = alloca [64 x i8], align 16
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %21 = load ptr, ptr %4, align 8
  store ptr %21, ptr %5, align 8
  store i64 0, ptr %10, align 8
  store i64 0, ptr %11, align 8
  store i64 0, ptr %16, align 8
  store i32 0, ptr %17, align 4
  %22 = getelementptr inbounds [14 x i8], ptr %6, i64 0, i64 0
  %23 = load ptr, ptr %5, align 8
  %24 = getelementptr inbounds %struct._bmp_source_struct, ptr %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %24, i32 0, i32 3
  %26 = load ptr, ptr %25, align 8
  %27 = call i64 @fread(ptr noundef %22, i64 noundef 1, i64 noundef 14, ptr noundef %26)
  %28 = icmp eq i64 %27, 14
  br i1 %28, label %40, label %29

29:                                               ; preds = %2
  %30 = load ptr, ptr %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %30, i32 0, i32 0
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %32, i32 0, i32 5
  store i32 42, ptr %33, align 8
  %34 = load ptr, ptr %3, align 8
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %34, i32 0, i32 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %36, i32 0, i32 0
  %38 = load ptr, ptr %37, align 8
  %39 = load ptr, ptr %3, align 8
  call void %38(ptr noundef %39)
  br label %40

40:                                               ; preds = %29, %2
  %41 = getelementptr inbounds [14 x i8], ptr %6, i64 0, i64 0
  %42 = load i8, ptr %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds [14 x i8], ptr %6, i64 0, i64 1
  %45 = load i8, ptr %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl i32 %46, 8
  %48 = add i32 %43, %47
  %49 = icmp ne i32 %48, 19778
  br i1 %49, label %50, label %61

50:                                               ; preds = %40
  %51 = load ptr, ptr %3, align 8
  %52 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %51, i32 0, i32 0
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %53, i32 0, i32 5
  store i32 1007, ptr %54, align 8
  %55 = load ptr, ptr %3, align 8
  %56 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %55, i32 0, i32 0
  %57 = load ptr, ptr %56, align 8
  %58 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %57, i32 0, i32 0
  %59 = load ptr, ptr %58, align 8
  %60 = load ptr, ptr %3, align 8
  call void %59(ptr noundef %60)
  br label %61

61:                                               ; preds = %50, %40
  %62 = getelementptr inbounds [14 x i8], ptr %6, i64 0, i64 10
  %63 = load i8, ptr %62, align 1
  %64 = zext i8 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [14 x i8], ptr %6, i64 0, i64 11
  %67 = load i8, ptr %66, align 1
  %68 = zext i8 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = shl i64 %69, 8
  %71 = add nsw i64 %65, %70
  %72 = getelementptr inbounds [14 x i8], ptr %6, i64 0, i64 12
  %73 = load i8, ptr %72, align 1
  %74 = zext i8 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = shl i64 %75, 16
  %77 = add nsw i64 %71, %76
  %78 = getelementptr inbounds [14 x i8], ptr %6, i64 0, i64 13
  %79 = load i8, ptr %78, align 1
  %80 = zext i8 %79 to i32
  %81 = sext i32 %80 to i64
  %82 = shl i64 %81, 24
  %83 = add nsw i64 %77, %82
  store i64 %83, ptr %8, align 8
  %84 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 0
  %85 = load ptr, ptr %5, align 8
  %86 = getelementptr inbounds %struct._bmp_source_struct, ptr %85, i32 0, i32 0
  %87 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %86, i32 0, i32 3
  %88 = load ptr, ptr %87, align 8
  %89 = call i64 @fread(ptr noundef %84, i64 noundef 1, i64 noundef 4, ptr noundef %88)
  %90 = icmp eq i64 %89, 4
  br i1 %90, label %102, label %91

91:                                               ; preds = %61
  %92 = load ptr, ptr %3, align 8
  %93 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %92, i32 0, i32 0
  %94 = load ptr, ptr %93, align 8
  %95 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %94, i32 0, i32 5
  store i32 42, ptr %95, align 8
  %96 = load ptr, ptr %3, align 8
  %97 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %96, i32 0, i32 0
  %98 = load ptr, ptr %97, align 8
  %99 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %98, i32 0, i32 0
  %100 = load ptr, ptr %99, align 8
  %101 = load ptr, ptr %3, align 8
  call void %100(ptr noundef %101)
  br label %102

102:                                              ; preds = %91, %61
  %103 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 0
  %104 = load i8, ptr %103, align 16
  %105 = zext i8 %104 to i32
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 1
  %108 = load i8, ptr %107, align 1
  %109 = zext i8 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = shl i64 %110, 8
  %112 = add nsw i64 %106, %111
  %113 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 2
  %114 = load i8, ptr %113, align 2
  %115 = zext i8 %114 to i32
  %116 = sext i32 %115 to i64
  %117 = shl i64 %116, 16
  %118 = add nsw i64 %112, %117
  %119 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 3
  %120 = load i8, ptr %119, align 1
  %121 = zext i8 %120 to i32
  %122 = sext i32 %121 to i64
  %123 = shl i64 %122, 24
  %124 = add nsw i64 %118, %123
  store i64 %124, ptr %9, align 8
  %125 = load i64, ptr %9, align 8
  %126 = icmp slt i64 %125, 12
  br i1 %126, label %130, label %127

127:                                              ; preds = %102
  %128 = load i64, ptr %9, align 8
  %129 = icmp sgt i64 %128, 64
  br i1 %129, label %130, label %141

130:                                              ; preds = %127, %102
  %131 = load ptr, ptr %3, align 8
  %132 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %131, i32 0, i32 0
  %133 = load ptr, ptr %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %133, i32 0, i32 5
  store i32 1003, ptr %134, align 8
  %135 = load ptr, ptr %3, align 8
  %136 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %135, i32 0, i32 0
  %137 = load ptr, ptr %136, align 8
  %138 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %137, i32 0, i32 0
  %139 = load ptr, ptr %138, align 8
  %140 = load ptr, ptr %3, align 8
  call void %139(ptr noundef %140)
  br label %141

141:                                              ; preds = %130, %127
  %142 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 0
  %143 = getelementptr inbounds i8, ptr %142, i64 4
  %144 = load i64, ptr %9, align 8
  %145 = sub nsw i64 %144, 4
  %146 = load ptr, ptr %5, align 8
  %147 = getelementptr inbounds %struct._bmp_source_struct, ptr %146, i32 0, i32 0
  %148 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %147, i32 0, i32 3
  %149 = load ptr, ptr %148, align 8
  %150 = call i64 @fread(ptr noundef %143, i64 noundef 1, i64 noundef %145, ptr noundef %149)
  %151 = load i64, ptr %9, align 8
  %152 = sub nsw i64 %151, 4
  %153 = icmp eq i64 %150, %152
  br i1 %153, label %165, label %154

154:                                              ; preds = %141
  %155 = load ptr, ptr %3, align 8
  %156 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %155, i32 0, i32 0
  %157 = load ptr, ptr %156, align 8
  %158 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %157, i32 0, i32 5
  store i32 42, ptr %158, align 8
  %159 = load ptr, ptr %3, align 8
  %160 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %159, i32 0, i32 0
  %161 = load ptr, ptr %160, align 8
  %162 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %161, i32 0, i32 0
  %163 = load ptr, ptr %162, align 8
  %164 = load ptr, ptr %3, align 8
  call void %163(ptr noundef %164)
  br label %165

165:                                              ; preds = %154, %141
  %166 = load i64, ptr %9, align 8
  %167 = trunc i64 %166 to i32
  switch i32 %167, label %547 [
    i32 12, label %168
    i32 40, label %284
    i32 64, label %284
  ]

168:                                              ; preds = %165
  %169 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 4
  %170 = load i8, ptr %169, align 4
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 5
  %173 = load i8, ptr %172, align 1
  %174 = zext i8 %173 to i32
  %175 = shl i32 %174, 8
  %176 = add i32 %171, %175
  %177 = zext i32 %176 to i64
  store i64 %177, ptr %10, align 8
  %178 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 6
  %179 = load i8, ptr %178, align 2
  %180 = zext i8 %179 to i32
  %181 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 7
  %182 = load i8, ptr %181, align 1
  %183 = zext i8 %182 to i32
  %184 = shl i32 %183, 8
  %185 = add i32 %180, %184
  %186 = zext i32 %185 to i64
  store i64 %186, ptr %11, align 8
  %187 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 8
  %188 = load i8, ptr %187, align 8
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 9
  %191 = load i8, ptr %190, align 1
  %192 = zext i8 %191 to i32
  %193 = shl i32 %192, 8
  %194 = add i32 %189, %193
  store i32 %194, ptr %12, align 4
  %195 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 10
  %196 = load i8, ptr %195, align 2
  %197 = zext i8 %196 to i32
  %198 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 11
  %199 = load i8, ptr %198, align 1
  %200 = zext i8 %199 to i32
  %201 = shl i32 %200, 8
  %202 = add i32 %197, %201
  %203 = load ptr, ptr %5, align 8
  %204 = getelementptr inbounds %struct._bmp_source_struct, ptr %203, i32 0, i32 6
  store i32 %202, ptr %204, align 8
  %205 = load ptr, ptr %5, align 8
  %206 = getelementptr inbounds %struct._bmp_source_struct, ptr %205, i32 0, i32 6
  %207 = load i32, ptr %206, align 8
  switch i32 %207, label %258 [
    i32 8, label %208
    i32 24, label %233
  ]

208:                                              ; preds = %168
  store i32 3, ptr %17, align 4
  %209 = load ptr, ptr %3, align 8
  %210 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %209, i32 0, i32 0
  %211 = load ptr, ptr %210, align 8
  %212 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %211, i32 0, i32 5
  store i32 1011, ptr %212, align 8
  %213 = load i64, ptr %10, align 8
  %214 = trunc i64 %213 to i32
  %215 = load ptr, ptr %3, align 8
  %216 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %215, i32 0, i32 0
  %217 = load ptr, ptr %216, align 8
  %218 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %217, i32 0, i32 6
  %219 = getelementptr inbounds [8 x i32], ptr %218, i64 0, i64 0
  store i32 %214, ptr %219, align 4
  %220 = load i64, ptr %11, align 8
  %221 = trunc i64 %220 to i32
  %222 = load ptr, ptr %3, align 8
  %223 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %222, i32 0, i32 0
  %224 = load ptr, ptr %223, align 8
  %225 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %224, i32 0, i32 6
  %226 = getelementptr inbounds [8 x i32], ptr %225, i64 0, i64 1
  store i32 %221, ptr %226, align 4
  %227 = load ptr, ptr %3, align 8
  %228 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %227, i32 0, i32 0
  %229 = load ptr, ptr %228, align 8
  %230 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %229, i32 0, i32 1
  %231 = load ptr, ptr %230, align 8
  %232 = load ptr, ptr %3, align 8
  call void %231(ptr noundef %232, i32 noundef 1)
  br label %269

233:                                              ; preds = %168
  %234 = load ptr, ptr %3, align 8
  %235 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %234, i32 0, i32 0
  %236 = load ptr, ptr %235, align 8
  %237 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %236, i32 0, i32 5
  store i32 1010, ptr %237, align 8
  %238 = load i64, ptr %10, align 8
  %239 = trunc i64 %238 to i32
  %240 = load ptr, ptr %3, align 8
  %241 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %240, i32 0, i32 0
  %242 = load ptr, ptr %241, align 8
  %243 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %242, i32 0, i32 6
  %244 = getelementptr inbounds [8 x i32], ptr %243, i64 0, i64 0
  store i32 %239, ptr %244, align 4
  %245 = load i64, ptr %11, align 8
  %246 = trunc i64 %245 to i32
  %247 = load ptr, ptr %3, align 8
  %248 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %247, i32 0, i32 0
  %249 = load ptr, ptr %248, align 8
  %250 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %249, i32 0, i32 6
  %251 = getelementptr inbounds [8 x i32], ptr %250, i64 0, i64 1
  store i32 %246, ptr %251, align 4
  %252 = load ptr, ptr %3, align 8
  %253 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %252, i32 0, i32 0
  %254 = load ptr, ptr %253, align 8
  %255 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %254, i32 0, i32 1
  %256 = load ptr, ptr %255, align 8
  %257 = load ptr, ptr %3, align 8
  call void %256(ptr noundef %257, i32 noundef 1)
  br label %269

258:                                              ; preds = %168
  %259 = load ptr, ptr %3, align 8
  %260 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %259, i32 0, i32 0
  %261 = load ptr, ptr %260, align 8
  %262 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %261, i32 0, i32 5
  store i32 1002, ptr %262, align 8
  %263 = load ptr, ptr %3, align 8
  %264 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %263, i32 0, i32 0
  %265 = load ptr, ptr %264, align 8
  %266 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %265, i32 0, i32 0
  %267 = load ptr, ptr %266, align 8
  %268 = load ptr, ptr %3, align 8
  call void %267(ptr noundef %268)
  br label %269

269:                                              ; preds = %258, %233, %208
  %270 = load i32, ptr %12, align 4
  %271 = icmp ne i32 %270, 1
  br i1 %271, label %272, label %283

272:                                              ; preds = %269
  %273 = load ptr, ptr %3, align 8
  %274 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %273, i32 0, i32 0
  %275 = load ptr, ptr %274, align 8
  %276 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %275, i32 0, i32 5
  store i32 1004, ptr %276, align 8
  %277 = load ptr, ptr %3, align 8
  %278 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %277, i32 0, i32 0
  %279 = load ptr, ptr %278, align 8
  %280 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %279, i32 0, i32 0
  %281 = load ptr, ptr %280, align 8
  %282 = load ptr, ptr %3, align 8
  call void %281(ptr noundef %282)
  br label %283

283:                                              ; preds = %272, %269
  br label %558

284:                                              ; preds = %165, %165
  %285 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 4
  %286 = load i8, ptr %285, align 4
  %287 = zext i8 %286 to i32
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 5
  %290 = load i8, ptr %289, align 1
  %291 = zext i8 %290 to i32
  %292 = sext i32 %291 to i64
  %293 = shl i64 %292, 8
  %294 = add nsw i64 %288, %293
  %295 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 6
  %296 = load i8, ptr %295, align 2
  %297 = zext i8 %296 to i32
  %298 = sext i32 %297 to i64
  %299 = shl i64 %298, 16
  %300 = add nsw i64 %294, %299
  %301 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 7
  %302 = load i8, ptr %301, align 1
  %303 = zext i8 %302 to i32
  %304 = sext i32 %303 to i64
  %305 = shl i64 %304, 24
  %306 = add nsw i64 %300, %305
  store i64 %306, ptr %10, align 8
  %307 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 8
  %308 = load i8, ptr %307, align 8
  %309 = zext i8 %308 to i32
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 9
  %312 = load i8, ptr %311, align 1
  %313 = zext i8 %312 to i32
  %314 = sext i32 %313 to i64
  %315 = shl i64 %314, 8
  %316 = add nsw i64 %310, %315
  %317 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 10
  %318 = load i8, ptr %317, align 2
  %319 = zext i8 %318 to i32
  %320 = sext i32 %319 to i64
  %321 = shl i64 %320, 16
  %322 = add nsw i64 %316, %321
  %323 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 11
  %324 = load i8, ptr %323, align 1
  %325 = zext i8 %324 to i32
  %326 = sext i32 %325 to i64
  %327 = shl i64 %326, 24
  %328 = add nsw i64 %322, %327
  store i64 %328, ptr %11, align 8
  %329 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 12
  %330 = load i8, ptr %329, align 4
  %331 = zext i8 %330 to i32
  %332 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 13
  %333 = load i8, ptr %332, align 1
  %334 = zext i8 %333 to i32
  %335 = shl i32 %334, 8
  %336 = add i32 %331, %335
  store i32 %336, ptr %12, align 4
  %337 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 14
  %338 = load i8, ptr %337, align 2
  %339 = zext i8 %338 to i32
  %340 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 15
  %341 = load i8, ptr %340, align 1
  %342 = zext i8 %341 to i32
  %343 = shl i32 %342, 8
  %344 = add i32 %339, %343
  %345 = load ptr, ptr %5, align 8
  %346 = getelementptr inbounds %struct._bmp_source_struct, ptr %345, i32 0, i32 6
  store i32 %344, ptr %346, align 8
  %347 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 16
  %348 = load i8, ptr %347, align 16
  %349 = zext i8 %348 to i32
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 17
  %352 = load i8, ptr %351, align 1
  %353 = zext i8 %352 to i32
  %354 = sext i32 %353 to i64
  %355 = shl i64 %354, 8
  %356 = add nsw i64 %350, %355
  %357 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 18
  %358 = load i8, ptr %357, align 2
  %359 = zext i8 %358 to i32
  %360 = sext i32 %359 to i64
  %361 = shl i64 %360, 16
  %362 = add nsw i64 %356, %361
  %363 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 19
  %364 = load i8, ptr %363, align 1
  %365 = zext i8 %364 to i32
  %366 = sext i32 %365 to i64
  %367 = shl i64 %366, 24
  %368 = add nsw i64 %362, %367
  store i64 %368, ptr %13, align 8
  %369 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 24
  %370 = load i8, ptr %369, align 8
  %371 = zext i8 %370 to i32
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 25
  %374 = load i8, ptr %373, align 1
  %375 = zext i8 %374 to i32
  %376 = sext i32 %375 to i64
  %377 = shl i64 %376, 8
  %378 = add nsw i64 %372, %377
  %379 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 26
  %380 = load i8, ptr %379, align 2
  %381 = zext i8 %380 to i32
  %382 = sext i32 %381 to i64
  %383 = shl i64 %382, 16
  %384 = add nsw i64 %378, %383
  %385 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 27
  %386 = load i8, ptr %385, align 1
  %387 = zext i8 %386 to i32
  %388 = sext i32 %387 to i64
  %389 = shl i64 %388, 24
  %390 = add nsw i64 %384, %389
  store i64 %390, ptr %14, align 8
  %391 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 28
  %392 = load i8, ptr %391, align 4
  %393 = zext i8 %392 to i32
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 29
  %396 = load i8, ptr %395, align 1
  %397 = zext i8 %396 to i32
  %398 = sext i32 %397 to i64
  %399 = shl i64 %398, 8
  %400 = add nsw i64 %394, %399
  %401 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 30
  %402 = load i8, ptr %401, align 2
  %403 = zext i8 %402 to i32
  %404 = sext i32 %403 to i64
  %405 = shl i64 %404, 16
  %406 = add nsw i64 %400, %405
  %407 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 31
  %408 = load i8, ptr %407, align 1
  %409 = zext i8 %408 to i32
  %410 = sext i32 %409 to i64
  %411 = shl i64 %410, 24
  %412 = add nsw i64 %406, %411
  store i64 %412, ptr %15, align 8
  %413 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 32
  %414 = load i8, ptr %413, align 16
  %415 = zext i8 %414 to i32
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 33
  %418 = load i8, ptr %417, align 1
  %419 = zext i8 %418 to i32
  %420 = sext i32 %419 to i64
  %421 = shl i64 %420, 8
  %422 = add nsw i64 %416, %421
  %423 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 34
  %424 = load i8, ptr %423, align 2
  %425 = zext i8 %424 to i32
  %426 = sext i32 %425 to i64
  %427 = shl i64 %426, 16
  %428 = add nsw i64 %422, %427
  %429 = getelementptr inbounds [64 x i8], ptr %7, i64 0, i64 35
  %430 = load i8, ptr %429, align 1
  %431 = zext i8 %430 to i32
  %432 = sext i32 %431 to i64
  %433 = shl i64 %432, 24
  %434 = add nsw i64 %428, %433
  store i64 %434, ptr %16, align 8
  %435 = load ptr, ptr %5, align 8
  %436 = getelementptr inbounds %struct._bmp_source_struct, ptr %435, i32 0, i32 6
  %437 = load i32, ptr %436, align 8
  switch i32 %437, label %488 [
    i32 8, label %438
    i32 24, label %463
  ]

438:                                              ; preds = %284
  store i32 4, ptr %17, align 4
  %439 = load ptr, ptr %3, align 8
  %440 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %439, i32 0, i32 0
  %441 = load ptr, ptr %440, align 8
  %442 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %441, i32 0, i32 5
  store i32 1009, ptr %442, align 8
  %443 = load i64, ptr %10, align 8
  %444 = trunc i64 %443 to i32
  %445 = load ptr, ptr %3, align 8
  %446 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %445, i32 0, i32 0
  %447 = load ptr, ptr %446, align 8
  %448 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %447, i32 0, i32 6
  %449 = getelementptr inbounds [8 x i32], ptr %448, i64 0, i64 0
  store i32 %444, ptr %449, align 4
  %450 = load i64, ptr %11, align 8
  %451 = trunc i64 %450 to i32
  %452 = load ptr, ptr %3, align 8
  %453 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %452, i32 0, i32 0
  %454 = load ptr, ptr %453, align 8
  %455 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %454, i32 0, i32 6
  %456 = getelementptr inbounds [8 x i32], ptr %455, i64 0, i64 1
  store i32 %451, ptr %456, align 4
  %457 = load ptr, ptr %3, align 8
  %458 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %457, i32 0, i32 0
  %459 = load ptr, ptr %458, align 8
  %460 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %459, i32 0, i32 1
  %461 = load ptr, ptr %460, align 8
  %462 = load ptr, ptr %3, align 8
  call void %461(ptr noundef %462, i32 noundef 1)
  br label %499

463:                                              ; preds = %284
  %464 = load ptr, ptr %3, align 8
  %465 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %464, i32 0, i32 0
  %466 = load ptr, ptr %465, align 8
  %467 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %466, i32 0, i32 5
  store i32 1008, ptr %467, align 8
  %468 = load i64, ptr %10, align 8
  %469 = trunc i64 %468 to i32
  %470 = load ptr, ptr %3, align 8
  %471 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %470, i32 0, i32 0
  %472 = load ptr, ptr %471, align 8
  %473 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %472, i32 0, i32 6
  %474 = getelementptr inbounds [8 x i32], ptr %473, i64 0, i64 0
  store i32 %469, ptr %474, align 4
  %475 = load i64, ptr %11, align 8
  %476 = trunc i64 %475 to i32
  %477 = load ptr, ptr %3, align 8
  %478 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %477, i32 0, i32 0
  %479 = load ptr, ptr %478, align 8
  %480 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %479, i32 0, i32 6
  %481 = getelementptr inbounds [8 x i32], ptr %480, i64 0, i64 1
  store i32 %476, ptr %481, align 4
  %482 = load ptr, ptr %3, align 8
  %483 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %482, i32 0, i32 0
  %484 = load ptr, ptr %483, align 8
  %485 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %484, i32 0, i32 1
  %486 = load ptr, ptr %485, align 8
  %487 = load ptr, ptr %3, align 8
  call void %486(ptr noundef %487, i32 noundef 1)
  br label %499

488:                                              ; preds = %284
  %489 = load ptr, ptr %3, align 8
  %490 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %489, i32 0, i32 0
  %491 = load ptr, ptr %490, align 8
  %492 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %491, i32 0, i32 5
  store i32 1002, ptr %492, align 8
  %493 = load ptr, ptr %3, align 8
  %494 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %493, i32 0, i32 0
  %495 = load ptr, ptr %494, align 8
  %496 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %495, i32 0, i32 0
  %497 = load ptr, ptr %496, align 8
  %498 = load ptr, ptr %3, align 8
  call void %497(ptr noundef %498)
  br label %499

499:                                              ; preds = %488, %463, %438
  %500 = load i32, ptr %12, align 4
  %501 = icmp ne i32 %500, 1
  br i1 %501, label %502, label %513

502:                                              ; preds = %499
  %503 = load ptr, ptr %3, align 8
  %504 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %503, i32 0, i32 0
  %505 = load ptr, ptr %504, align 8
  %506 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %505, i32 0, i32 5
  store i32 1004, ptr %506, align 8
  %507 = load ptr, ptr %3, align 8
  %508 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %507, i32 0, i32 0
  %509 = load ptr, ptr %508, align 8
  %510 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %509, i32 0, i32 0
  %511 = load ptr, ptr %510, align 8
  %512 = load ptr, ptr %3, align 8
  call void %511(ptr noundef %512)
  br label %513

513:                                              ; preds = %502, %499
  %514 = load i64, ptr %13, align 8
  %515 = icmp ne i64 %514, 0
  br i1 %515, label %516, label %527

516:                                              ; preds = %513
  %517 = load ptr, ptr %3, align 8
  %518 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %517, i32 0, i32 0
  %519 = load ptr, ptr %518, align 8
  %520 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %519, i32 0, i32 5
  store i32 1006, ptr %520, align 8
  %521 = load ptr, ptr %3, align 8
  %522 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %521, i32 0, i32 0
  %523 = load ptr, ptr %522, align 8
  %524 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %523, i32 0, i32 0
  %525 = load ptr, ptr %524, align 8
  %526 = load ptr, ptr %3, align 8
  call void %525(ptr noundef %526)
  br label %527

527:                                              ; preds = %516, %513
  %528 = load i64, ptr %14, align 8
  %529 = icmp sgt i64 %528, 0
  br i1 %529, label %530, label %546

530:                                              ; preds = %527
  %531 = load i64, ptr %15, align 8
  %532 = icmp sgt i64 %531, 0
  br i1 %532, label %533, label %546

533:                                              ; preds = %530
  %534 = load i64, ptr %14, align 8
  %535 = sdiv i64 %534, 100
  %536 = trunc i64 %535 to i16
  %537 = load ptr, ptr %3, align 8
  %538 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %537, i32 0, i32 33
  store i16 %536, ptr %538, align 2
  %539 = load i64, ptr %15, align 8
  %540 = sdiv i64 %539, 100
  %541 = trunc i64 %540 to i16
  %542 = load ptr, ptr %3, align 8
  %543 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %542, i32 0, i32 34
  store i16 %541, ptr %543, align 8
  %544 = load ptr, ptr %3, align 8
  %545 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %544, i32 0, i32 32
  store i8 2, ptr %545, align 4
  br label %546

546:                                              ; preds = %533, %530, %527
  br label %558

547:                                              ; preds = %165
  %548 = load ptr, ptr %3, align 8
  %549 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %548, i32 0, i32 0
  %550 = load ptr, ptr %549, align 8
  %551 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %550, i32 0, i32 5
  store i32 1003, ptr %551, align 8
  %552 = load ptr, ptr %3, align 8
  %553 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %552, i32 0, i32 0
  %554 = load ptr, ptr %553, align 8
  %555 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %554, i32 0, i32 0
  %556 = load ptr, ptr %555, align 8
  %557 = load ptr, ptr %3, align 8
  call void %556(ptr noundef %557)
  br label %558

558:                                              ; preds = %547, %546, %283
  %559 = load i64, ptr %8, align 8
  %560 = load i64, ptr %9, align 8
  %561 = add nsw i64 %560, 14
  %562 = sub nsw i64 %559, %561
  store i64 %562, ptr %18, align 8
  %563 = load i32, ptr %17, align 4
  %564 = icmp sgt i32 %563, 0
  br i1 %564, label %565, label %606

565:                                              ; preds = %558
  %566 = load i64, ptr %16, align 8
  %567 = icmp sle i64 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  store i64 256, ptr %16, align 8
  br label %584

569:                                              ; preds = %565
  %570 = load i64, ptr %16, align 8
  %571 = icmp sgt i64 %570, 256
  br i1 %571, label %572, label %583

572:                                              ; preds = %569
  %573 = load ptr, ptr %3, align 8
  %574 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %573, i32 0, i32 0
  %575 = load ptr, ptr %574, align 8
  %576 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %575, i32 0, i32 5
  store i32 1001, ptr %576, align 8
  %577 = load ptr, ptr %3, align 8
  %578 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %577, i32 0, i32 0
  %579 = load ptr, ptr %578, align 8
  %580 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %579, i32 0, i32 0
  %581 = load ptr, ptr %580, align 8
  %582 = load ptr, ptr %3, align 8
  call void %581(ptr noundef %582)
  br label %583

583:                                              ; preds = %572, %569
  br label %584

584:                                              ; preds = %583, %568
  %585 = load ptr, ptr %3, align 8
  %586 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %585, i32 0, i32 1
  %587 = load ptr, ptr %586, align 8
  %588 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %587, i32 0, i32 2
  %589 = load ptr, ptr %588, align 8
  %590 = load ptr, ptr %3, align 8
  %591 = load i64, ptr %16, align 8
  %592 = trunc i64 %591 to i32
  %593 = call ptr %589(ptr noundef %590, i32 noundef 1, i32 noundef %592, i32 noundef 3)
  %594 = load ptr, ptr %5, align 8
  %595 = getelementptr inbounds %struct._bmp_source_struct, ptr %594, i32 0, i32 2
  store ptr %593, ptr %595, align 8
  %596 = load ptr, ptr %5, align 8
  %597 = load i64, ptr %16, align 8
  %598 = trunc i64 %597 to i32
  %599 = load i32, ptr %17, align 4
  call void @read_colormap(ptr noundef %596, i32 noundef %598, i32 noundef %599)
  %600 = load i64, ptr %16, align 8
  %601 = load i32, ptr %17, align 4
  %602 = sext i32 %601 to i64
  %603 = mul nsw i64 %600, %602
  %604 = load i64, ptr %18, align 8
  %605 = sub nsw i64 %604, %603
  store i64 %605, ptr %18, align 8
  br label %606

606:                                              ; preds = %584, %558
  %607 = load i64, ptr %18, align 8
  %608 = icmp slt i64 %607, 0
  br i1 %608, label %609, label %620

609:                                              ; preds = %606
  %610 = load ptr, ptr %3, align 8
  %611 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %610, i32 0, i32 0
  %612 = load ptr, ptr %611, align 8
  %613 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %612, i32 0, i32 5
  store i32 1003, ptr %613, align 8
  %614 = load ptr, ptr %3, align 8
  %615 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %614, i32 0, i32 0
  %616 = load ptr, ptr %615, align 8
  %617 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %616, i32 0, i32 0
  %618 = load ptr, ptr %617, align 8
  %619 = load ptr, ptr %3, align 8
  call void %618(ptr noundef %619)
  br label %620

620:                                              ; preds = %609, %606
  br label %621

621:                                              ; preds = %625, %620
  %622 = load i64, ptr %18, align 8
  %623 = add nsw i64 %622, -1
  store i64 %623, ptr %18, align 8
  %624 = icmp sge i64 %623, 0
  br i1 %624, label %625, label %628

625:                                              ; preds = %621
  %626 = load ptr, ptr %5, align 8
  %627 = call i32 @read_byte(ptr noundef %626)
  br label %621, !llvm.loop !6

628:                                              ; preds = %621
  %629 = load ptr, ptr %5, align 8
  %630 = getelementptr inbounds %struct._bmp_source_struct, ptr %629, i32 0, i32 6
  %631 = load i32, ptr %630, align 8
  %632 = icmp eq i32 %631, 24
  br i1 %632, label %633, label %637

633:                                              ; preds = %628
  %634 = load i64, ptr %10, align 8
  %635 = mul nsw i64 %634, 3
  %636 = trunc i64 %635 to i32
  store i32 %636, ptr %19, align 4
  br label %640

637:                                              ; preds = %628
  %638 = load i64, ptr %10, align 8
  %639 = trunc i64 %638 to i32
  store i32 %639, ptr %19, align 4
  br label %640

640:                                              ; preds = %637, %633
  br label %641

641:                                              ; preds = %645, %640
  %642 = load i32, ptr %19, align 4
  %643 = and i32 %642, 3
  %644 = icmp ne i32 %643, 0
  br i1 %644, label %645, label %648

645:                                              ; preds = %641
  %646 = load i32, ptr %19, align 4
  %647 = add i32 %646, 1
  store i32 %647, ptr %19, align 4
  br label %641, !llvm.loop !8

648:                                              ; preds = %641
  %649 = load i32, ptr %19, align 4
  %650 = load ptr, ptr %5, align 8
  %651 = getelementptr inbounds %struct._bmp_source_struct, ptr %650, i32 0, i32 5
  store i32 %649, ptr %651, align 4
  %652 = load ptr, ptr %3, align 8
  %653 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %652, i32 0, i32 1
  %654 = load ptr, ptr %653, align 8
  %655 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %654, i32 0, i32 4
  %656 = load ptr, ptr %655, align 8
  %657 = load ptr, ptr %3, align 8
  %658 = load i32, ptr %19, align 4
  %659 = load i64, ptr %11, align 8
  %660 = trunc i64 %659 to i32
  %661 = call ptr %656(ptr noundef %657, i32 noundef 1, i32 noundef 0, i32 noundef %658, i32 noundef %660, i32 noundef 1)
  %662 = load ptr, ptr %5, align 8
  %663 = getelementptr inbounds %struct._bmp_source_struct, ptr %662, i32 0, i32 3
  store ptr %661, ptr %663, align 8
  %664 = load ptr, ptr %5, align 8
  %665 = getelementptr inbounds %struct._bmp_source_struct, ptr %664, i32 0, i32 0
  %666 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %665, i32 0, i32 1
  store ptr @preload_image, ptr %666, align 8
  %667 = load ptr, ptr %3, align 8
  %668 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %667, i32 0, i32 2
  %669 = load ptr, ptr %668, align 8
  %670 = icmp ne ptr %669, null
  br i1 %670, label %671, label %679

671:                                              ; preds = %648
  %672 = load ptr, ptr %3, align 8
  %673 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %672, i32 0, i32 2
  %674 = load ptr, ptr %673, align 8
  store ptr %674, ptr %20, align 8
  %675 = load ptr, ptr %20, align 8
  %676 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %675, i32 0, i32 2
  %677 = load i32, ptr %676, align 4
  %678 = add nsw i32 %677, 1
  store i32 %678, ptr %676, align 4
  br label %679

679:                                              ; preds = %671, %648
  %680 = load ptr, ptr %3, align 8
  %681 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %680, i32 0, i32 1
  %682 = load ptr, ptr %681, align 8
  %683 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %682, i32 0, i32 2
  %684 = load ptr, ptr %683, align 8
  %685 = load ptr, ptr %3, align 8
  %686 = load i64, ptr %10, align 8
  %687 = mul nsw i64 %686, 3
  %688 = trunc i64 %687 to i32
  %689 = call ptr %684(ptr noundef %685, i32 noundef 1, i32 noundef %688, i32 noundef 1)
  %690 = load ptr, ptr %5, align 8
  %691 = getelementptr inbounds %struct._bmp_source_struct, ptr %690, i32 0, i32 0
  %692 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %691, i32 0, i32 4
  store ptr %689, ptr %692, align 8
  %693 = load ptr, ptr %5, align 8
  %694 = getelementptr inbounds %struct._bmp_source_struct, ptr %693, i32 0, i32 0
  %695 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %694, i32 0, i32 5
  store i32 1, ptr %695, align 8
  %696 = load ptr, ptr %3, align 8
  %697 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %696, i32 0, i32 9
  store i32 2, ptr %697, align 4
  %698 = load ptr, ptr %3, align 8
  %699 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %698, i32 0, i32 8
  store i32 3, ptr %699, align 8
  %700 = load ptr, ptr %3, align 8
  %701 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %700, i32 0, i32 11
  store i32 8, ptr %701, align 8
  %702 = load i64, ptr %10, align 8
  %703 = trunc i64 %702 to i32
  %704 = load ptr, ptr %3, align 8
  %705 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %704, i32 0, i32 6
  store i32 %703, ptr %705, align 8
  %706 = load i64, ptr %11, align 8
  %707 = trunc i64 %706 to i32
  %708 = load ptr, ptr %3, align 8
  %709 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %708, i32 0, i32 7
  store i32 %707, ptr %709, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_input_bmp(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  ret void
}

declare i64 @fread(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #1

; Function Attrs: noinline nounwind uwtable
define internal void @read_colormap(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %8 = load i32, ptr %6, align 4
  switch i32 %8, label %97 [
    i32 3, label %9
    i32 4, label %52
  ]

9:                                                ; preds = %3
  store i32 0, ptr %7, align 4
  br label %10

10:                                               ; preds = %48, %9
  %11 = load i32, ptr %7, align 4
  %12 = load i32, ptr %5, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %51

14:                                               ; preds = %10
  %15 = load ptr, ptr %4, align 8
  %16 = call i32 @read_byte(ptr noundef %15)
  %17 = trunc i32 %16 to i8
  %18 = load ptr, ptr %4, align 8
  %19 = getelementptr inbounds %struct._bmp_source_struct, ptr %18, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 2
  %22 = load ptr, ptr %21, align 8
  %23 = load i32, ptr %7, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, ptr %22, i64 %24
  store i8 %17, ptr %25, align 1
  %26 = load ptr, ptr %4, align 8
  %27 = call i32 @read_byte(ptr noundef %26)
  %28 = trunc i32 %27 to i8
  %29 = load ptr, ptr %4, align 8
  %30 = getelementptr inbounds %struct._bmp_source_struct, ptr %29, i32 0, i32 2
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 1
  %33 = load ptr, ptr %32, align 8
  %34 = load i32, ptr %7, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, ptr %33, i64 %35
  store i8 %28, ptr %36, align 1
  %37 = load ptr, ptr %4, align 8
  %38 = call i32 @read_byte(ptr noundef %37)
  %39 = trunc i32 %38 to i8
  %40 = load ptr, ptr %4, align 8
  %41 = getelementptr inbounds %struct._bmp_source_struct, ptr %40, i32 0, i32 2
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 0
  %44 = load ptr, ptr %43, align 8
  %45 = load i32, ptr %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, ptr %44, i64 %46
  store i8 %39, ptr %47, align 1
  br label %48

48:                                               ; preds = %14
  %49 = load i32, ptr %7, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, ptr %7, align 4
  br label %10, !llvm.loop !9

51:                                               ; preds = %10
  br label %114

52:                                               ; preds = %3
  store i32 0, ptr %7, align 4
  br label %53

53:                                               ; preds = %93, %52
  %54 = load i32, ptr %7, align 4
  %55 = load i32, ptr %5, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %96

57:                                               ; preds = %53
  %58 = load ptr, ptr %4, align 8
  %59 = call i32 @read_byte(ptr noundef %58)
  %60 = trunc i32 %59 to i8
  %61 = load ptr, ptr %4, align 8
  %62 = getelementptr inbounds %struct._bmp_source_struct, ptr %61, i32 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 2
  %65 = load ptr, ptr %64, align 8
  %66 = load i32, ptr %7, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, ptr %65, i64 %67
  store i8 %60, ptr %68, align 1
  %69 = load ptr, ptr %4, align 8
  %70 = call i32 @read_byte(ptr noundef %69)
  %71 = trunc i32 %70 to i8
  %72 = load ptr, ptr %4, align 8
  %73 = getelementptr inbounds %struct._bmp_source_struct, ptr %72, i32 0, i32 2
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 1
  %76 = load ptr, ptr %75, align 8
  %77 = load i32, ptr %7, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, ptr %76, i64 %78
  store i8 %71, ptr %79, align 1
  %80 = load ptr, ptr %4, align 8
  %81 = call i32 @read_byte(ptr noundef %80)
  %82 = trunc i32 %81 to i8
  %83 = load ptr, ptr %4, align 8
  %84 = getelementptr inbounds %struct._bmp_source_struct, ptr %83, i32 0, i32 2
  %85 = load ptr, ptr %84, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 0
  %87 = load ptr, ptr %86, align 8
  %88 = load i32, ptr %7, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, ptr %87, i64 %89
  store i8 %82, ptr %90, align 1
  %91 = load ptr, ptr %4, align 8
  %92 = call i32 @read_byte(ptr noundef %91)
  br label %93

93:                                               ; preds = %57
  %94 = load i32, ptr %7, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, ptr %7, align 4
  br label %53, !llvm.loop !10

96:                                               ; preds = %53
  br label %114

97:                                               ; preds = %3
  %98 = load ptr, ptr %4, align 8
  %99 = getelementptr inbounds %struct._bmp_source_struct, ptr %98, i32 0, i32 1
  %100 = load ptr, ptr %99, align 8
  %101 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %100, i32 0, i32 0
  %102 = load ptr, ptr %101, align 8
  %103 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %102, i32 0, i32 5
  store i32 1001, ptr %103, align 8
  %104 = load ptr, ptr %4, align 8
  %105 = getelementptr inbounds %struct._bmp_source_struct, ptr %104, i32 0, i32 1
  %106 = load ptr, ptr %105, align 8
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %106, i32 0, i32 0
  %108 = load ptr, ptr %107, align 8
  %109 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %108, i32 0, i32 0
  %110 = load ptr, ptr %109, align 8
  %111 = load ptr, ptr %4, align 8
  %112 = getelementptr inbounds %struct._bmp_source_struct, ptr %111, i32 0, i32 1
  %113 = load ptr, ptr %112, align 8
  call void %110(ptr noundef %113)
  br label %114

114:                                              ; preds = %97, %96, %51
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @read_byte(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %5 = load ptr, ptr %2, align 8
  %6 = getelementptr inbounds %struct._bmp_source_struct, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %6, i32 0, i32 3
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %3, align 8
  %9 = load ptr, ptr %3, align 8
  %10 = call i32 @getc(ptr noundef %9)
  store i32 %10, ptr %4, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %29

12:                                               ; preds = %1
  %13 = load ptr, ptr %2, align 8
  %14 = getelementptr inbounds %struct._bmp_source_struct, ptr %13, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %15, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %17, i32 0, i32 5
  store i32 42, ptr %18, align 8
  %19 = load ptr, ptr %2, align 8
  %20 = getelementptr inbounds %struct._bmp_source_struct, ptr %19, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %21, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %23, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %2, align 8
  %27 = getelementptr inbounds %struct._bmp_source_struct, ptr %26, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  call void %25(ptr noundef %28)
  br label %29

29:                                               ; preds = %12, %1
  %30 = load i32, ptr %4, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @preload_image(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %13 = load ptr, ptr %4, align 8
  store ptr %13, ptr %5, align 8
  %14 = load ptr, ptr %5, align 8
  %15 = getelementptr inbounds %struct._bmp_source_struct, ptr %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %15, i32 0, i32 3
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %6, align 8
  %18 = load ptr, ptr %3, align 8
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %18, i32 0, i32 2
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %12, align 8
  store i32 0, ptr %10, align 4
  br label %21

21:                                               ; preds = %93, %2
  %22 = load i32, ptr %10, align 4
  %23 = load ptr, ptr %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %23, i32 0, i32 7
  %25 = load i32, ptr %24, align 4
  %26 = icmp ult i32 %22, %25
  br i1 %26, label %27, label %96

27:                                               ; preds = %21
  %28 = load ptr, ptr %12, align 8
  %29 = icmp ne ptr %28, null
  br i1 %29, label %30, label %48

30:                                               ; preds = %27
  %31 = load i32, ptr %10, align 4
  %32 = zext i32 %31 to i64
  %33 = load ptr, ptr %12, align 8
  %34 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %33, i32 0, i32 0
  %35 = getelementptr inbounds %struct.jpeg_progress_mgr, ptr %34, i32 0, i32 1
  store i64 %32, ptr %35, align 8
  %36 = load ptr, ptr %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %36, i32 0, i32 7
  %38 = load i32, ptr %37, align 4
  %39 = zext i32 %38 to i64
  %40 = load ptr, ptr %12, align 8
  %41 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %40, i32 0, i32 0
  %42 = getelementptr inbounds %struct.jpeg_progress_mgr, ptr %41, i32 0, i32 2
  store i64 %39, ptr %42, align 8
  %43 = load ptr, ptr %12, align 8
  %44 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %43, i32 0, i32 0
  %45 = getelementptr inbounds %struct.jpeg_progress_mgr, ptr %44, i32 0, i32 0
  %46 = load ptr, ptr %45, align 8
  %47 = load ptr, ptr %3, align 8
  call void %46(ptr noundef %47)
  br label %48

48:                                               ; preds = %30, %27
  %49 = load ptr, ptr %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %49, i32 0, i32 1
  %51 = load ptr, ptr %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %51, i32 0, i32 7
  %53 = load ptr, ptr %52, align 8
  %54 = load ptr, ptr %3, align 8
  %55 = load ptr, ptr %5, align 8
  %56 = getelementptr inbounds %struct._bmp_source_struct, ptr %55, i32 0, i32 3
  %57 = load ptr, ptr %56, align 8
  %58 = load i32, ptr %10, align 4
  %59 = call ptr %53(ptr noundef %54, ptr noundef %57, i32 noundef %58, i32 noundef 1, i32 noundef 1)
  store ptr %59, ptr %9, align 8
  %60 = load ptr, ptr %9, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 0
  %62 = load ptr, ptr %61, align 8
  store ptr %62, ptr %8, align 8
  %63 = load ptr, ptr %5, align 8
  %64 = getelementptr inbounds %struct._bmp_source_struct, ptr %63, i32 0, i32 5
  %65 = load i32, ptr %64, align 4
  store i32 %65, ptr %11, align 4
  br label %66

66:                                               ; preds = %89, %48
  %67 = load i32, ptr %11, align 4
  %68 = icmp ugt i32 %67, 0
  br i1 %68, label %69, label %92

69:                                               ; preds = %66
  %70 = load ptr, ptr %6, align 8
  %71 = call i32 @getc(ptr noundef %70)
  store i32 %71, ptr %7, align 4
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %84

73:                                               ; preds = %69
  %74 = load ptr, ptr %3, align 8
  %75 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %74, i32 0, i32 0
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %76, i32 0, i32 5
  store i32 42, ptr %77, align 8
  %78 = load ptr, ptr %3, align 8
  %79 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %78, i32 0, i32 0
  %80 = load ptr, ptr %79, align 8
  %81 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %80, i32 0, i32 0
  %82 = load ptr, ptr %81, align 8
  %83 = load ptr, ptr %3, align 8
  call void %82(ptr noundef %83)
  br label %84

84:                                               ; preds = %73, %69
  %85 = load i32, ptr %7, align 4
  %86 = trunc i32 %85 to i8
  %87 = load ptr, ptr %8, align 8
  %88 = getelementptr inbounds i8, ptr %87, i32 1
  store ptr %88, ptr %8, align 8
  store i8 %86, ptr %87, align 1
  br label %89

89:                                               ; preds = %84
  %90 = load i32, ptr %11, align 4
  %91 = add i32 %90, -1
  store i32 %91, ptr %11, align 4
  br label %66, !llvm.loop !11

92:                                               ; preds = %66
  br label %93

93:                                               ; preds = %92
  %94 = load i32, ptr %10, align 4
  %95 = add i32 %94, 1
  store i32 %95, ptr %10, align 4
  br label %21, !llvm.loop !12

96:                                               ; preds = %21
  %97 = load ptr, ptr %12, align 8
  %98 = icmp ne ptr %97, null
  br i1 %98, label %99, label %104

99:                                               ; preds = %96
  %100 = load ptr, ptr %12, align 8
  %101 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %100, i32 0, i32 1
  %102 = load i32, ptr %101, align 8
  %103 = add nsw i32 %102, 1
  store i32 %103, ptr %101, align 8
  br label %104

104:                                              ; preds = %99, %96
  %105 = load ptr, ptr %5, align 8
  %106 = getelementptr inbounds %struct._bmp_source_struct, ptr %105, i32 0, i32 6
  %107 = load i32, ptr %106, align 8
  switch i32 %107, label %116 [
    i32 8, label %108
    i32 24, label %112
  ]

108:                                              ; preds = %104
  %109 = load ptr, ptr %5, align 8
  %110 = getelementptr inbounds %struct._bmp_source_struct, ptr %109, i32 0, i32 0
  %111 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %110, i32 0, i32 1
  store ptr @get_8bit_row, ptr %111, align 8
  br label %127

112:                                              ; preds = %104
  %113 = load ptr, ptr %5, align 8
  %114 = getelementptr inbounds %struct._bmp_source_struct, ptr %113, i32 0, i32 0
  %115 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %114, i32 0, i32 1
  store ptr @get_24bit_row, ptr %115, align 8
  br label %127

116:                                              ; preds = %104
  %117 = load ptr, ptr %3, align 8
  %118 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %117, i32 0, i32 0
  %119 = load ptr, ptr %118, align 8
  %120 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %119, i32 0, i32 5
  store i32 1002, ptr %120, align 8
  %121 = load ptr, ptr %3, align 8
  %122 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %121, i32 0, i32 0
  %123 = load ptr, ptr %122, align 8
  %124 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %123, i32 0, i32 0
  %125 = load ptr, ptr %124, align 8
  %126 = load ptr, ptr %3, align 8
  call void %125(ptr noundef %126)
  br label %127

127:                                              ; preds = %116, %112, %108
  %128 = load ptr, ptr %3, align 8
  %129 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %128, i32 0, i32 7
  %130 = load i32, ptr %129, align 4
  %131 = load ptr, ptr %5, align 8
  %132 = getelementptr inbounds %struct._bmp_source_struct, ptr %131, i32 0, i32 4
  store i32 %130, ptr %132, align 8
  %133 = load ptr, ptr %5, align 8
  %134 = getelementptr inbounds %struct._bmp_source_struct, ptr %133, i32 0, i32 0
  %135 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %134, i32 0, i32 1
  %136 = load ptr, ptr %135, align 8
  %137 = load ptr, ptr %3, align 8
  %138 = load ptr, ptr %4, align 8
  %139 = call i32 %136(ptr noundef %137, ptr noundef %138)
  ret i32 %139
}

declare i32 @getc(ptr noundef) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_8bit_row(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %12 = load ptr, ptr %4, align 8
  store ptr %12, ptr %5, align 8
  %13 = load ptr, ptr %5, align 8
  %14 = getelementptr inbounds %struct._bmp_source_struct, ptr %13, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %6, align 8
  %16 = load ptr, ptr %5, align 8
  %17 = getelementptr inbounds %struct._bmp_source_struct, ptr %16, i32 0, i32 4
  %18 = load i32, ptr %17, align 8
  %19 = add i32 %18, -1
  store i32 %19, ptr %17, align 8
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %20, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %22, i32 0, i32 7
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %3, align 8
  %26 = load ptr, ptr %5, align 8
  %27 = getelementptr inbounds %struct._bmp_source_struct, ptr %26, i32 0, i32 3
  %28 = load ptr, ptr %27, align 8
  %29 = load ptr, ptr %5, align 8
  %30 = getelementptr inbounds %struct._bmp_source_struct, ptr %29, i32 0, i32 4
  %31 = load i32, ptr %30, align 8
  %32 = call ptr %24(ptr noundef %25, ptr noundef %28, i32 noundef %31, i32 noundef 1, i32 noundef 0)
  store ptr %32, ptr %7, align 8
  %33 = load ptr, ptr %7, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 0
  %35 = load ptr, ptr %34, align 8
  store ptr %35, ptr %9, align 8
  %36 = load ptr, ptr %5, align 8
  %37 = getelementptr inbounds %struct._bmp_source_struct, ptr %36, i32 0, i32 0
  %38 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %37, i32 0, i32 4
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 0
  %41 = load ptr, ptr %40, align 8
  store ptr %41, ptr %10, align 8
  %42 = load ptr, ptr %3, align 8
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %42, i32 0, i32 6
  %44 = load i32, ptr %43, align 8
  store i32 %44, ptr %11, align 4
  br label %45

45:                                               ; preds = %80, %2
  %46 = load i32, ptr %11, align 4
  %47 = icmp ugt i32 %46, 0
  br i1 %47, label %48, label %83

48:                                               ; preds = %45
  %49 = load ptr, ptr %9, align 8
  %50 = getelementptr inbounds i8, ptr %49, i32 1
  store ptr %50, ptr %9, align 8
  %51 = load i8, ptr %49, align 1
  %52 = zext i8 %51 to i32
  store i32 %52, ptr %8, align 4
  %53 = load ptr, ptr %6, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 0
  %55 = load ptr, ptr %54, align 8
  %56 = load i32, ptr %8, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  %59 = load i8, ptr %58, align 1
  %60 = load ptr, ptr %10, align 8
  %61 = getelementptr inbounds i8, ptr %60, i32 1
  store ptr %61, ptr %10, align 8
  store i8 %59, ptr %60, align 1
  %62 = load ptr, ptr %6, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 1
  %64 = load ptr, ptr %63, align 8
  %65 = load i32, ptr %8, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, ptr %64, i64 %66
  %68 = load i8, ptr %67, align 1
  %69 = load ptr, ptr %10, align 8
  %70 = getelementptr inbounds i8, ptr %69, i32 1
  store ptr %70, ptr %10, align 8
  store i8 %68, ptr %69, align 1
  %71 = load ptr, ptr %6, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 2
  %73 = load ptr, ptr %72, align 8
  %74 = load i32, ptr %8, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, ptr %73, i64 %75
  %77 = load i8, ptr %76, align 1
  %78 = load ptr, ptr %10, align 8
  %79 = getelementptr inbounds i8, ptr %78, i32 1
  store ptr %79, ptr %10, align 8
  store i8 %77, ptr %78, align 1
  br label %80

80:                                               ; preds = %48
  %81 = load i32, ptr %11, align 4
  %82 = add i32 %81, -1
  store i32 %82, ptr %11, align 4
  br label %45, !llvm.loop !13

83:                                               ; preds = %45
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_24bit_row(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %10 = load ptr, ptr %4, align 8
  store ptr %10, ptr %5, align 8
  %11 = load ptr, ptr %5, align 8
  %12 = getelementptr inbounds %struct._bmp_source_struct, ptr %11, i32 0, i32 4
  %13 = load i32, ptr %12, align 8
  %14 = add i32 %13, -1
  store i32 %14, ptr %12, align 8
  %15 = load ptr, ptr %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %15, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %17, i32 0, i32 7
  %19 = load ptr, ptr %18, align 8
  %20 = load ptr, ptr %3, align 8
  %21 = load ptr, ptr %5, align 8
  %22 = getelementptr inbounds %struct._bmp_source_struct, ptr %21, i32 0, i32 3
  %23 = load ptr, ptr %22, align 8
  %24 = load ptr, ptr %5, align 8
  %25 = getelementptr inbounds %struct._bmp_source_struct, ptr %24, i32 0, i32 4
  %26 = load i32, ptr %25, align 8
  %27 = call ptr %19(ptr noundef %20, ptr noundef %23, i32 noundef %26, i32 noundef 1, i32 noundef 0)
  store ptr %27, ptr %6, align 8
  %28 = load ptr, ptr %6, align 8
  %29 = getelementptr inbounds ptr, ptr %28, i64 0
  %30 = load ptr, ptr %29, align 8
  store ptr %30, ptr %7, align 8
  %31 = load ptr, ptr %5, align 8
  %32 = getelementptr inbounds %struct._bmp_source_struct, ptr %31, i32 0, i32 0
  %33 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %32, i32 0, i32 4
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds ptr, ptr %34, i64 0
  %36 = load ptr, ptr %35, align 8
  store ptr %36, ptr %8, align 8
  %37 = load ptr, ptr %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %37, i32 0, i32 6
  %39 = load i32, ptr %38, align 8
  store i32 %39, ptr %9, align 4
  br label %40

40:                                               ; preds = %61, %2
  %41 = load i32, ptr %9, align 4
  %42 = icmp ugt i32 %41, 0
  br i1 %42, label %43, label %64

43:                                               ; preds = %40
  %44 = load ptr, ptr %7, align 8
  %45 = getelementptr inbounds i8, ptr %44, i32 1
  store ptr %45, ptr %7, align 8
  %46 = load i8, ptr %44, align 1
  %47 = load ptr, ptr %8, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 2
  store i8 %46, ptr %48, align 1
  %49 = load ptr, ptr %7, align 8
  %50 = getelementptr inbounds i8, ptr %49, i32 1
  store ptr %50, ptr %7, align 8
  %51 = load i8, ptr %49, align 1
  %52 = load ptr, ptr %8, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 1
  store i8 %51, ptr %53, align 1
  %54 = load ptr, ptr %7, align 8
  %55 = getelementptr inbounds i8, ptr %54, i32 1
  store ptr %55, ptr %7, align 8
  %56 = load i8, ptr %54, align 1
  %57 = load ptr, ptr %8, align 8
  %58 = getelementptr inbounds i8, ptr %57, i64 0
  store i8 %56, ptr %58, align 1
  %59 = load ptr, ptr %8, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 3
  store ptr %60, ptr %8, align 8
  br label %61

61:                                               ; preds = %43
  %62 = load i32, ptr %9, align 4
  %63 = add i32 %62, -1
  store i32 %63, ptr %9, align 4
  br label %40, !llvm.loop !14

64:                                               ; preds = %40
  ret i32 1
}

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
