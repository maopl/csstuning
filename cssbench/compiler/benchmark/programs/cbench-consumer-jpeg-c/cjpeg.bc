; ModuleID = 'cjpeg.bc'
source_filename = "cjpeg.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_compress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, double, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], [16 x i8], [16 x i8], [16 x i8], i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_error_mgr = type { ptr, ptr, ptr, ptr, ptr, i32, %union.anon, i32, i64, ptr, i32, ptr, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.cjpeg_source_struct = type { ptr, ptr, ptr, ptr, ptr, i32 }
%struct.jpeg_memory_mgr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64 }

@progname = internal global ptr null, align 8
@.str = private unnamed_addr constant [6 x i8] c"cjpeg\00", align 1
@cdjpeg_message_table = internal constant [44 x ptr] [ptr null, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr null], align 16
@stderr = external global ptr, align 8
@.str.1 = private unnamed_addr constant [25 x i8] c"%s: only one input file\0A\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"%s: can't open %s\0A\00", align 1
@outfilename = internal global ptr null, align 8
@.str.4 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@stdin = external global ptr, align 8
@stdout = external global ptr, align 8
@.str.5 = private unnamed_addr constant [32 x i8] c"Unsupported BMP colormap format\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"Only 8- and 24-bit BMP files are supported\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"Invalid BMP file: bad header length\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"Invalid BMP file: biPlanes not equal to 1\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"BMP output must be grayscale or RGB\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"Sorry, compressed BMPs not yet supported\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"Not a BMP file - does not start with BM\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"%ux%u 24-bit BMP image\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"%ux%u 8-bit colormapped BMP image\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"%ux%u 24-bit OS2 BMP image\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"%ux%u 8-bit colormapped OS2 BMP image\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"GIF output got confused\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Bogus GIF codesize %d\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"GIF output must be grayscale or RGB\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"Too few images in GIF file\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"Not a GIF file\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"%ux%ux%d GIF image\00", align 1
@.str.22 = private unnamed_addr constant [48 x i8] c"Warning: unexpected GIF version number '%c%c%c'\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"Ignoring GIF extension block of type 0x%02x\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"Caution: nonsquare pixels in input\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"Corrupt data in GIF file\00", align 1
@.str.26 = private unnamed_addr constant [40 x i8] c"Bogus char 0x%02x in GIF file, ignoring\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"Premature end of GIF image\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"Ran out of GIF bits\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"PPM output must be grayscale or RGB\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Nonnumeric data in PPM file\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"Not a PPM file\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"%ux%u PGM image\00", align 1
@.str.33 = private unnamed_addr constant [21 x i8] c"%ux%u text PGM image\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"%ux%u PPM image\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"%ux%u text PPM image\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"Unsupported Targa colormap format\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"Invalid or unsupported Targa file\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"Targa output must be grayscale or RGB\00", align 1
@.str.39 = private unnamed_addr constant [22 x i8] c"%ux%u RGB Targa image\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"%ux%u grayscale Targa image\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"%ux%u colormapped Targa image\00", align 1
@.str.42 = private unnamed_addr constant [51 x i8] c"Color map file is invalid or of unsupported format\00", align 1
@.str.43 = private unnamed_addr constant [53 x i8] c"Output file format cannot handle %d colormap entries\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"ungetc failed\00", align 1
@.str.45 = private unnamed_addr constant [59 x i8] c"Unrecognized input file format --- perhaps you need -targa\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c"Unsupported output file format\00", align 1
@is_targa = internal global i32 0, align 4
@.str.47 = private unnamed_addr constant [11 x i8] c"arithmetic\00", align 1
@.str.48 = private unnamed_addr constant [44 x i8] c"%s: sorry, arithmetic coding not supported\0A\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"baseline\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"dct\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@parse_switches.printed_version = internal global i32 0, align 4
@.str.56 = private unnamed_addr constant [47 x i8] c"Independent JPEG Group's CJPEG, version %s\0A%s\0A\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"6a  7-Feb-96\00", align 1
@.str.58 = private unnamed_addr constant [35 x i8] c"Copyright (C) 1996, Thomas G. Lane\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"grayscale\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"greyscale\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"maxmemory\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"%ld%c\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"optimise\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"outfile\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"progressive\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"quality\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"qslots\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"qtables\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"scans\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"smooth\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"targa\00", align 1
@.str.76 = private unnamed_addr constant [22 x i8] c"usage: %s [switches] \00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"[inputfile]\0A\00", align 1
@.str.78 = private unnamed_addr constant [38 x i8] c"Switches (names may be abbreviated):\0A\00", align 1
@.str.79 = private unnamed_addr constant [69 x i8] c"  -quality N     Compression quality (0..100; 5-95 is useful range)\0A\00", align 1
@.str.80 = private unnamed_addr constant [46 x i8] c"  -grayscale     Create monochrome JPEG file\0A\00", align 1
@.str.81 = private unnamed_addr constant [78 x i8] c"  -optimize      Optimize Huffman table (smaller file, but slow compression)\0A\00", align 1
@.str.82 = private unnamed_addr constant [47 x i8] c"  -progressive   Create progressive JPEG file\0A\00", align 1
@.str.83 = private unnamed_addr constant [66 x i8] c"  -targa         Input file is Targa format (usually not needed)\0A\00", align 1
@.str.84 = private unnamed_addr constant [30 x i8] c"Switches for advanced users:\0A\00", align 1
@.str.85 = private unnamed_addr constant [43 x i8] c"  -dct int       Use integer DCT method%s\0A\00", align 1
@.str.86 = private unnamed_addr constant [11 x i8] c" (default)\00", align 1
@.str.87 = private unnamed_addr constant [57 x i8] c"  -dct fast      Use fast integer DCT (less accurate)%s\0A\00", align 1
@.str.88 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.89 = private unnamed_addr constant [50 x i8] c"  -dct float     Use floating-point DCT method%s\0A\00", align 1
@.str.90 = private unnamed_addr constant [68 x i8] c"  -restart N     Set restart interval in rows, or in blocks with B\0A\00", align 1
@.str.91 = private unnamed_addr constant [63 x i8] c"  -smooth N      Smooth dithered input (N=1..100 is strength)\0A\00", align 1
@.str.92 = private unnamed_addr constant [52 x i8] c"  -maxmemory N   Maximum memory to use (in kbytes)\0A\00", align 1
@.str.93 = private unnamed_addr constant [47 x i8] c"  -outfile name  Specify name for output file\0A\00", align 1
@.str.94 = private unnamed_addr constant [44 x i8] c"  -verbose  or  -debug   Emit debug output\0A\00", align 1
@.str.95 = private unnamed_addr constant [23 x i8] c"Switches for wizards:\0A\00", align 1
@.str.96 = private unnamed_addr constant [40 x i8] c"  -baseline      Force baseline output\0A\00", align 1
@.str.97 = private unnamed_addr constant [56 x i8] c"  -qtables file  Use quantization tables given in file\0A\00", align 1
@.str.98 = private unnamed_addr constant [56 x i8] c"  -qslots N[,...]    Set component quantization tables\0A\00", align 1
@.str.99 = private unnamed_addr constant [53 x i8] c"  -sample HxV[,...]  Set component sampling factors\0A\00", align 1
@.str.100 = private unnamed_addr constant [57 x i8] c"  -scans file    Create multi-scan JPEG per script file\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main1(i32 noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca %struct.jpeg_compress_struct, align 8
  %6 = alloca %struct.jpeg_error_mgr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  store ptr %1, ptr %4, align 8
  %13 = load ptr, ptr %4, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 0
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr @progname, align 8
  %16 = load ptr, ptr @progname, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %2
  %19 = load ptr, ptr @progname, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 0
  %21 = load i8, ptr %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %18, %2
  store ptr @.str, ptr @progname, align 8
  br label %25

25:                                               ; preds = %24, %18
  %26 = call ptr @jpeg_std_error(ptr noundef %6)
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %5, i32 0, i32 0
  store ptr %26, ptr %27, align 8
  call void @jpeg_CreateCompress(ptr noundef %5, i32 noundef 61, i64 noundef 496)
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %6, i32 0, i32 11
  store ptr @cdjpeg_message_table, ptr %28, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %6, i32 0, i32 12
  store i32 1000, ptr %29, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %6, i32 0, i32 13
  store i32 1043, ptr %30, align 4
  %31 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %5, i32 0, i32 9
  store i32 2, ptr %31, align 4
  call void @jpeg_set_defaults(ptr noundef %5)
  %32 = load i32, ptr %3, align 4
  %33 = load ptr, ptr %4, align 8
  %34 = call i32 @parse_switches(ptr noundef %5, i32 noundef %32, ptr noundef %33, i32 noundef 0, i32 noundef 0)
  store i32 %34, ptr %7, align 4
  %35 = load i32, ptr %7, align 4
  %36 = load i32, ptr %3, align 4
  %37 = sub nsw i32 %36, 1
  %38 = icmp slt i32 %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %25
  %40 = load ptr, ptr @stderr, align 8
  %41 = load ptr, ptr @progname, align 8
  %42 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %40, ptr noundef @.str.1, ptr noundef %41)
  call void @usage()
  br label %43

43:                                               ; preds = %39, %25
  %44 = load i32, ptr %7, align 4
  %45 = load i32, ptr %3, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %65

47:                                               ; preds = %43
  %48 = load ptr, ptr %4, align 8
  %49 = load i32, ptr %7, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds ptr, ptr %48, i64 %50
  %52 = load ptr, ptr %51, align 8
  %53 = call ptr @fopen(ptr noundef %52, ptr noundef @.str.2)
  store ptr %53, ptr %9, align 8
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %64

55:                                               ; preds = %47
  %56 = load ptr, ptr @stderr, align 8
  %57 = load ptr, ptr @progname, align 8
  %58 = load ptr, ptr %4, align 8
  %59 = load i32, ptr %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds ptr, ptr %58, i64 %60
  %62 = load ptr, ptr %61, align 8
  %63 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %56, ptr noundef @.str.3, ptr noundef %57, ptr noundef %62)
  call void @exit(i32 noundef 1) #4
  unreachable

64:                                               ; preds = %47
  br label %67

65:                                               ; preds = %43
  %66 = call ptr @read_stdin()
  store ptr %66, ptr %9, align 8
  br label %67

67:                                               ; preds = %65, %64
  %68 = load ptr, ptr @outfilename, align 8
  %69 = icmp ne ptr %68, null
  br i1 %69, label %70, label %80

70:                                               ; preds = %67
  %71 = load ptr, ptr @outfilename, align 8
  %72 = call ptr @fopen(ptr noundef %71, ptr noundef @.str.4)
  store ptr %72, ptr %10, align 8
  %73 = icmp eq ptr %72, null
  br i1 %73, label %74, label %79

74:                                               ; preds = %70
  %75 = load ptr, ptr @stderr, align 8
  %76 = load ptr, ptr @progname, align 8
  %77 = load ptr, ptr @outfilename, align 8
  %78 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %75, ptr noundef @.str.3, ptr noundef %76, ptr noundef %77)
  call void @exit(i32 noundef 1) #4
  unreachable

79:                                               ; preds = %70
  br label %82

80:                                               ; preds = %67
  %81 = call ptr @write_stdout()
  store ptr %81, ptr %10, align 8
  br label %82

82:                                               ; preds = %80, %79
  %83 = load ptr, ptr %9, align 8
  %84 = call ptr @select_file_type(ptr noundef %5, ptr noundef %83)
  store ptr %84, ptr %8, align 8
  %85 = load ptr, ptr %9, align 8
  %86 = load ptr, ptr %8, align 8
  %87 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %86, i32 0, i32 3
  store ptr %85, ptr %87, align 8
  %88 = load ptr, ptr %8, align 8
  %89 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %88, i32 0, i32 0
  %90 = load ptr, ptr %89, align 8
  %91 = load ptr, ptr %8, align 8
  call void %90(ptr noundef %5, ptr noundef %91)
  call void @jpeg_default_colorspace(ptr noundef %5)
  %92 = load i32, ptr %3, align 4
  %93 = load ptr, ptr %4, align 8
  %94 = call i32 @parse_switches(ptr noundef %5, i32 noundef %92, ptr noundef %93, i32 noundef 0, i32 noundef 1)
  store i32 %94, ptr %7, align 4
  %95 = load ptr, ptr %10, align 8
  call void @jpeg_stdio_dest(ptr noundef %5, ptr noundef %95)
  call void @jpeg_start_compress(ptr noundef %5, i32 noundef 1)
  store i32 0, ptr %12, align 4
  br label %96

96:                                               ; preds = %102, %82
  %97 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %5, i32 0, i32 36
  %98 = load i32, ptr %97, align 8
  %99 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %5, i32 0, i32 7
  %100 = load i32, ptr %99, align 4
  %101 = icmp ult i32 %98, %100
  br i1 %101, label %102, label %113

102:                                              ; preds = %96
  %103 = load ptr, ptr %8, align 8
  %104 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %103, i32 0, i32 1
  %105 = load ptr, ptr %104, align 8
  %106 = load ptr, ptr %8, align 8
  %107 = call i32 %105(ptr noundef %5, ptr noundef %106)
  store i32 %107, ptr %11, align 4
  %108 = load ptr, ptr %8, align 8
  %109 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %108, i32 0, i32 4
  %110 = load ptr, ptr %109, align 8
  %111 = load i32, ptr %11, align 4
  %112 = call i32 @jpeg_write_scanlines(ptr noundef %5, ptr noundef %110, i32 noundef %111)
  br label %96, !llvm.loop !6

113:                                              ; preds = %96
  %114 = load ptr, ptr %8, align 8
  %115 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %114, i32 0, i32 2
  %116 = load ptr, ptr %115, align 8
  %117 = load ptr, ptr %8, align 8
  call void %116(ptr noundef %5, ptr noundef %117)
  call void @jpeg_finish_compress(ptr noundef %5)
  call void @jpeg_destroy_compress(ptr noundef %5)
  %118 = load ptr, ptr %9, align 8
  %119 = load ptr, ptr @stdin, align 8
  %120 = icmp ne ptr %118, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %113
  %122 = load ptr, ptr %9, align 8
  %123 = call i32 @fclose(ptr noundef %122)
  br label %124

124:                                              ; preds = %121, %113
  %125 = load ptr, ptr %10, align 8
  %126 = load ptr, ptr @stdout, align 8
  %127 = icmp ne ptr %125, %126
  br i1 %127, label %128, label %131

128:                                              ; preds = %124
  %129 = load ptr, ptr %10, align 8
  %130 = call i32 @fclose(ptr noundef %129)
  br label %131

131:                                              ; preds = %128, %124
  ret i32 0
}

declare ptr @jpeg_std_error(ptr noundef) #1

declare void @jpeg_CreateCompress(ptr noundef, i32 noundef, i64 noundef) #1

declare void @jpeg_set_defaults(ptr noundef) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @parse_switches(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8, align 1
  %23 = alloca i64, align 8
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  store ptr %0, ptr %6, align 8
  store i32 %1, ptr %7, align 4
  store ptr %2, ptr %8, align 8
  store i32 %3, ptr %9, align 4
  store i32 %4, ptr %10, align 4
  store ptr null, ptr %17, align 8
  store ptr null, ptr %18, align 8
  store ptr null, ptr %19, align 8
  store ptr null, ptr %20, align 8
  store i32 75, ptr %13, align 4
  store i32 100, ptr %14, align 4
  store i32 0, ptr %15, align 4
  store i32 0, ptr %16, align 4
  store i32 0, ptr @is_targa, align 4
  store ptr null, ptr @outfilename, align 8
  %26 = load ptr, ptr %6, align 8
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %26, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %28, i32 0, i32 7
  store i32 0, ptr %29, align 4
  store i32 1, ptr %11, align 4
  br label %30

30:                                               ; preds = %398, %5
  %31 = load i32, ptr %11, align 4
  %32 = load i32, ptr %7, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %401

34:                                               ; preds = %30
  %35 = load ptr, ptr %8, align 8
  %36 = load i32, ptr %11, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds ptr, ptr %35, i64 %37
  %39 = load ptr, ptr %38, align 8
  store ptr %39, ptr %12, align 8
  %40 = load ptr, ptr %12, align 8
  %41 = load i8, ptr %40, align 1
  %42 = sext i8 %41 to i32
  %43 = icmp ne i32 %42, 45
  br i1 %43, label %44, label %50

44:                                               ; preds = %34
  %45 = load i32, ptr %11, align 4
  %46 = load i32, ptr %9, align 4
  %47 = icmp sle i32 %45, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store ptr null, ptr @outfilename, align 8
  br label %398

49:                                               ; preds = %44
  br label %401

50:                                               ; preds = %34
  %51 = load ptr, ptr %12, align 8
  %52 = getelementptr inbounds i8, ptr %51, i32 1
  store ptr %52, ptr %12, align 8
  %53 = load ptr, ptr %12, align 8
  %54 = call i32 @keymatch(ptr noundef %53, ptr noundef @.str.47, i32 noundef 1)
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %50
  %57 = load ptr, ptr @stderr, align 8
  %58 = load ptr, ptr @progname, align 8
  %59 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %57, ptr noundef @.str.48, ptr noundef %58)
  call void @exit(i32 noundef 1) #4
  unreachable

60:                                               ; preds = %50
  %61 = load ptr, ptr %12, align 8
  %62 = call i32 @keymatch(ptr noundef %61, ptr noundef @.str.49, i32 noundef 1)
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  store i32 1, ptr %15, align 4
  br label %396

65:                                               ; preds = %60
  %66 = load ptr, ptr %12, align 8
  %67 = call i32 @keymatch(ptr noundef %66, ptr noundef @.str.50, i32 noundef 2)
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %112

69:                                               ; preds = %65
  %70 = load i32, ptr %11, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, ptr %11, align 4
  %72 = load i32, ptr %7, align 4
  %73 = icmp sge i32 %71, %72
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  call void @usage()
  br label %75

75:                                               ; preds = %74, %69
  %76 = load ptr, ptr %8, align 8
  %77 = load i32, ptr %11, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds ptr, ptr %76, i64 %78
  %80 = load ptr, ptr %79, align 8
  %81 = call i32 @keymatch(ptr noundef %80, ptr noundef @.str.51, i32 noundef 1)
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %75
  %84 = load ptr, ptr %6, align 8
  %85 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %84, i32 0, i32 28
  store i32 0, ptr %85, align 4
  br label %111

86:                                               ; preds = %75
  %87 = load ptr, ptr %8, align 8
  %88 = load i32, ptr %11, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds ptr, ptr %87, i64 %89
  %91 = load ptr, ptr %90, align 8
  %92 = call i32 @keymatch(ptr noundef %91, ptr noundef @.str.52, i32 noundef 2)
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %86
  %95 = load ptr, ptr %6, align 8
  %96 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %95, i32 0, i32 28
  store i32 1, ptr %96, align 4
  br label %110

97:                                               ; preds = %86
  %98 = load ptr, ptr %8, align 8
  %99 = load i32, ptr %11, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds ptr, ptr %98, i64 %100
  %102 = load ptr, ptr %101, align 8
  %103 = call i32 @keymatch(ptr noundef %102, ptr noundef @.str.53, i32 noundef 2)
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %97
  %106 = load ptr, ptr %6, align 8
  %107 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %106, i32 0, i32 28
  store i32 2, ptr %107, align 4
  br label %109

108:                                              ; preds = %97
  call void @usage()
  br label %109

109:                                              ; preds = %108, %105
  br label %110

110:                                              ; preds = %109, %94
  br label %111

111:                                              ; preds = %110, %83
  br label %395

112:                                              ; preds = %65
  %113 = load ptr, ptr %12, align 8
  %114 = call i32 @keymatch(ptr noundef %113, ptr noundef @.str.54, i32 noundef 1)
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %12, align 8
  %118 = call i32 @keymatch(ptr noundef %117, ptr noundef @.str.55, i32 noundef 1)
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %133

120:                                              ; preds = %116, %112
  %121 = load i32, ptr @parse_switches.printed_version, align 4
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %120
  %124 = load ptr, ptr @stderr, align 8
  %125 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %124, ptr noundef @.str.56, ptr noundef @.str.57, ptr noundef @.str.58)
  store i32 1, ptr @parse_switches.printed_version, align 4
  br label %126

126:                                              ; preds = %123, %120
  %127 = load ptr, ptr %6, align 8
  %128 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %127, i32 0, i32 0
  %129 = load ptr, ptr %128, align 8
  %130 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %129, i32 0, i32 7
  %131 = load i32, ptr %130, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, ptr %130, align 4
  br label %394

133:                                              ; preds = %116
  %134 = load ptr, ptr %12, align 8
  %135 = call i32 @keymatch(ptr noundef %134, ptr noundef @.str.59, i32 noundef 2)
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %133
  %138 = load ptr, ptr %12, align 8
  %139 = call i32 @keymatch(ptr noundef %138, ptr noundef @.str.60, i32 noundef 2)
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %137, %133
  %142 = load ptr, ptr %6, align 8
  call void @jpeg_set_colorspace(ptr noundef %142, i32 noundef 1)
  br label %393

143:                                              ; preds = %137
  %144 = load ptr, ptr %12, align 8
  %145 = call i32 @keymatch(ptr noundef %144, ptr noundef @.str.61, i32 noundef 3)
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %180

147:                                              ; preds = %143
  store i8 120, ptr %22, align 1
  %148 = load i32, ptr %11, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, ptr %11, align 4
  %150 = load i32, ptr %7, align 4
  %151 = icmp sge i32 %149, %150
  br i1 %151, label %152, label %153

152:                                              ; preds = %147
  call void @usage()
  br label %153

153:                                              ; preds = %152, %147
  %154 = load ptr, ptr %8, align 8
  %155 = load i32, ptr %11, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds ptr, ptr %154, i64 %156
  %158 = load ptr, ptr %157, align 8
  %159 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %158, ptr noundef @.str.62, ptr noundef %21, ptr noundef %22) #5
  %160 = icmp slt i32 %159, 1
  br i1 %160, label %161, label %162

161:                                              ; preds = %153
  call void @usage()
  br label %162

162:                                              ; preds = %161, %153
  %163 = load i8, ptr %22, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %164, 109
  br i1 %165, label %170, label %166

166:                                              ; preds = %162
  %167 = load i8, ptr %22, align 1
  %168 = sext i8 %167 to i32
  %169 = icmp eq i32 %168, 77
  br i1 %169, label %170, label %173

170:                                              ; preds = %166, %162
  %171 = load i64, ptr %21, align 8
  %172 = mul nsw i64 %171, 1000
  store i64 %172, ptr %21, align 8
  br label %173

173:                                              ; preds = %170, %166
  %174 = load i64, ptr %21, align 8
  %175 = mul nsw i64 %174, 1000
  %176 = load ptr, ptr %6, align 8
  %177 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %176, i32 0, i32 1
  %178 = load ptr, ptr %177, align 8
  %179 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %178, i32 0, i32 11
  store i64 %175, ptr %179, align 8
  br label %392

180:                                              ; preds = %143
  %181 = load ptr, ptr %12, align 8
  %182 = call i32 @keymatch(ptr noundef %181, ptr noundef @.str.63, i32 noundef 1)
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %188, label %184

184:                                              ; preds = %180
  %185 = load ptr, ptr %12, align 8
  %186 = call i32 @keymatch(ptr noundef %185, ptr noundef @.str.64, i32 noundef 1)
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %184, %180
  %189 = load ptr, ptr %6, align 8
  %190 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %189, i32 0, i32 25
  store i32 1, ptr %190, align 8
  br label %391

191:                                              ; preds = %184
  %192 = load ptr, ptr %12, align 8
  %193 = call i32 @keymatch(ptr noundef %192, ptr noundef @.str.65, i32 noundef 4)
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %195, label %207

195:                                              ; preds = %191
  %196 = load i32, ptr %11, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, ptr %11, align 4
  %198 = load i32, ptr %7, align 4
  %199 = icmp sge i32 %197, %198
  br i1 %199, label %200, label %201

200:                                              ; preds = %195
  call void @usage()
  br label %201

201:                                              ; preds = %200, %195
  %202 = load ptr, ptr %8, align 8
  %203 = load i32, ptr %11, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds ptr, ptr %202, i64 %204
  %206 = load ptr, ptr %205, align 8
  store ptr %206, ptr @outfilename, align 8
  br label %390

207:                                              ; preds = %191
  %208 = load ptr, ptr %12, align 8
  %209 = call i32 @keymatch(ptr noundef %208, ptr noundef @.str.66, i32 noundef 1)
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %207
  store i32 1, ptr %16, align 4
  br label %389

212:                                              ; preds = %207
  %213 = load ptr, ptr %12, align 8
  %214 = call i32 @keymatch(ptr noundef %213, ptr noundef @.str.67, i32 noundef 1)
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %216, label %234

216:                                              ; preds = %212
  %217 = load i32, ptr %11, align 4
  %218 = add nsw i32 %217, 1
  store i32 %218, ptr %11, align 4
  %219 = load i32, ptr %7, align 4
  %220 = icmp sge i32 %218, %219
  br i1 %220, label %221, label %222

221:                                              ; preds = %216
  call void @usage()
  br label %222

222:                                              ; preds = %221, %216
  %223 = load ptr, ptr %8, align 8
  %224 = load i32, ptr %11, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds ptr, ptr %223, i64 %225
  %227 = load ptr, ptr %226, align 8
  %228 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %227, ptr noundef @.str.68, ptr noundef %13) #5
  %229 = icmp ne i32 %228, 1
  br i1 %229, label %230, label %231

230:                                              ; preds = %222
  call void @usage()
  br label %231

231:                                              ; preds = %230, %222
  %232 = load i32, ptr %13, align 4
  %233 = call i32 @jpeg_quality_scaling(i32 noundef %232)
  store i32 %233, ptr %14, align 4
  br label %388

234:                                              ; preds = %212
  %235 = load ptr, ptr %12, align 8
  %236 = call i32 @keymatch(ptr noundef %235, ptr noundef @.str.69, i32 noundef 2)
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %238, label %250

238:                                              ; preds = %234
  %239 = load i32, ptr %11, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, ptr %11, align 4
  %241 = load i32, ptr %7, align 4
  %242 = icmp sge i32 %240, %241
  br i1 %242, label %243, label %244

243:                                              ; preds = %238
  call void @usage()
  br label %244

244:                                              ; preds = %243, %238
  %245 = load ptr, ptr %8, align 8
  %246 = load i32, ptr %11, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds ptr, ptr %245, i64 %247
  %249 = load ptr, ptr %248, align 8
  store ptr %249, ptr %18, align 8
  br label %387

250:                                              ; preds = %234
  %251 = load ptr, ptr %12, align 8
  %252 = call i32 @keymatch(ptr noundef %251, ptr noundef @.str.70, i32 noundef 2)
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %254, label %266

254:                                              ; preds = %250
  %255 = load i32, ptr %11, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, ptr %11, align 4
  %257 = load i32, ptr %7, align 4
  %258 = icmp sge i32 %256, %257
  br i1 %258, label %259, label %260

259:                                              ; preds = %254
  call void @usage()
  br label %260

260:                                              ; preds = %259, %254
  %261 = load ptr, ptr %8, align 8
  %262 = load i32, ptr %11, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds ptr, ptr %261, i64 %263
  %265 = load ptr, ptr %264, align 8
  store ptr %265, ptr %17, align 8
  br label %386

266:                                              ; preds = %250
  %267 = load ptr, ptr %12, align 8
  %268 = call i32 @keymatch(ptr noundef %267, ptr noundef @.str.71, i32 noundef 1)
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %313

270:                                              ; preds = %266
  store i8 120, ptr %24, align 1
  %271 = load i32, ptr %11, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, ptr %11, align 4
  %273 = load i32, ptr %7, align 4
  %274 = icmp sge i32 %272, %273
  br i1 %274, label %275, label %276

275:                                              ; preds = %270
  call void @usage()
  br label %276

276:                                              ; preds = %275, %270
  %277 = load ptr, ptr %8, align 8
  %278 = load i32, ptr %11, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds ptr, ptr %277, i64 %279
  %281 = load ptr, ptr %280, align 8
  %282 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %281, ptr noundef @.str.62, ptr noundef %23, ptr noundef %24) #5
  %283 = icmp slt i32 %282, 1
  br i1 %283, label %284, label %285

284:                                              ; preds = %276
  call void @usage()
  br label %285

285:                                              ; preds = %284, %276
  %286 = load i64, ptr %23, align 8
  %287 = icmp slt i64 %286, 0
  br i1 %287, label %291, label %288

288:                                              ; preds = %285
  %289 = load i64, ptr %23, align 8
  %290 = icmp sgt i64 %289, 65535
  br i1 %290, label %291, label %292

291:                                              ; preds = %288, %285
  call void @usage()
  br label %292

292:                                              ; preds = %291, %288
  %293 = load i8, ptr %24, align 1
  %294 = sext i8 %293 to i32
  %295 = icmp eq i32 %294, 98
  br i1 %295, label %300, label %296

296:                                              ; preds = %292
  %297 = load i8, ptr %24, align 1
  %298 = sext i8 %297 to i32
  %299 = icmp eq i32 %298, 66
  br i1 %299, label %300, label %307

300:                                              ; preds = %296, %292
  %301 = load i64, ptr %23, align 8
  %302 = trunc i64 %301 to i32
  %303 = load ptr, ptr %6, align 8
  %304 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %303, i32 0, i32 29
  store i32 %302, ptr %304, align 8
  %305 = load ptr, ptr %6, align 8
  %306 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %305, i32 0, i32 30
  store i32 0, ptr %306, align 4
  br label %312

307:                                              ; preds = %296
  %308 = load i64, ptr %23, align 8
  %309 = trunc i64 %308 to i32
  %310 = load ptr, ptr %6, align 8
  %311 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %310, i32 0, i32 30
  store i32 %309, ptr %311, align 4
  br label %312

312:                                              ; preds = %307, %300
  br label %385

313:                                              ; preds = %266
  %314 = load ptr, ptr %12, align 8
  %315 = call i32 @keymatch(ptr noundef %314, ptr noundef @.str.72, i32 noundef 2)
  %316 = icmp ne i32 %315, 0
  br i1 %316, label %317, label %329

317:                                              ; preds = %313
  %318 = load i32, ptr %11, align 4
  %319 = add nsw i32 %318, 1
  store i32 %319, ptr %11, align 4
  %320 = load i32, ptr %7, align 4
  %321 = icmp sge i32 %319, %320
  br i1 %321, label %322, label %323

322:                                              ; preds = %317
  call void @usage()
  br label %323

323:                                              ; preds = %322, %317
  %324 = load ptr, ptr %8, align 8
  %325 = load i32, ptr %11, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds ptr, ptr %324, i64 %326
  %328 = load ptr, ptr %327, align 8
  store ptr %328, ptr %19, align 8
  br label %384

329:                                              ; preds = %313
  %330 = load ptr, ptr %12, align 8
  %331 = call i32 @keymatch(ptr noundef %330, ptr noundef @.str.73, i32 noundef 2)
  %332 = icmp ne i32 %331, 0
  br i1 %332, label %333, label %345

333:                                              ; preds = %329
  %334 = load i32, ptr %11, align 4
  %335 = add nsw i32 %334, 1
  store i32 %335, ptr %11, align 4
  %336 = load i32, ptr %7, align 4
  %337 = icmp sge i32 %335, %336
  br i1 %337, label %338, label %339

338:                                              ; preds = %333
  call void @usage()
  br label %339

339:                                              ; preds = %338, %333
  %340 = load ptr, ptr %8, align 8
  %341 = load i32, ptr %11, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds ptr, ptr %340, i64 %342
  %344 = load ptr, ptr %343, align 8
  store ptr %344, ptr %20, align 8
  br label %383

345:                                              ; preds = %329
  %346 = load ptr, ptr %12, align 8
  %347 = call i32 @keymatch(ptr noundef %346, ptr noundef @.str.74, i32 noundef 2)
  %348 = icmp ne i32 %347, 0
  br i1 %348, label %349, label %375

349:                                              ; preds = %345
  %350 = load i32, ptr %11, align 4
  %351 = add nsw i32 %350, 1
  store i32 %351, ptr %11, align 4
  %352 = load i32, ptr %7, align 4
  %353 = icmp sge i32 %351, %352
  br i1 %353, label %354, label %355

354:                                              ; preds = %349
  call void @usage()
  br label %355

355:                                              ; preds = %354, %349
  %356 = load ptr, ptr %8, align 8
  %357 = load i32, ptr %11, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds ptr, ptr %356, i64 %358
  %360 = load ptr, ptr %359, align 8
  %361 = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef %360, ptr noundef @.str.68, ptr noundef %25) #5
  %362 = icmp ne i32 %361, 1
  br i1 %362, label %363, label %364

363:                                              ; preds = %355
  call void @usage()
  br label %364

364:                                              ; preds = %363, %355
  %365 = load i32, ptr %25, align 4
  %366 = icmp slt i32 %365, 0
  br i1 %366, label %370, label %367

367:                                              ; preds = %364
  %368 = load i32, ptr %25, align 4
  %369 = icmp sgt i32 %368, 100
  br i1 %369, label %370, label %371

370:                                              ; preds = %367, %364
  call void @usage()
  br label %371

371:                                              ; preds = %370, %367
  %372 = load i32, ptr %25, align 4
  %373 = load ptr, ptr %6, align 8
  %374 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %373, i32 0, i32 27
  store i32 %372, ptr %374, align 8
  br label %382

375:                                              ; preds = %345
  %376 = load ptr, ptr %12, align 8
  %377 = call i32 @keymatch(ptr noundef %376, ptr noundef @.str.75, i32 noundef 1)
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %379, label %380

379:                                              ; preds = %375
  store i32 1, ptr @is_targa, align 4
  br label %381

380:                                              ; preds = %375
  call void @usage()
  br label %381

381:                                              ; preds = %380, %379
  br label %382

382:                                              ; preds = %381, %371
  br label %383

383:                                              ; preds = %382, %339
  br label %384

384:                                              ; preds = %383, %323
  br label %385

385:                                              ; preds = %384, %312
  br label %386

386:                                              ; preds = %385, %260
  br label %387

387:                                              ; preds = %386, %244
  br label %388

388:                                              ; preds = %387, %231
  br label %389

389:                                              ; preds = %388, %211
  br label %390

390:                                              ; preds = %389, %201
  br label %391

391:                                              ; preds = %390, %188
  br label %392

392:                                              ; preds = %391, %173
  br label %393

393:                                              ; preds = %392, %141
  br label %394

394:                                              ; preds = %393, %126
  br label %395

395:                                              ; preds = %394, %111
  br label %396

396:                                              ; preds = %395, %64
  br label %397

397:                                              ; preds = %396
  br label %398

398:                                              ; preds = %397, %48
  %399 = load i32, ptr %11, align 4
  %400 = add nsw i32 %399, 1
  store i32 %400, ptr %11, align 4
  br label %30, !llvm.loop !8

401:                                              ; preds = %49, %30
  %402 = load i32, ptr %10, align 4
  %403 = icmp ne i32 %402, 0
  br i1 %403, label %404, label %455

404:                                              ; preds = %401
  %405 = load ptr, ptr %6, align 8
  %406 = load i32, ptr %13, align 4
  %407 = load i32, ptr %15, align 4
  call void @jpeg_set_quality(ptr noundef %405, i32 noundef %406, i32 noundef %407)
  %408 = load ptr, ptr %17, align 8
  %409 = icmp ne ptr %408, null
  br i1 %409, label %410, label %419

410:                                              ; preds = %404
  %411 = load ptr, ptr %6, align 8
  %412 = load ptr, ptr %17, align 8
  %413 = load i32, ptr %14, align 4
  %414 = load i32, ptr %15, align 4
  %415 = call i32 @read_quant_tables(ptr noundef %411, ptr noundef %412, i32 noundef %413, i32 noundef %414)
  %416 = icmp ne i32 %415, 0
  br i1 %416, label %418, label %417

417:                                              ; preds = %410
  call void @usage()
  br label %418

418:                                              ; preds = %417, %410
  br label %419

419:                                              ; preds = %418, %404
  %420 = load ptr, ptr %18, align 8
  %421 = icmp ne ptr %420, null
  br i1 %421, label %422, label %429

422:                                              ; preds = %419
  %423 = load ptr, ptr %6, align 8
  %424 = load ptr, ptr %18, align 8
  %425 = call i32 @set_quant_slots(ptr noundef %423, ptr noundef %424)
  %426 = icmp ne i32 %425, 0
  br i1 %426, label %428, label %427

427:                                              ; preds = %422
  call void @usage()
  br label %428

428:                                              ; preds = %427, %422
  br label %429

429:                                              ; preds = %428, %419
  %430 = load ptr, ptr %19, align 8
  %431 = icmp ne ptr %430, null
  br i1 %431, label %432, label %439

432:                                              ; preds = %429
  %433 = load ptr, ptr %6, align 8
  %434 = load ptr, ptr %19, align 8
  %435 = call i32 @set_sample_factors(ptr noundef %433, ptr noundef %434)
  %436 = icmp ne i32 %435, 0
  br i1 %436, label %438, label %437

437:                                              ; preds = %432
  call void @usage()
  br label %438

438:                                              ; preds = %437, %432
  br label %439

439:                                              ; preds = %438, %429
  %440 = load i32, ptr %16, align 4
  %441 = icmp ne i32 %440, 0
  br i1 %441, label %442, label %444

442:                                              ; preds = %439
  %443 = load ptr, ptr %6, align 8
  call void @jpeg_simple_progression(ptr noundef %443)
  br label %444

444:                                              ; preds = %442, %439
  %445 = load ptr, ptr %20, align 8
  %446 = icmp ne ptr %445, null
  br i1 %446, label %447, label %454

447:                                              ; preds = %444
  %448 = load ptr, ptr %6, align 8
  %449 = load ptr, ptr %20, align 8
  %450 = call i32 @read_scan_script(ptr noundef %448, ptr noundef %449)
  %451 = icmp ne i32 %450, 0
  br i1 %451, label %453, label %452

452:                                              ; preds = %447
  call void @usage()
  br label %453

453:                                              ; preds = %452, %447
  br label %454

454:                                              ; preds = %453, %444
  br label %455

455:                                              ; preds = %454, %401
  %456 = load i32, ptr %11, align 4
  ret i32 %456
}

declare i32 @fprintf(ptr noundef, ptr noundef, ...) #1

; Function Attrs: noinline nounwind uwtable
define internal void @usage() #0 {
  %1 = load ptr, ptr @stderr, align 8
  %2 = load ptr, ptr @progname, align 8
  %3 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef @.str.76, ptr noundef %2)
  %4 = load ptr, ptr @stderr, align 8
  %5 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef @.str.77)
  %6 = load ptr, ptr @stderr, align 8
  %7 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef @.str.78)
  %8 = load ptr, ptr @stderr, align 8
  %9 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.79)
  %10 = load ptr, ptr @stderr, align 8
  %11 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef @.str.80)
  %12 = load ptr, ptr @stderr, align 8
  %13 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %12, ptr noundef @.str.81)
  %14 = load ptr, ptr @stderr, align 8
  %15 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef @.str.82)
  %16 = load ptr, ptr @stderr, align 8
  %17 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef @.str.83)
  %18 = load ptr, ptr @stderr, align 8
  %19 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %18, ptr noundef @.str.84)
  %20 = load ptr, ptr @stderr, align 8
  %21 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %20, ptr noundef @.str.85, ptr noundef @.str.86)
  %22 = load ptr, ptr @stderr, align 8
  %23 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %22, ptr noundef @.str.87, ptr noundef @.str.88)
  %24 = load ptr, ptr @stderr, align 8
  %25 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %24, ptr noundef @.str.89, ptr noundef @.str.88)
  %26 = load ptr, ptr @stderr, align 8
  %27 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %26, ptr noundef @.str.90)
  %28 = load ptr, ptr @stderr, align 8
  %29 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %28, ptr noundef @.str.91)
  %30 = load ptr, ptr @stderr, align 8
  %31 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %30, ptr noundef @.str.92)
  %32 = load ptr, ptr @stderr, align 8
  %33 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %32, ptr noundef @.str.93)
  %34 = load ptr, ptr @stderr, align 8
  %35 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %34, ptr noundef @.str.94)
  %36 = load ptr, ptr @stderr, align 8
  %37 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %36, ptr noundef @.str.95)
  %38 = load ptr, ptr @stderr, align 8
  %39 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %38, ptr noundef @.str.96)
  %40 = load ptr, ptr @stderr, align 8
  %41 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %40, ptr noundef @.str.97)
  %42 = load ptr, ptr @stderr, align 8
  %43 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %42, ptr noundef @.str.98)
  %44 = load ptr, ptr @stderr, align 8
  %45 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %44, ptr noundef @.str.99)
  %46 = load ptr, ptr @stderr, align 8
  %47 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %46, ptr noundef @.str.100)
  call void @exit(i32 noundef 1) #4
  unreachable
}

declare ptr @fopen(ptr noundef, ptr noundef) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) #2

declare ptr @read_stdin() #1

declare ptr @write_stdout() #1

; Function Attrs: noinline nounwind uwtable
define internal ptr @select_file_type(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %7 = load i32, ptr @is_targa, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = load ptr, ptr %4, align 8
  %11 = call ptr @jinit_read_targa(ptr noundef %10)
  store ptr %11, ptr %3, align 8
  br label %69

12:                                               ; preds = %2
  %13 = load ptr, ptr %5, align 8
  %14 = call i32 @getc(ptr noundef %13)
  store i32 %14, ptr %6, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %27

16:                                               ; preds = %12
  %17 = load ptr, ptr %4, align 8
  %18 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %17, i32 0, i32 0
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %19, i32 0, i32 5
  store i32 41, ptr %20, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %21, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %23, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %4, align 8
  call void %25(ptr noundef %26)
  br label %27

27:                                               ; preds = %16, %12
  %28 = load i32, ptr %6, align 4
  %29 = load ptr, ptr %5, align 8
  %30 = call i32 @ungetc(i32 noundef %28, ptr noundef %29)
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %43

32:                                               ; preds = %27
  %33 = load ptr, ptr %4, align 8
  %34 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %33, i32 0, i32 0
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %35, i32 0, i32 5
  store i32 1040, ptr %36, align 8
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %37, i32 0, i32 0
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %39, i32 0, i32 0
  %41 = load ptr, ptr %40, align 8
  %42 = load ptr, ptr %4, align 8
  call void %41(ptr noundef %42)
  br label %43

43:                                               ; preds = %32, %27
  %44 = load i32, ptr %6, align 4
  switch i32 %44, label %57 [
    i32 66, label %45
    i32 71, label %48
    i32 80, label %51
    i32 0, label %54
  ]

45:                                               ; preds = %43
  %46 = load ptr, ptr %4, align 8
  %47 = call ptr @jinit_read_bmp(ptr noundef %46)
  store ptr %47, ptr %3, align 8
  br label %69

48:                                               ; preds = %43
  %49 = load ptr, ptr %4, align 8
  %50 = call ptr @jinit_read_gif(ptr noundef %49)
  store ptr %50, ptr %3, align 8
  br label %69

51:                                               ; preds = %43
  %52 = load ptr, ptr %4, align 8
  %53 = call ptr @jinit_read_ppm(ptr noundef %52)
  store ptr %53, ptr %3, align 8
  br label %69

54:                                               ; preds = %43
  %55 = load ptr, ptr %4, align 8
  %56 = call ptr @jinit_read_targa(ptr noundef %55)
  store ptr %56, ptr %3, align 8
  br label %69

57:                                               ; preds = %43
  %58 = load ptr, ptr %4, align 8
  %59 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %58, i32 0, i32 0
  %60 = load ptr, ptr %59, align 8
  %61 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %60, i32 0, i32 5
  store i32 1041, ptr %61, align 8
  %62 = load ptr, ptr %4, align 8
  %63 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %62, i32 0, i32 0
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %64, i32 0, i32 0
  %66 = load ptr, ptr %65, align 8
  %67 = load ptr, ptr %4, align 8
  call void %66(ptr noundef %67)
  br label %68

68:                                               ; preds = %57
  store ptr null, ptr %3, align 8
  br label %69

69:                                               ; preds = %68, %54, %51, %48, %45, %9
  %70 = load ptr, ptr %3, align 8
  ret ptr %70
}

declare void @jpeg_default_colorspace(ptr noundef) #1

declare void @jpeg_stdio_dest(ptr noundef, ptr noundef) #1

declare void @jpeg_start_compress(ptr noundef, i32 noundef) #1

declare i32 @jpeg_write_scanlines(ptr noundef, ptr noundef, i32 noundef) #1

declare void @jpeg_finish_compress(ptr noundef) #1

declare void @jpeg_destroy_compress(ptr noundef) #1

declare i32 @fclose(ptr noundef) #1

declare i32 @keymatch(ptr noundef, ptr noundef, i32 noundef) #1

declare void @jpeg_set_colorspace(ptr noundef, i32 noundef) #1

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(ptr noundef, ptr noundef, ...) #3

declare i32 @jpeg_quality_scaling(i32 noundef) #1

declare void @jpeg_set_quality(ptr noundef, i32 noundef, i32 noundef) #1

declare i32 @read_quant_tables(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #1

declare i32 @set_quant_slots(ptr noundef, ptr noundef) #1

declare i32 @set_sample_factors(ptr noundef, ptr noundef) #1

declare void @jpeg_simple_progression(ptr noundef) #1

declare i32 @read_scan_script(ptr noundef, ptr noundef) #1

declare ptr @jinit_read_targa(ptr noundef) #1

declare i32 @getc(ptr noundef) #1

declare i32 @ungetc(i32 noundef, ptr noundef) #1

declare ptr @jinit_read_bmp(ptr noundef) #1

declare ptr @jinit_read_gif(ptr noundef) #1

declare ptr @jinit_read_ppm(ptr noundef) #1

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
