; ModuleID = 'jdmerge.bc'
source_filename = "jdmerge.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_decompress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], i32, ptr, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, ptr, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_memory_mgr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64 }
%struct.my_upsampler = type { %struct.jpeg_upsampler, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32 }
%struct.jpeg_upsampler = type { ptr, ptr, i32 }

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_merged_upsampler(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %4, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %6, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %2, align 8
  %10 = call ptr %8(ptr noundef %9, i32 noundef 1, i64 noundef 88)
  store ptr %10, ptr %3, align 8
  %11 = load ptr, ptr %3, align 8
  %12 = load ptr, ptr %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %12, i32 0, i32 81
  store ptr %11, ptr %13, align 8
  %14 = load ptr, ptr %3, align 8
  %15 = getelementptr inbounds %struct.my_upsampler, ptr %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.jpeg_upsampler, ptr %15, i32 0, i32 0
  store ptr @start_pass_merged_upsample, ptr %16, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.my_upsampler, ptr %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_upsampler, ptr %18, i32 0, i32 2
  store i32 0, ptr %19, align 8
  %20 = load ptr, ptr %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %20, i32 0, i32 26
  %22 = load i32, ptr %21, align 8
  %23 = load ptr, ptr %2, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %23, i32 0, i32 28
  %25 = load i32, ptr %24, align 8
  %26 = mul i32 %22, %25
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds %struct.my_upsampler, ptr %27, i32 0, i32 8
  store i32 %26, ptr %28, align 4
  %29 = load ptr, ptr %2, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %29, i32 0, i32 58
  %31 = load i32, ptr %30, align 8
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %53

33:                                               ; preds = %1
  %34 = load ptr, ptr %3, align 8
  %35 = getelementptr inbounds %struct.my_upsampler, ptr %34, i32 0, i32 0
  %36 = getelementptr inbounds %struct.jpeg_upsampler, ptr %35, i32 0, i32 1
  store ptr @merged_2v_upsample, ptr %36, align 8
  %37 = load ptr, ptr %3, align 8
  %38 = getelementptr inbounds %struct.my_upsampler, ptr %37, i32 0, i32 1
  store ptr @h2v2_merged_upsample, ptr %38, align 8
  %39 = load ptr, ptr %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %39, i32 0, i32 1
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %41, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8
  %44 = load ptr, ptr %2, align 8
  %45 = load ptr, ptr %3, align 8
  %46 = getelementptr inbounds %struct.my_upsampler, ptr %45, i32 0, i32 8
  %47 = load i32, ptr %46, align 4
  %48 = zext i32 %47 to i64
  %49 = mul i64 %48, 1
  %50 = call ptr %43(ptr noundef %44, i32 noundef 1, i64 noundef %49)
  %51 = load ptr, ptr %3, align 8
  %52 = getelementptr inbounds %struct.my_upsampler, ptr %51, i32 0, i32 6
  store ptr %50, ptr %52, align 8
  br label %61

53:                                               ; preds = %1
  %54 = load ptr, ptr %3, align 8
  %55 = getelementptr inbounds %struct.my_upsampler, ptr %54, i32 0, i32 0
  %56 = getelementptr inbounds %struct.jpeg_upsampler, ptr %55, i32 0, i32 1
  store ptr @merged_1v_upsample, ptr %56, align 8
  %57 = load ptr, ptr %3, align 8
  %58 = getelementptr inbounds %struct.my_upsampler, ptr %57, i32 0, i32 1
  store ptr @h2v1_merged_upsample, ptr %58, align 8
  %59 = load ptr, ptr %3, align 8
  %60 = getelementptr inbounds %struct.my_upsampler, ptr %59, i32 0, i32 6
  store ptr null, ptr %60, align 8
  br label %61

61:                                               ; preds = %53, %33
  %62 = load ptr, ptr %2, align 8
  call void @build_ycc_rgb_table(ptr noundef %62)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_merged_upsample(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %4, i32 0, i32 81
  %6 = load ptr, ptr %5, align 8
  store ptr %6, ptr %3, align 8
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.my_upsampler, ptr %7, i32 0, i32 7
  store i32 0, ptr %8, align 8
  %9 = load ptr, ptr %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %9, i32 0, i32 27
  %11 = load i32, ptr %10, align 4
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct.my_upsampler, ptr %12, i32 0, i32 9
  store i32 %11, ptr %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @merged_2v_upsample(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6) #0 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  %16 = alloca [2 x ptr], align 16
  %17 = alloca i32, align 4
  store ptr %0, ptr %8, align 8
  store ptr %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store i32 %3, ptr %11, align 4
  store ptr %4, ptr %12, align 8
  store ptr %5, ptr %13, align 8
  store i32 %6, ptr %14, align 4
  %18 = load ptr, ptr %8, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %18, i32 0, i32 81
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %15, align 8
  %21 = load ptr, ptr %15, align 8
  %22 = getelementptr inbounds %struct.my_upsampler, ptr %21, i32 0, i32 7
  %23 = load i32, ptr %22, align 8
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %38

25:                                               ; preds = %7
  %26 = load ptr, ptr %15, align 8
  %27 = getelementptr inbounds %struct.my_upsampler, ptr %26, i32 0, i32 6
  %28 = load ptr, ptr %12, align 8
  %29 = load ptr, ptr %13, align 8
  %30 = load i32, ptr %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds ptr, ptr %28, i64 %31
  %33 = load ptr, ptr %15, align 8
  %34 = getelementptr inbounds %struct.my_upsampler, ptr %33, i32 0, i32 8
  %35 = load i32, ptr %34, align 4
  call void @jcopy_sample_rows(ptr noundef %27, i32 noundef 0, ptr noundef %32, i32 noundef 0, i32 noundef 1, i32 noundef %35)
  store i32 1, ptr %17, align 4
  %36 = load ptr, ptr %15, align 8
  %37 = getelementptr inbounds %struct.my_upsampler, ptr %36, i32 0, i32 7
  store i32 0, ptr %37, align 8
  br label %93

38:                                               ; preds = %7
  store i32 2, ptr %17, align 4
  %39 = load i32, ptr %17, align 4
  %40 = load ptr, ptr %15, align 8
  %41 = getelementptr inbounds %struct.my_upsampler, ptr %40, i32 0, i32 9
  %42 = load i32, ptr %41, align 8
  %43 = icmp ugt i32 %39, %42
  br i1 %43, label %44, label %48

44:                                               ; preds = %38
  %45 = load ptr, ptr %15, align 8
  %46 = getelementptr inbounds %struct.my_upsampler, ptr %45, i32 0, i32 9
  %47 = load i32, ptr %46, align 8
  store i32 %47, ptr %17, align 4
  br label %48

48:                                               ; preds = %44, %38
  %49 = load ptr, ptr %13, align 8
  %50 = load i32, ptr %49, align 4
  %51 = load i32, ptr %14, align 4
  %52 = sub i32 %51, %50
  store i32 %52, ptr %14, align 4
  %53 = load i32, ptr %17, align 4
  %54 = load i32, ptr %14, align 4
  %55 = icmp ugt i32 %53, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %48
  %57 = load i32, ptr %14, align 4
  store i32 %57, ptr %17, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = load ptr, ptr %12, align 8
  %60 = load ptr, ptr %13, align 8
  %61 = load i32, ptr %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds ptr, ptr %59, i64 %62
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds [2 x ptr], ptr %16, i64 0, i64 0
  store ptr %64, ptr %65, align 16
  %66 = load i32, ptr %17, align 4
  %67 = icmp ugt i32 %66, 1
  br i1 %67, label %68, label %77

68:                                               ; preds = %58
  %69 = load ptr, ptr %12, align 8
  %70 = load ptr, ptr %13, align 8
  %71 = load i32, ptr %70, align 4
  %72 = add i32 %71, 1
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds ptr, ptr %69, i64 %73
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds [2 x ptr], ptr %16, i64 0, i64 1
  store ptr %75, ptr %76, align 8
  br label %84

77:                                               ; preds = %58
  %78 = load ptr, ptr %15, align 8
  %79 = getelementptr inbounds %struct.my_upsampler, ptr %78, i32 0, i32 6
  %80 = load ptr, ptr %79, align 8
  %81 = getelementptr inbounds [2 x ptr], ptr %16, i64 0, i64 1
  store ptr %80, ptr %81, align 8
  %82 = load ptr, ptr %15, align 8
  %83 = getelementptr inbounds %struct.my_upsampler, ptr %82, i32 0, i32 7
  store i32 1, ptr %83, align 8
  br label %84

84:                                               ; preds = %77, %68
  %85 = load ptr, ptr %15, align 8
  %86 = getelementptr inbounds %struct.my_upsampler, ptr %85, i32 0, i32 1
  %87 = load ptr, ptr %86, align 8
  %88 = load ptr, ptr %8, align 8
  %89 = load ptr, ptr %9, align 8
  %90 = load ptr, ptr %10, align 8
  %91 = load i32, ptr %90, align 4
  %92 = getelementptr inbounds [2 x ptr], ptr %16, i64 0, i64 0
  call void %87(ptr noundef %88, ptr noundef %89, i32 noundef %91, ptr noundef %92)
  br label %93

93:                                               ; preds = %84, %25
  %94 = load i32, ptr %17, align 4
  %95 = load ptr, ptr %13, align 8
  %96 = load i32, ptr %95, align 4
  %97 = add i32 %96, %94
  store i32 %97, ptr %95, align 4
  %98 = load i32, ptr %17, align 4
  %99 = load ptr, ptr %15, align 8
  %100 = getelementptr inbounds %struct.my_upsampler, ptr %99, i32 0, i32 9
  %101 = load i32, ptr %100, align 8
  %102 = sub i32 %101, %98
  store i32 %102, ptr %100, align 8
  %103 = load ptr, ptr %15, align 8
  %104 = getelementptr inbounds %struct.my_upsampler, ptr %103, i32 0, i32 7
  %105 = load i32, ptr %104, align 8
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %93
  %108 = load ptr, ptr %10, align 8
  %109 = load i32, ptr %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, ptr %108, align 4
  br label %111

111:                                              ; preds = %107, %93
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v2_merged_upsample(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca i32, align 4
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  %25 = alloca ptr, align 8
  %26 = alloca ptr, align 8
  %27 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i32 %2, ptr %7, align 4
  store ptr %3, ptr %8, align 8
  %28 = load ptr, ptr %5, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %28, i32 0, i32 81
  %30 = load ptr, ptr %29, align 8
  store ptr %30, ptr %9, align 8
  %31 = load ptr, ptr %5, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %31, i32 0, i32 61
  %33 = load ptr, ptr %32, align 8
  store ptr %33, ptr %23, align 8
  %34 = load ptr, ptr %9, align 8
  %35 = getelementptr inbounds %struct.my_upsampler, ptr %34, i32 0, i32 2
  %36 = load ptr, ptr %35, align 8
  store ptr %36, ptr %24, align 8
  %37 = load ptr, ptr %9, align 8
  %38 = getelementptr inbounds %struct.my_upsampler, ptr %37, i32 0, i32 3
  %39 = load ptr, ptr %38, align 8
  store ptr %39, ptr %25, align 8
  %40 = load ptr, ptr %9, align 8
  %41 = getelementptr inbounds %struct.my_upsampler, ptr %40, i32 0, i32 4
  %42 = load ptr, ptr %41, align 8
  store ptr %42, ptr %26, align 8
  %43 = load ptr, ptr %9, align 8
  %44 = getelementptr inbounds %struct.my_upsampler, ptr %43, i32 0, i32 5
  %45 = load ptr, ptr %44, align 8
  store ptr %45, ptr %27, align 8
  %46 = load ptr, ptr %6, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 0
  %48 = load ptr, ptr %47, align 8
  %49 = load i32, ptr %7, align 4
  %50 = mul i32 %49, 2
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds ptr, ptr %48, i64 %51
  %53 = load ptr, ptr %52, align 8
  store ptr %53, ptr %18, align 8
  %54 = load ptr, ptr %6, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 0
  %56 = load ptr, ptr %55, align 8
  %57 = load i32, ptr %7, align 4
  %58 = mul i32 %57, 2
  %59 = add i32 %58, 1
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds ptr, ptr %56, i64 %60
  %62 = load ptr, ptr %61, align 8
  store ptr %62, ptr %19, align 8
  %63 = load ptr, ptr %6, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 1
  %65 = load ptr, ptr %64, align 8
  %66 = load i32, ptr %7, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds ptr, ptr %65, i64 %67
  %69 = load ptr, ptr %68, align 8
  store ptr %69, ptr %20, align 8
  %70 = load ptr, ptr %6, align 8
  %71 = getelementptr inbounds ptr, ptr %70, i64 2
  %72 = load ptr, ptr %71, align 8
  %73 = load i32, ptr %7, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds ptr, ptr %72, i64 %74
  %76 = load ptr, ptr %75, align 8
  store ptr %76, ptr %21, align 8
  %77 = load ptr, ptr %8, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 0
  %79 = load ptr, ptr %78, align 8
  store ptr %79, ptr %16, align 8
  %80 = load ptr, ptr %8, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 1
  %82 = load ptr, ptr %81, align 8
  store ptr %82, ptr %17, align 8
  %83 = load ptr, ptr %5, align 8
  %84 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %83, i32 0, i32 26
  %85 = load i32, ptr %84, align 8
  %86 = lshr i32 %85, 1
  store i32 %86, ptr %22, align 4
  br label %87

87:                                               ; preds = %254, %4
  %88 = load i32, ptr %22, align 4
  %89 = icmp ugt i32 %88, 0
  br i1 %89, label %90, label %257

90:                                               ; preds = %87
  %91 = load ptr, ptr %20, align 8
  %92 = getelementptr inbounds i8, ptr %91, i32 1
  store ptr %92, ptr %20, align 8
  %93 = load i8, ptr %91, align 1
  %94 = zext i8 %93 to i32
  store i32 %94, ptr %14, align 4
  %95 = load ptr, ptr %21, align 8
  %96 = getelementptr inbounds i8, ptr %95, i32 1
  store ptr %96, ptr %21, align 8
  %97 = load i8, ptr %95, align 1
  %98 = zext i8 %97 to i32
  store i32 %98, ptr %15, align 4
  %99 = load ptr, ptr %24, align 8
  %100 = load i32, ptr %15, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i32, ptr %99, i64 %101
  %103 = load i32, ptr %102, align 4
  store i32 %103, ptr %11, align 4
  %104 = load ptr, ptr %27, align 8
  %105 = load i32, ptr %14, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i64, ptr %104, i64 %106
  %108 = load i64, ptr %107, align 8
  %109 = load ptr, ptr %26, align 8
  %110 = load i32, ptr %15, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i64, ptr %109, i64 %111
  %113 = load i64, ptr %112, align 8
  %114 = add nsw i64 %108, %113
  %115 = ashr i64 %114, 16
  %116 = trunc i64 %115 to i32
  store i32 %116, ptr %12, align 4
  %117 = load ptr, ptr %25, align 8
  %118 = load i32, ptr %14, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i32, ptr %117, i64 %119
  %121 = load i32, ptr %120, align 4
  store i32 %121, ptr %13, align 4
  %122 = load ptr, ptr %18, align 8
  %123 = getelementptr inbounds i8, ptr %122, i32 1
  store ptr %123, ptr %18, align 8
  %124 = load i8, ptr %122, align 1
  %125 = zext i8 %124 to i32
  store i32 %125, ptr %10, align 4
  %126 = load ptr, ptr %23, align 8
  %127 = load i32, ptr %10, align 4
  %128 = load i32, ptr %11, align 4
  %129 = add nsw i32 %127, %128
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, ptr %126, i64 %130
  %132 = load i8, ptr %131, align 1
  %133 = load ptr, ptr %16, align 8
  %134 = getelementptr inbounds i8, ptr %133, i64 0
  store i8 %132, ptr %134, align 1
  %135 = load ptr, ptr %23, align 8
  %136 = load i32, ptr %10, align 4
  %137 = load i32, ptr %12, align 4
  %138 = add nsw i32 %136, %137
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8, ptr %135, i64 %139
  %141 = load i8, ptr %140, align 1
  %142 = load ptr, ptr %16, align 8
  %143 = getelementptr inbounds i8, ptr %142, i64 1
  store i8 %141, ptr %143, align 1
  %144 = load ptr, ptr %23, align 8
  %145 = load i32, ptr %10, align 4
  %146 = load i32, ptr %13, align 4
  %147 = add nsw i32 %145, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %144, i64 %148
  %150 = load i8, ptr %149, align 1
  %151 = load ptr, ptr %16, align 8
  %152 = getelementptr inbounds i8, ptr %151, i64 2
  store i8 %150, ptr %152, align 1
  %153 = load ptr, ptr %16, align 8
  %154 = getelementptr inbounds i8, ptr %153, i64 3
  store ptr %154, ptr %16, align 8
  %155 = load ptr, ptr %18, align 8
  %156 = getelementptr inbounds i8, ptr %155, i32 1
  store ptr %156, ptr %18, align 8
  %157 = load i8, ptr %155, align 1
  %158 = zext i8 %157 to i32
  store i32 %158, ptr %10, align 4
  %159 = load ptr, ptr %23, align 8
  %160 = load i32, ptr %10, align 4
  %161 = load i32, ptr %11, align 4
  %162 = add nsw i32 %160, %161
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8, ptr %159, i64 %163
  %165 = load i8, ptr %164, align 1
  %166 = load ptr, ptr %16, align 8
  %167 = getelementptr inbounds i8, ptr %166, i64 0
  store i8 %165, ptr %167, align 1
  %168 = load ptr, ptr %23, align 8
  %169 = load i32, ptr %10, align 4
  %170 = load i32, ptr %12, align 4
  %171 = add nsw i32 %169, %170
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, ptr %168, i64 %172
  %174 = load i8, ptr %173, align 1
  %175 = load ptr, ptr %16, align 8
  %176 = getelementptr inbounds i8, ptr %175, i64 1
  store i8 %174, ptr %176, align 1
  %177 = load ptr, ptr %23, align 8
  %178 = load i32, ptr %10, align 4
  %179 = load i32, ptr %13, align 4
  %180 = add nsw i32 %178, %179
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, ptr %177, i64 %181
  %183 = load i8, ptr %182, align 1
  %184 = load ptr, ptr %16, align 8
  %185 = getelementptr inbounds i8, ptr %184, i64 2
  store i8 %183, ptr %185, align 1
  %186 = load ptr, ptr %16, align 8
  %187 = getelementptr inbounds i8, ptr %186, i64 3
  store ptr %187, ptr %16, align 8
  %188 = load ptr, ptr %19, align 8
  %189 = getelementptr inbounds i8, ptr %188, i32 1
  store ptr %189, ptr %19, align 8
  %190 = load i8, ptr %188, align 1
  %191 = zext i8 %190 to i32
  store i32 %191, ptr %10, align 4
  %192 = load ptr, ptr %23, align 8
  %193 = load i32, ptr %10, align 4
  %194 = load i32, ptr %11, align 4
  %195 = add nsw i32 %193, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, ptr %192, i64 %196
  %198 = load i8, ptr %197, align 1
  %199 = load ptr, ptr %17, align 8
  %200 = getelementptr inbounds i8, ptr %199, i64 0
  store i8 %198, ptr %200, align 1
  %201 = load ptr, ptr %23, align 8
  %202 = load i32, ptr %10, align 4
  %203 = load i32, ptr %12, align 4
  %204 = add nsw i32 %202, %203
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8, ptr %201, i64 %205
  %207 = load i8, ptr %206, align 1
  %208 = load ptr, ptr %17, align 8
  %209 = getelementptr inbounds i8, ptr %208, i64 1
  store i8 %207, ptr %209, align 1
  %210 = load ptr, ptr %23, align 8
  %211 = load i32, ptr %10, align 4
  %212 = load i32, ptr %13, align 4
  %213 = add nsw i32 %211, %212
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, ptr %210, i64 %214
  %216 = load i8, ptr %215, align 1
  %217 = load ptr, ptr %17, align 8
  %218 = getelementptr inbounds i8, ptr %217, i64 2
  store i8 %216, ptr %218, align 1
  %219 = load ptr, ptr %17, align 8
  %220 = getelementptr inbounds i8, ptr %219, i64 3
  store ptr %220, ptr %17, align 8
  %221 = load ptr, ptr %19, align 8
  %222 = getelementptr inbounds i8, ptr %221, i32 1
  store ptr %222, ptr %19, align 8
  %223 = load i8, ptr %221, align 1
  %224 = zext i8 %223 to i32
  store i32 %224, ptr %10, align 4
  %225 = load ptr, ptr %23, align 8
  %226 = load i32, ptr %10, align 4
  %227 = load i32, ptr %11, align 4
  %228 = add nsw i32 %226, %227
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i8, ptr %225, i64 %229
  %231 = load i8, ptr %230, align 1
  %232 = load ptr, ptr %17, align 8
  %233 = getelementptr inbounds i8, ptr %232, i64 0
  store i8 %231, ptr %233, align 1
  %234 = load ptr, ptr %23, align 8
  %235 = load i32, ptr %10, align 4
  %236 = load i32, ptr %12, align 4
  %237 = add nsw i32 %235, %236
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8, ptr %234, i64 %238
  %240 = load i8, ptr %239, align 1
  %241 = load ptr, ptr %17, align 8
  %242 = getelementptr inbounds i8, ptr %241, i64 1
  store i8 %240, ptr %242, align 1
  %243 = load ptr, ptr %23, align 8
  %244 = load i32, ptr %10, align 4
  %245 = load i32, ptr %13, align 4
  %246 = add nsw i32 %244, %245
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i8, ptr %243, i64 %247
  %249 = load i8, ptr %248, align 1
  %250 = load ptr, ptr %17, align 8
  %251 = getelementptr inbounds i8, ptr %250, i64 2
  store i8 %249, ptr %251, align 1
  %252 = load ptr, ptr %17, align 8
  %253 = getelementptr inbounds i8, ptr %252, i64 3
  store ptr %253, ptr %17, align 8
  br label %254

254:                                              ; preds = %90
  %255 = load i32, ptr %22, align 4
  %256 = add i32 %255, -1
  store i32 %256, ptr %22, align 4
  br label %87, !llvm.loop !6

257:                                              ; preds = %87
  %258 = load ptr, ptr %5, align 8
  %259 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %258, i32 0, i32 26
  %260 = load i32, ptr %259, align 8
  %261 = and i32 %260, 1
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %353

263:                                              ; preds = %257
  %264 = load ptr, ptr %20, align 8
  %265 = load i8, ptr %264, align 1
  %266 = zext i8 %265 to i32
  store i32 %266, ptr %14, align 4
  %267 = load ptr, ptr %21, align 8
  %268 = load i8, ptr %267, align 1
  %269 = zext i8 %268 to i32
  store i32 %269, ptr %15, align 4
  %270 = load ptr, ptr %24, align 8
  %271 = load i32, ptr %15, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i32, ptr %270, i64 %272
  %274 = load i32, ptr %273, align 4
  store i32 %274, ptr %11, align 4
  %275 = load ptr, ptr %27, align 8
  %276 = load i32, ptr %14, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i64, ptr %275, i64 %277
  %279 = load i64, ptr %278, align 8
  %280 = load ptr, ptr %26, align 8
  %281 = load i32, ptr %15, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i64, ptr %280, i64 %282
  %284 = load i64, ptr %283, align 8
  %285 = add nsw i64 %279, %284
  %286 = ashr i64 %285, 16
  %287 = trunc i64 %286 to i32
  store i32 %287, ptr %12, align 4
  %288 = load ptr, ptr %25, align 8
  %289 = load i32, ptr %14, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i32, ptr %288, i64 %290
  %292 = load i32, ptr %291, align 4
  store i32 %292, ptr %13, align 4
  %293 = load ptr, ptr %18, align 8
  %294 = load i8, ptr %293, align 1
  %295 = zext i8 %294 to i32
  store i32 %295, ptr %10, align 4
  %296 = load ptr, ptr %23, align 8
  %297 = load i32, ptr %10, align 4
  %298 = load i32, ptr %11, align 4
  %299 = add nsw i32 %297, %298
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i8, ptr %296, i64 %300
  %302 = load i8, ptr %301, align 1
  %303 = load ptr, ptr %16, align 8
  %304 = getelementptr inbounds i8, ptr %303, i64 0
  store i8 %302, ptr %304, align 1
  %305 = load ptr, ptr %23, align 8
  %306 = load i32, ptr %10, align 4
  %307 = load i32, ptr %12, align 4
  %308 = add nsw i32 %306, %307
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8, ptr %305, i64 %309
  %311 = load i8, ptr %310, align 1
  %312 = load ptr, ptr %16, align 8
  %313 = getelementptr inbounds i8, ptr %312, i64 1
  store i8 %311, ptr %313, align 1
  %314 = load ptr, ptr %23, align 8
  %315 = load i32, ptr %10, align 4
  %316 = load i32, ptr %13, align 4
  %317 = add nsw i32 %315, %316
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i8, ptr %314, i64 %318
  %320 = load i8, ptr %319, align 1
  %321 = load ptr, ptr %16, align 8
  %322 = getelementptr inbounds i8, ptr %321, i64 2
  store i8 %320, ptr %322, align 1
  %323 = load ptr, ptr %19, align 8
  %324 = load i8, ptr %323, align 1
  %325 = zext i8 %324 to i32
  store i32 %325, ptr %10, align 4
  %326 = load ptr, ptr %23, align 8
  %327 = load i32, ptr %10, align 4
  %328 = load i32, ptr %11, align 4
  %329 = add nsw i32 %327, %328
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, ptr %326, i64 %330
  %332 = load i8, ptr %331, align 1
  %333 = load ptr, ptr %17, align 8
  %334 = getelementptr inbounds i8, ptr %333, i64 0
  store i8 %332, ptr %334, align 1
  %335 = load ptr, ptr %23, align 8
  %336 = load i32, ptr %10, align 4
  %337 = load i32, ptr %12, align 4
  %338 = add nsw i32 %336, %337
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i8, ptr %335, i64 %339
  %341 = load i8, ptr %340, align 1
  %342 = load ptr, ptr %17, align 8
  %343 = getelementptr inbounds i8, ptr %342, i64 1
  store i8 %341, ptr %343, align 1
  %344 = load ptr, ptr %23, align 8
  %345 = load i32, ptr %10, align 4
  %346 = load i32, ptr %13, align 4
  %347 = add nsw i32 %345, %346
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8, ptr %344, i64 %348
  %350 = load i8, ptr %349, align 1
  %351 = load ptr, ptr %17, align 8
  %352 = getelementptr inbounds i8, ptr %351, i64 2
  store i8 %350, ptr %352, align 1
  br label %353

353:                                              ; preds = %263, %257
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @merged_1v_upsample(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6) #0 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca i32, align 4
  %15 = alloca ptr, align 8
  store ptr %0, ptr %8, align 8
  store ptr %1, ptr %9, align 8
  store ptr %2, ptr %10, align 8
  store i32 %3, ptr %11, align 4
  store ptr %4, ptr %12, align 8
  store ptr %5, ptr %13, align 8
  store i32 %6, ptr %14, align 4
  %16 = load ptr, ptr %8, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %16, i32 0, i32 81
  %18 = load ptr, ptr %17, align 8
  store ptr %18, ptr %15, align 8
  %19 = load ptr, ptr %15, align 8
  %20 = getelementptr inbounds %struct.my_upsampler, ptr %19, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr %8, align 8
  %23 = load ptr, ptr %9, align 8
  %24 = load ptr, ptr %10, align 8
  %25 = load i32, ptr %24, align 4
  %26 = load ptr, ptr %12, align 8
  %27 = load ptr, ptr %13, align 8
  %28 = load i32, ptr %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  call void %21(ptr noundef %22, ptr noundef %23, i32 noundef %25, ptr noundef %30)
  %31 = load ptr, ptr %13, align 8
  %32 = load i32, ptr %31, align 4
  %33 = add i32 %32, 1
  store i32 %33, ptr %31, align 4
  %34 = load ptr, ptr %10, align 8
  %35 = load i32, ptr %34, align 4
  %36 = add i32 %35, 1
  store i32 %36, ptr %34, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @h2v1_merged_upsample(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i32, align 4
  %21 = alloca ptr, align 8
  %22 = alloca ptr, align 8
  %23 = alloca ptr, align 8
  %24 = alloca ptr, align 8
  %25 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store i32 %2, ptr %7, align 4
  store ptr %3, ptr %8, align 8
  %26 = load ptr, ptr %5, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %26, i32 0, i32 81
  %28 = load ptr, ptr %27, align 8
  store ptr %28, ptr %9, align 8
  %29 = load ptr, ptr %5, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %29, i32 0, i32 61
  %31 = load ptr, ptr %30, align 8
  store ptr %31, ptr %21, align 8
  %32 = load ptr, ptr %9, align 8
  %33 = getelementptr inbounds %struct.my_upsampler, ptr %32, i32 0, i32 2
  %34 = load ptr, ptr %33, align 8
  store ptr %34, ptr %22, align 8
  %35 = load ptr, ptr %9, align 8
  %36 = getelementptr inbounds %struct.my_upsampler, ptr %35, i32 0, i32 3
  %37 = load ptr, ptr %36, align 8
  store ptr %37, ptr %23, align 8
  %38 = load ptr, ptr %9, align 8
  %39 = getelementptr inbounds %struct.my_upsampler, ptr %38, i32 0, i32 4
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %24, align 8
  %41 = load ptr, ptr %9, align 8
  %42 = getelementptr inbounds %struct.my_upsampler, ptr %41, i32 0, i32 5
  %43 = load ptr, ptr %42, align 8
  store ptr %43, ptr %25, align 8
  %44 = load ptr, ptr %6, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 0
  %46 = load ptr, ptr %45, align 8
  %47 = load i32, ptr %7, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds ptr, ptr %46, i64 %48
  %50 = load ptr, ptr %49, align 8
  store ptr %50, ptr %17, align 8
  %51 = load ptr, ptr %6, align 8
  %52 = getelementptr inbounds ptr, ptr %51, i64 1
  %53 = load ptr, ptr %52, align 8
  %54 = load i32, ptr %7, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds ptr, ptr %53, i64 %55
  %57 = load ptr, ptr %56, align 8
  store ptr %57, ptr %18, align 8
  %58 = load ptr, ptr %6, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 2
  %60 = load ptr, ptr %59, align 8
  %61 = load i32, ptr %7, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds ptr, ptr %60, i64 %62
  %64 = load ptr, ptr %63, align 8
  store ptr %64, ptr %19, align 8
  %65 = load ptr, ptr %8, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 0
  %67 = load ptr, ptr %66, align 8
  store ptr %67, ptr %16, align 8
  %68 = load ptr, ptr %5, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %68, i32 0, i32 26
  %70 = load i32, ptr %69, align 8
  %71 = lshr i32 %70, 1
  store i32 %71, ptr %20, align 4
  br label %72

72:                                               ; preds = %173, %4
  %73 = load i32, ptr %20, align 4
  %74 = icmp ugt i32 %73, 0
  br i1 %74, label %75, label %176

75:                                               ; preds = %72
  %76 = load ptr, ptr %18, align 8
  %77 = getelementptr inbounds i8, ptr %76, i32 1
  store ptr %77, ptr %18, align 8
  %78 = load i8, ptr %76, align 1
  %79 = zext i8 %78 to i32
  store i32 %79, ptr %14, align 4
  %80 = load ptr, ptr %19, align 8
  %81 = getelementptr inbounds i8, ptr %80, i32 1
  store ptr %81, ptr %19, align 8
  %82 = load i8, ptr %80, align 1
  %83 = zext i8 %82 to i32
  store i32 %83, ptr %15, align 4
  %84 = load ptr, ptr %22, align 8
  %85 = load i32, ptr %15, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, ptr %84, i64 %86
  %88 = load i32, ptr %87, align 4
  store i32 %88, ptr %11, align 4
  %89 = load ptr, ptr %25, align 8
  %90 = load i32, ptr %14, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i64, ptr %89, i64 %91
  %93 = load i64, ptr %92, align 8
  %94 = load ptr, ptr %24, align 8
  %95 = load i32, ptr %15, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i64, ptr %94, i64 %96
  %98 = load i64, ptr %97, align 8
  %99 = add nsw i64 %93, %98
  %100 = ashr i64 %99, 16
  %101 = trunc i64 %100 to i32
  store i32 %101, ptr %12, align 4
  %102 = load ptr, ptr %23, align 8
  %103 = load i32, ptr %14, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, ptr %102, i64 %104
  %106 = load i32, ptr %105, align 4
  store i32 %106, ptr %13, align 4
  %107 = load ptr, ptr %17, align 8
  %108 = getelementptr inbounds i8, ptr %107, i32 1
  store ptr %108, ptr %17, align 8
  %109 = load i8, ptr %107, align 1
  %110 = zext i8 %109 to i32
  store i32 %110, ptr %10, align 4
  %111 = load ptr, ptr %21, align 8
  %112 = load i32, ptr %10, align 4
  %113 = load i32, ptr %11, align 4
  %114 = add nsw i32 %112, %113
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, ptr %111, i64 %115
  %117 = load i8, ptr %116, align 1
  %118 = load ptr, ptr %16, align 8
  %119 = getelementptr inbounds i8, ptr %118, i64 0
  store i8 %117, ptr %119, align 1
  %120 = load ptr, ptr %21, align 8
  %121 = load i32, ptr %10, align 4
  %122 = load i32, ptr %12, align 4
  %123 = add nsw i32 %121, %122
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, ptr %120, i64 %124
  %126 = load i8, ptr %125, align 1
  %127 = load ptr, ptr %16, align 8
  %128 = getelementptr inbounds i8, ptr %127, i64 1
  store i8 %126, ptr %128, align 1
  %129 = load ptr, ptr %21, align 8
  %130 = load i32, ptr %10, align 4
  %131 = load i32, ptr %13, align 4
  %132 = add nsw i32 %130, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, ptr %129, i64 %133
  %135 = load i8, ptr %134, align 1
  %136 = load ptr, ptr %16, align 8
  %137 = getelementptr inbounds i8, ptr %136, i64 2
  store i8 %135, ptr %137, align 1
  %138 = load ptr, ptr %16, align 8
  %139 = getelementptr inbounds i8, ptr %138, i64 3
  store ptr %139, ptr %16, align 8
  %140 = load ptr, ptr %17, align 8
  %141 = getelementptr inbounds i8, ptr %140, i32 1
  store ptr %141, ptr %17, align 8
  %142 = load i8, ptr %140, align 1
  %143 = zext i8 %142 to i32
  store i32 %143, ptr %10, align 4
  %144 = load ptr, ptr %21, align 8
  %145 = load i32, ptr %10, align 4
  %146 = load i32, ptr %11, align 4
  %147 = add nsw i32 %145, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %144, i64 %148
  %150 = load i8, ptr %149, align 1
  %151 = load ptr, ptr %16, align 8
  %152 = getelementptr inbounds i8, ptr %151, i64 0
  store i8 %150, ptr %152, align 1
  %153 = load ptr, ptr %21, align 8
  %154 = load i32, ptr %10, align 4
  %155 = load i32, ptr %12, align 4
  %156 = add nsw i32 %154, %155
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, ptr %153, i64 %157
  %159 = load i8, ptr %158, align 1
  %160 = load ptr, ptr %16, align 8
  %161 = getelementptr inbounds i8, ptr %160, i64 1
  store i8 %159, ptr %161, align 1
  %162 = load ptr, ptr %21, align 8
  %163 = load i32, ptr %10, align 4
  %164 = load i32, ptr %13, align 4
  %165 = add nsw i32 %163, %164
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8, ptr %162, i64 %166
  %168 = load i8, ptr %167, align 1
  %169 = load ptr, ptr %16, align 8
  %170 = getelementptr inbounds i8, ptr %169, i64 2
  store i8 %168, ptr %170, align 1
  %171 = load ptr, ptr %16, align 8
  %172 = getelementptr inbounds i8, ptr %171, i64 3
  store ptr %172, ptr %16, align 8
  br label %173

173:                                              ; preds = %75
  %174 = load i32, ptr %20, align 4
  %175 = add i32 %174, -1
  store i32 %175, ptr %20, align 4
  br label %72, !llvm.loop !8

176:                                              ; preds = %72
  %177 = load ptr, ptr %5, align 8
  %178 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %177, i32 0, i32 26
  %179 = load i32, ptr %178, align 8
  %180 = and i32 %179, 1
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %182, label %242

182:                                              ; preds = %176
  %183 = load ptr, ptr %18, align 8
  %184 = load i8, ptr %183, align 1
  %185 = zext i8 %184 to i32
  store i32 %185, ptr %14, align 4
  %186 = load ptr, ptr %19, align 8
  %187 = load i8, ptr %186, align 1
  %188 = zext i8 %187 to i32
  store i32 %188, ptr %15, align 4
  %189 = load ptr, ptr %22, align 8
  %190 = load i32, ptr %15, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, ptr %189, i64 %191
  %193 = load i32, ptr %192, align 4
  store i32 %193, ptr %11, align 4
  %194 = load ptr, ptr %25, align 8
  %195 = load i32, ptr %14, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i64, ptr %194, i64 %196
  %198 = load i64, ptr %197, align 8
  %199 = load ptr, ptr %24, align 8
  %200 = load i32, ptr %15, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i64, ptr %199, i64 %201
  %203 = load i64, ptr %202, align 8
  %204 = add nsw i64 %198, %203
  %205 = ashr i64 %204, 16
  %206 = trunc i64 %205 to i32
  store i32 %206, ptr %12, align 4
  %207 = load ptr, ptr %23, align 8
  %208 = load i32, ptr %14, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds i32, ptr %207, i64 %209
  %211 = load i32, ptr %210, align 4
  store i32 %211, ptr %13, align 4
  %212 = load ptr, ptr %17, align 8
  %213 = load i8, ptr %212, align 1
  %214 = zext i8 %213 to i32
  store i32 %214, ptr %10, align 4
  %215 = load ptr, ptr %21, align 8
  %216 = load i32, ptr %10, align 4
  %217 = load i32, ptr %11, align 4
  %218 = add nsw i32 %216, %217
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8, ptr %215, i64 %219
  %221 = load i8, ptr %220, align 1
  %222 = load ptr, ptr %16, align 8
  %223 = getelementptr inbounds i8, ptr %222, i64 0
  store i8 %221, ptr %223, align 1
  %224 = load ptr, ptr %21, align 8
  %225 = load i32, ptr %10, align 4
  %226 = load i32, ptr %12, align 4
  %227 = add nsw i32 %225, %226
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i8, ptr %224, i64 %228
  %230 = load i8, ptr %229, align 1
  %231 = load ptr, ptr %16, align 8
  %232 = getelementptr inbounds i8, ptr %231, i64 1
  store i8 %230, ptr %232, align 1
  %233 = load ptr, ptr %21, align 8
  %234 = load i32, ptr %10, align 4
  %235 = load i32, ptr %13, align 4
  %236 = add nsw i32 %234, %235
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds i8, ptr %233, i64 %237
  %239 = load i8, ptr %238, align 1
  %240 = load ptr, ptr %16, align 8
  %241 = getelementptr inbounds i8, ptr %240, i64 2
  store i8 %239, ptr %241, align 1
  br label %242

242:                                              ; preds = %182, %176
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @build_ycc_rgb_table(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  store ptr %0, ptr %2, align 8
  %6 = load ptr, ptr %2, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %6, i32 0, i32 81
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %3, align 8
  %9 = load ptr, ptr %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %9, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %11, i32 0, i32 0
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr %2, align 8
  %15 = call ptr %13(ptr noundef %14, i32 noundef 1, i64 noundef 1024)
  %16 = load ptr, ptr %3, align 8
  %17 = getelementptr inbounds %struct.my_upsampler, ptr %16, i32 0, i32 2
  store ptr %15, ptr %17, align 8
  %18 = load ptr, ptr %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %18, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %20, i32 0, i32 0
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %2, align 8
  %24 = call ptr %22(ptr noundef %23, i32 noundef 1, i64 noundef 1024)
  %25 = load ptr, ptr %3, align 8
  %26 = getelementptr inbounds %struct.my_upsampler, ptr %25, i32 0, i32 3
  store ptr %24, ptr %26, align 8
  %27 = load ptr, ptr %2, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %27, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %29, i32 0, i32 0
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr %2, align 8
  %33 = call ptr %31(ptr noundef %32, i32 noundef 1, i64 noundef 2048)
  %34 = load ptr, ptr %3, align 8
  %35 = getelementptr inbounds %struct.my_upsampler, ptr %34, i32 0, i32 4
  store ptr %33, ptr %35, align 8
  %36 = load ptr, ptr %2, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %36, i32 0, i32 1
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %38, i32 0, i32 0
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr %2, align 8
  %42 = call ptr %40(ptr noundef %41, i32 noundef 1, i64 noundef 2048)
  %43 = load ptr, ptr %3, align 8
  %44 = getelementptr inbounds %struct.my_upsampler, ptr %43, i32 0, i32 5
  store ptr %42, ptr %44, align 8
  store i32 0, ptr %4, align 4
  store i64 -128, ptr %5, align 8
  br label %45

45:                                               ; preds = %88, %1
  %46 = load i32, ptr %4, align 4
  %47 = icmp sle i32 %46, 255
  br i1 %47, label %48, label %93

48:                                               ; preds = %45
  %49 = load i64, ptr %5, align 8
  %50 = mul nsw i64 91881, %49
  %51 = add nsw i64 %50, 32768
  %52 = ashr i64 %51, 16
  %53 = trunc i64 %52 to i32
  %54 = load ptr, ptr %3, align 8
  %55 = getelementptr inbounds %struct.my_upsampler, ptr %54, i32 0, i32 2
  %56 = load ptr, ptr %55, align 8
  %57 = load i32, ptr %4, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, ptr %56, i64 %58
  store i32 %53, ptr %59, align 4
  %60 = load i64, ptr %5, align 8
  %61 = mul nsw i64 116130, %60
  %62 = add nsw i64 %61, 32768
  %63 = ashr i64 %62, 16
  %64 = trunc i64 %63 to i32
  %65 = load ptr, ptr %3, align 8
  %66 = getelementptr inbounds %struct.my_upsampler, ptr %65, i32 0, i32 3
  %67 = load ptr, ptr %66, align 8
  %68 = load i32, ptr %4, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, ptr %67, i64 %69
  store i32 %64, ptr %70, align 4
  %71 = load i64, ptr %5, align 8
  %72 = mul nsw i64 -46802, %71
  %73 = load ptr, ptr %3, align 8
  %74 = getelementptr inbounds %struct.my_upsampler, ptr %73, i32 0, i32 4
  %75 = load ptr, ptr %74, align 8
  %76 = load i32, ptr %4, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i64, ptr %75, i64 %77
  store i64 %72, ptr %78, align 8
  %79 = load i64, ptr %5, align 8
  %80 = mul nsw i64 -22554, %79
  %81 = add nsw i64 %80, 32768
  %82 = load ptr, ptr %3, align 8
  %83 = getelementptr inbounds %struct.my_upsampler, ptr %82, i32 0, i32 5
  %84 = load ptr, ptr %83, align 8
  %85 = load i32, ptr %4, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i64, ptr %84, i64 %86
  store i64 %81, ptr %87, align 8
  br label %88

88:                                               ; preds = %48
  %89 = load i32, ptr %4, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, ptr %4, align 4
  %91 = load i64, ptr %5, align 8
  %92 = add nsw i64 %91, 1
  store i64 %92, ptr %5, align 8
  br label %45, !llvm.loop !9

93:                                               ; preds = %45
  ret void
}

declare void @jcopy_sample_rows(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) #1

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
