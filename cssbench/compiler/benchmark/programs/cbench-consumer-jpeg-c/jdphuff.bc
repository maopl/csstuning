; ModuleID = 'jdphuff.bc'
source_filename = "jdphuff.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_decompress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], i32, ptr, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, ptr, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_memory_mgr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64 }
%struct.phuff_entropy_decoder = type { %struct.jpeg_entropy_decoder, %struct.bitread_perm_state, %struct.savable_state, i32, [4 x ptr], ptr }
%struct.jpeg_entropy_decoder = type { ptr, ptr }
%struct.bitread_perm_state = type { i64, i32, i32 }
%struct.savable_state = type { i32, [4 x i32] }
%struct.jpeg_error_mgr = type { ptr, ptr, ptr, ptr, ptr, i32, %union.anon, i32, i64, ptr, i32, ptr, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }
%struct.bitread_working_state = type { ptr, i64, i32, i64, i32, ptr, ptr }
%struct.jpeg_source_mgr = type { ptr, i64, ptr, ptr, ptr, ptr, ptr }
%struct.d_derived_tbl = type { [17 x i64], [18 x i64], [17 x i32], ptr, [256 x i32], [256 x i8] }
%struct.jpeg_marker_reader = type { ptr, ptr, ptr, ptr, [16 x ptr], i32, i32, i32, i32 }

@extend_test = internal constant [16 x i32] [i32 0, i32 1, i32 2, i32 4, i32 8, i32 16, i32 32, i32 64, i32 128, i32 256, i32 512, i32 1024, i32 2048, i32 4096, i32 8192, i32 16384], align 16
@extend_offset = internal constant [16 x i32] [i32 0, i32 -1, i32 -3, i32 -7, i32 -15, i32 -31, i32 -63, i32 -127, i32 -255, i32 -511, i32 -1023, i32 -2047, i32 -4095, i32 -8191, i32 -16383, i32 -32767], align 16
@jpeg_natural_order = external constant [0 x i32], align 4

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_phuff_decoder(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %7 = load ptr, ptr %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %7, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %9, i32 0, i32 0
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %2, align 8
  %13 = call ptr %11(ptr noundef %12, i32 noundef 1, i64 noundef 96)
  store ptr %13, ptr %3, align 8
  %14 = load ptr, ptr %3, align 8
  %15 = load ptr, ptr %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %15, i32 0, i32 79
  store ptr %14, ptr %16, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.jpeg_entropy_decoder, ptr %18, i32 0, i32 0
  store ptr @start_pass_phuff_decoder, ptr %19, align 8
  store i32 0, ptr %6, align 4
  br label %20

20:                                               ; preds = %29, %1
  %21 = load i32, ptr %6, align 4
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %32

23:                                               ; preds = %20
  %24 = load ptr, ptr %3, align 8
  %25 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %24, i32 0, i32 4
  %26 = load i32, ptr %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [4 x ptr], ptr %25, i64 0, i64 %27
  store ptr null, ptr %28, align 8
  br label %29

29:                                               ; preds = %23
  %30 = load i32, ptr %6, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, ptr %6, align 4
  br label %20, !llvm.loop !6

32:                                               ; preds = %20
  %33 = load ptr, ptr %2, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %33, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %35, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr %2, align 8
  %39 = load ptr, ptr %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %39, i32 0, i32 8
  %41 = load i32, ptr %40, align 8
  %42 = mul nsw i32 %41, 64
  %43 = sext i32 %42 to i64
  %44 = mul i64 %43, 4
  %45 = call ptr %37(ptr noundef %38, i32 noundef 1, i64 noundef %44)
  %46 = load ptr, ptr %2, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %46, i32 0, i32 38
  store ptr %45, ptr %47, align 8
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %48, i32 0, i32 38
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds [64 x i32], ptr %50, i64 0
  %52 = getelementptr inbounds [64 x i32], ptr %51, i64 0, i64 0
  store ptr %52, ptr %4, align 8
  store i32 0, ptr %5, align 4
  br label %53

53:                                               ; preds = %70, %32
  %54 = load i32, ptr %5, align 4
  %55 = load ptr, ptr %2, align 8
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %55, i32 0, i32 8
  %57 = load i32, ptr %56, align 8
  %58 = icmp slt i32 %54, %57
  br i1 %58, label %59, label %73

59:                                               ; preds = %53
  store i32 0, ptr %6, align 4
  br label %60

60:                                               ; preds = %66, %59
  %61 = load i32, ptr %6, align 4
  %62 = icmp slt i32 %61, 64
  br i1 %62, label %63, label %69

63:                                               ; preds = %60
  %64 = load ptr, ptr %4, align 8
  %65 = getelementptr inbounds i32, ptr %64, i32 1
  store ptr %65, ptr %4, align 8
  store i32 -1, ptr %64, align 4
  br label %66

66:                                               ; preds = %63
  %67 = load i32, ptr %6, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, ptr %6, align 4
  br label %60, !llvm.loop !8

69:                                               ; preds = %60
  br label %70

70:                                               ; preds = %69
  %71 = load i32, ptr %5, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, ptr %5, align 4
  br label %53, !llvm.loop !9

73:                                               ; preds = %53
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_pass_phuff_decoder(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %13 = load ptr, ptr %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %13, i32 0, i32 79
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %3, align 8
  %16 = load ptr, ptr %2, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %16, i32 0, i32 68
  %18 = load i32, ptr %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = zext i1 %19 to i32
  store i32 %20, ptr %4, align 4
  store i32 0, ptr %5, align 4
  %21 = load i32, ptr %4, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %1
  %24 = load ptr, ptr %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %24, i32 0, i32 69
  %26 = load i32, ptr %25, align 8
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  store i32 1, ptr %5, align 4
  br label %29

29:                                               ; preds = %28, %23
  br label %51

30:                                               ; preds = %1
  %31 = load ptr, ptr %2, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %31, i32 0, i32 68
  %33 = load i32, ptr %32, align 4
  %34 = load ptr, ptr %2, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %34, i32 0, i32 69
  %36 = load i32, ptr %35, align 8
  %37 = icmp sgt i32 %33, %36
  br i1 %37, label %43, label %38

38:                                               ; preds = %30
  %39 = load ptr, ptr %2, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %39, i32 0, i32 69
  %41 = load i32, ptr %40, align 8
  %42 = icmp sge i32 %41, 64
  br i1 %42, label %43, label %44

43:                                               ; preds = %38, %30
  store i32 1, ptr %5, align 4
  br label %44

44:                                               ; preds = %43, %38
  %45 = load ptr, ptr %2, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %45, i32 0, i32 62
  %47 = load i32, ptr %46, align 8
  %48 = icmp ne i32 %47, 1
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  store i32 1, ptr %5, align 4
  br label %50

50:                                               ; preds = %49, %44
  br label %51

51:                                               ; preds = %50, %29
  %52 = load ptr, ptr %2, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %52, i32 0, i32 70
  %54 = load i32, ptr %53, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %67

56:                                               ; preds = %51
  %57 = load ptr, ptr %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %57, i32 0, i32 71
  %59 = load i32, ptr %58, align 8
  %60 = load ptr, ptr %2, align 8
  %61 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %60, i32 0, i32 70
  %62 = load i32, ptr %61, align 4
  %63 = sub nsw i32 %62, 1
  %64 = icmp ne i32 %59, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %56
  store i32 1, ptr %5, align 4
  br label %66

66:                                               ; preds = %65, %56
  br label %67

67:                                               ; preds = %66, %51
  %68 = load ptr, ptr %2, align 8
  %69 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %68, i32 0, i32 71
  %70 = load i32, ptr %69, align 8
  %71 = icmp sgt i32 %70, 13
  br i1 %71, label %72, label %73

72:                                               ; preds = %67
  store i32 1, ptr %5, align 4
  br label %73

73:                                               ; preds = %72, %67
  %74 = load i32, ptr %5, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %119

76:                                               ; preds = %73
  %77 = load ptr, ptr %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %77, i32 0, i32 0
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %79, i32 0, i32 5
  store i32 14, ptr %80, align 8
  %81 = load ptr, ptr %2, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %81, i32 0, i32 68
  %83 = load i32, ptr %82, align 4
  %84 = load ptr, ptr %2, align 8
  %85 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %84, i32 0, i32 0
  %86 = load ptr, ptr %85, align 8
  %87 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %86, i32 0, i32 6
  %88 = getelementptr inbounds [8 x i32], ptr %87, i64 0, i64 0
  store i32 %83, ptr %88, align 4
  %89 = load ptr, ptr %2, align 8
  %90 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %89, i32 0, i32 69
  %91 = load i32, ptr %90, align 8
  %92 = load ptr, ptr %2, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %92, i32 0, i32 0
  %94 = load ptr, ptr %93, align 8
  %95 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %94, i32 0, i32 6
  %96 = getelementptr inbounds [8 x i32], ptr %95, i64 0, i64 1
  store i32 %91, ptr %96, align 4
  %97 = load ptr, ptr %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %97, i32 0, i32 70
  %99 = load i32, ptr %98, align 4
  %100 = load ptr, ptr %2, align 8
  %101 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %100, i32 0, i32 0
  %102 = load ptr, ptr %101, align 8
  %103 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %102, i32 0, i32 6
  %104 = getelementptr inbounds [8 x i32], ptr %103, i64 0, i64 2
  store i32 %99, ptr %104, align 4
  %105 = load ptr, ptr %2, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %105, i32 0, i32 71
  %107 = load i32, ptr %106, align 8
  %108 = load ptr, ptr %2, align 8
  %109 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %108, i32 0, i32 0
  %110 = load ptr, ptr %109, align 8
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %110, i32 0, i32 6
  %112 = getelementptr inbounds [8 x i32], ptr %111, i64 0, i64 3
  store i32 %107, ptr %112, align 4
  %113 = load ptr, ptr %2, align 8
  %114 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %113, i32 0, i32 0
  %115 = load ptr, ptr %114, align 8
  %116 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %115, i32 0, i32 0
  %117 = load ptr, ptr %116, align 8
  %118 = load ptr, ptr %2, align 8
  call void %117(ptr noundef %118)
  br label %119

119:                                              ; preds = %76, %73
  store i32 0, ptr %6, align 4
  br label %120

120:                                              ; preds = %237, %119
  %121 = load i32, ptr %6, align 4
  %122 = load ptr, ptr %2, align 8
  %123 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %122, i32 0, i32 62
  %124 = load i32, ptr %123, align 8
  %125 = icmp slt i32 %121, %124
  br i1 %125, label %126, label %240

126:                                              ; preds = %120
  %127 = load ptr, ptr %2, align 8
  %128 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %127, i32 0, i32 63
  %129 = load i32, ptr %6, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [4 x ptr], ptr %128, i64 0, i64 %130
  %132 = load ptr, ptr %131, align 8
  %133 = getelementptr inbounds %struct.jpeg_component_info, ptr %132, i32 0, i32 1
  %134 = load i32, ptr %133, align 4
  store i32 %134, ptr %11, align 4
  %135 = load ptr, ptr %2, align 8
  %136 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %135, i32 0, i32 38
  %137 = load ptr, ptr %136, align 8
  %138 = load i32, ptr %11, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [64 x i32], ptr %137, i64 %139
  %141 = getelementptr inbounds [64 x i32], ptr %140, i64 0, i64 0
  store ptr %141, ptr %9, align 8
  %142 = load i32, ptr %4, align 4
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %171, label %144

144:                                              ; preds = %126
  %145 = load ptr, ptr %9, align 8
  %146 = getelementptr inbounds i32, ptr %145, i64 0
  %147 = load i32, ptr %146, align 4
  %148 = icmp slt i32 %147, 0
  br i1 %148, label %149, label %171

149:                                              ; preds = %144
  %150 = load ptr, ptr %2, align 8
  %151 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %150, i32 0, i32 0
  %152 = load ptr, ptr %151, align 8
  %153 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %152, i32 0, i32 5
  store i32 111, ptr %153, align 8
  %154 = load i32, ptr %11, align 4
  %155 = load ptr, ptr %2, align 8
  %156 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %155, i32 0, i32 0
  %157 = load ptr, ptr %156, align 8
  %158 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %157, i32 0, i32 6
  %159 = getelementptr inbounds [8 x i32], ptr %158, i64 0, i64 0
  store i32 %154, ptr %159, align 4
  %160 = load ptr, ptr %2, align 8
  %161 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %160, i32 0, i32 0
  %162 = load ptr, ptr %161, align 8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %162, i32 0, i32 6
  %164 = getelementptr inbounds [8 x i32], ptr %163, i64 0, i64 1
  store i32 0, ptr %164, align 4
  %165 = load ptr, ptr %2, align 8
  %166 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %165, i32 0, i32 0
  %167 = load ptr, ptr %166, align 8
  %168 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %167, i32 0, i32 1
  %169 = load ptr, ptr %168, align 8
  %170 = load ptr, ptr %2, align 8
  call void %169(ptr noundef %170, i32 noundef -1)
  br label %171

171:                                              ; preds = %149, %144, %126
  %172 = load ptr, ptr %2, align 8
  %173 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %172, i32 0, i32 68
  %174 = load i32, ptr %173, align 4
  store i32 %174, ptr %7, align 4
  br label %175

175:                                              ; preds = %233, %171
  %176 = load i32, ptr %7, align 4
  %177 = load ptr, ptr %2, align 8
  %178 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %177, i32 0, i32 69
  %179 = load i32, ptr %178, align 8
  %180 = icmp sle i32 %176, %179
  br i1 %180, label %181, label %236

181:                                              ; preds = %175
  %182 = load ptr, ptr %9, align 8
  %183 = load i32, ptr %7, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i32, ptr %182, i64 %184
  %186 = load i32, ptr %185, align 4
  %187 = icmp slt i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %181
  br label %195

189:                                              ; preds = %181
  %190 = load ptr, ptr %9, align 8
  %191 = load i32, ptr %7, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i32, ptr %190, i64 %192
  %194 = load i32, ptr %193, align 4
  br label %195

195:                                              ; preds = %189, %188
  %196 = phi i32 [ 0, %188 ], [ %194, %189 ]
  store i32 %196, ptr %12, align 4
  %197 = load ptr, ptr %2, align 8
  %198 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %197, i32 0, i32 70
  %199 = load i32, ptr %198, align 4
  %200 = load i32, ptr %12, align 4
  %201 = icmp ne i32 %199, %200
  br i1 %201, label %202, label %225

202:                                              ; preds = %195
  %203 = load ptr, ptr %2, align 8
  %204 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %203, i32 0, i32 0
  %205 = load ptr, ptr %204, align 8
  %206 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %205, i32 0, i32 5
  store i32 111, ptr %206, align 8
  %207 = load i32, ptr %11, align 4
  %208 = load ptr, ptr %2, align 8
  %209 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %208, i32 0, i32 0
  %210 = load ptr, ptr %209, align 8
  %211 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %210, i32 0, i32 6
  %212 = getelementptr inbounds [8 x i32], ptr %211, i64 0, i64 0
  store i32 %207, ptr %212, align 4
  %213 = load i32, ptr %7, align 4
  %214 = load ptr, ptr %2, align 8
  %215 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %214, i32 0, i32 0
  %216 = load ptr, ptr %215, align 8
  %217 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %216, i32 0, i32 6
  %218 = getelementptr inbounds [8 x i32], ptr %217, i64 0, i64 1
  store i32 %213, ptr %218, align 4
  %219 = load ptr, ptr %2, align 8
  %220 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %219, i32 0, i32 0
  %221 = load ptr, ptr %220, align 8
  %222 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %221, i32 0, i32 1
  %223 = load ptr, ptr %222, align 8
  %224 = load ptr, ptr %2, align 8
  call void %223(ptr noundef %224, i32 noundef -1)
  br label %225

225:                                              ; preds = %202, %195
  %226 = load ptr, ptr %2, align 8
  %227 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %226, i32 0, i32 71
  %228 = load i32, ptr %227, align 8
  %229 = load ptr, ptr %9, align 8
  %230 = load i32, ptr %7, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i32, ptr %229, i64 %231
  store i32 %228, ptr %232, align 4
  br label %233

233:                                              ; preds = %225
  %234 = load i32, ptr %7, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, ptr %7, align 4
  br label %175, !llvm.loop !10

236:                                              ; preds = %175
  br label %237

237:                                              ; preds = %236
  %238 = load i32, ptr %6, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, ptr %6, align 4
  br label %120, !llvm.loop !11

240:                                              ; preds = %120
  %241 = load ptr, ptr %2, align 8
  %242 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %241, i32 0, i32 70
  %243 = load i32, ptr %242, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %257

245:                                              ; preds = %240
  %246 = load i32, ptr %4, align 4
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %248, label %252

248:                                              ; preds = %245
  %249 = load ptr, ptr %3, align 8
  %250 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %249, i32 0, i32 0
  %251 = getelementptr inbounds %struct.jpeg_entropy_decoder, ptr %250, i32 0, i32 1
  store ptr @decode_mcu_DC_first, ptr %251, align 8
  br label %256

252:                                              ; preds = %245
  %253 = load ptr, ptr %3, align 8
  %254 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %253, i32 0, i32 0
  %255 = getelementptr inbounds %struct.jpeg_entropy_decoder, ptr %254, i32 0, i32 1
  store ptr @decode_mcu_AC_first, ptr %255, align 8
  br label %256

256:                                              ; preds = %252, %248
  br label %269

257:                                              ; preds = %240
  %258 = load i32, ptr %4, align 4
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = load ptr, ptr %3, align 8
  %262 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %261, i32 0, i32 0
  %263 = getelementptr inbounds %struct.jpeg_entropy_decoder, ptr %262, i32 0, i32 1
  store ptr @decode_mcu_DC_refine, ptr %263, align 8
  br label %268

264:                                              ; preds = %257
  %265 = load ptr, ptr %3, align 8
  %266 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %265, i32 0, i32 0
  %267 = getelementptr inbounds %struct.jpeg_entropy_decoder, ptr %266, i32 0, i32 1
  store ptr @decode_mcu_AC_refine, ptr %267, align 8
  br label %268

268:                                              ; preds = %264, %260
  br label %269

269:                                              ; preds = %268, %256
  store i32 0, ptr %6, align 4
  br label %270

270:                                              ; preds = %400, %269
  %271 = load i32, ptr %6, align 4
  %272 = load ptr, ptr %2, align 8
  %273 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %272, i32 0, i32 62
  %274 = load i32, ptr %273, align 8
  %275 = icmp slt i32 %271, %274
  br i1 %275, label %276, label %403

276:                                              ; preds = %270
  %277 = load ptr, ptr %2, align 8
  %278 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %277, i32 0, i32 63
  %279 = load i32, ptr %6, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [4 x ptr], ptr %278, i64 0, i64 %280
  %282 = load ptr, ptr %281, align 8
  store ptr %282, ptr %10, align 8
  %283 = load i32, ptr %4, align 4
  %284 = icmp ne i32 %283, 0
  br i1 %284, label %285, label %338

285:                                              ; preds = %276
  %286 = load ptr, ptr %2, align 8
  %287 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %286, i32 0, i32 70
  %288 = load i32, ptr %287, align 4
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %337

290:                                              ; preds = %285
  %291 = load ptr, ptr %10, align 8
  %292 = getelementptr inbounds %struct.jpeg_component_info, ptr %291, i32 0, i32 5
  %293 = load i32, ptr %292, align 4
  store i32 %293, ptr %8, align 4
  %294 = load i32, ptr %8, align 4
  %295 = icmp slt i32 %294, 0
  br i1 %295, label %307, label %296

296:                                              ; preds = %290
  %297 = load i32, ptr %8, align 4
  %298 = icmp sge i32 %297, 4
  br i1 %298, label %307, label %299

299:                                              ; preds = %296
  %300 = load ptr, ptr %2, align 8
  %301 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %300, i32 0, i32 40
  %302 = load i32, ptr %8, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [4 x ptr], ptr %301, i64 0, i64 %303
  %305 = load ptr, ptr %304, align 8
  %306 = icmp eq ptr %305, null
  br i1 %306, label %307, label %324

307:                                              ; preds = %299, %296, %290
  %308 = load ptr, ptr %2, align 8
  %309 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %308, i32 0, i32 0
  %310 = load ptr, ptr %309, align 8
  %311 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %310, i32 0, i32 5
  store i32 49, ptr %311, align 8
  %312 = load i32, ptr %8, align 4
  %313 = load ptr, ptr %2, align 8
  %314 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %313, i32 0, i32 0
  %315 = load ptr, ptr %314, align 8
  %316 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %315, i32 0, i32 6
  %317 = getelementptr inbounds [8 x i32], ptr %316, i64 0, i64 0
  store i32 %312, ptr %317, align 4
  %318 = load ptr, ptr %2, align 8
  %319 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %318, i32 0, i32 0
  %320 = load ptr, ptr %319, align 8
  %321 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %320, i32 0, i32 0
  %322 = load ptr, ptr %321, align 8
  %323 = load ptr, ptr %2, align 8
  call void %322(ptr noundef %323)
  br label %324

324:                                              ; preds = %307, %299
  %325 = load ptr, ptr %2, align 8
  %326 = load ptr, ptr %2, align 8
  %327 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %326, i32 0, i32 40
  %328 = load i32, ptr %8, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [4 x ptr], ptr %327, i64 0, i64 %329
  %331 = load ptr, ptr %330, align 8
  %332 = load ptr, ptr %3, align 8
  %333 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %332, i32 0, i32 4
  %334 = load i32, ptr %8, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [4 x ptr], ptr %333, i64 0, i64 %335
  call void @jpeg_make_d_derived_tbl(ptr noundef %325, ptr noundef %331, ptr noundef %336)
  br label %337

337:                                              ; preds = %324, %285
  br label %393

338:                                              ; preds = %276
  %339 = load ptr, ptr %10, align 8
  %340 = getelementptr inbounds %struct.jpeg_component_info, ptr %339, i32 0, i32 6
  %341 = load i32, ptr %340, align 8
  store i32 %341, ptr %8, align 4
  %342 = load i32, ptr %8, align 4
  %343 = icmp slt i32 %342, 0
  br i1 %343, label %355, label %344

344:                                              ; preds = %338
  %345 = load i32, ptr %8, align 4
  %346 = icmp sge i32 %345, 4
  br i1 %346, label %355, label %347

347:                                              ; preds = %344
  %348 = load ptr, ptr %2, align 8
  %349 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %348, i32 0, i32 41
  %350 = load i32, ptr %8, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [4 x ptr], ptr %349, i64 0, i64 %351
  %353 = load ptr, ptr %352, align 8
  %354 = icmp eq ptr %353, null
  br i1 %354, label %355, label %372

355:                                              ; preds = %347, %344, %338
  %356 = load ptr, ptr %2, align 8
  %357 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %356, i32 0, i32 0
  %358 = load ptr, ptr %357, align 8
  %359 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %358, i32 0, i32 5
  store i32 49, ptr %359, align 8
  %360 = load i32, ptr %8, align 4
  %361 = load ptr, ptr %2, align 8
  %362 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %361, i32 0, i32 0
  %363 = load ptr, ptr %362, align 8
  %364 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %363, i32 0, i32 6
  %365 = getelementptr inbounds [8 x i32], ptr %364, i64 0, i64 0
  store i32 %360, ptr %365, align 4
  %366 = load ptr, ptr %2, align 8
  %367 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %366, i32 0, i32 0
  %368 = load ptr, ptr %367, align 8
  %369 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %368, i32 0, i32 0
  %370 = load ptr, ptr %369, align 8
  %371 = load ptr, ptr %2, align 8
  call void %370(ptr noundef %371)
  br label %372

372:                                              ; preds = %355, %347
  %373 = load ptr, ptr %2, align 8
  %374 = load ptr, ptr %2, align 8
  %375 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %374, i32 0, i32 41
  %376 = load i32, ptr %8, align 4
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds [4 x ptr], ptr %375, i64 0, i64 %377
  %379 = load ptr, ptr %378, align 8
  %380 = load ptr, ptr %3, align 8
  %381 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %380, i32 0, i32 4
  %382 = load i32, ptr %8, align 4
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds [4 x ptr], ptr %381, i64 0, i64 %383
  call void @jpeg_make_d_derived_tbl(ptr noundef %373, ptr noundef %379, ptr noundef %384)
  %385 = load ptr, ptr %3, align 8
  %386 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %385, i32 0, i32 4
  %387 = load i32, ptr %8, align 4
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [4 x ptr], ptr %386, i64 0, i64 %388
  %390 = load ptr, ptr %389, align 8
  %391 = load ptr, ptr %3, align 8
  %392 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %391, i32 0, i32 5
  store ptr %390, ptr %392, align 8
  br label %393

393:                                              ; preds = %372, %337
  %394 = load ptr, ptr %3, align 8
  %395 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %394, i32 0, i32 2
  %396 = getelementptr inbounds %struct.savable_state, ptr %395, i32 0, i32 1
  %397 = load i32, ptr %6, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [4 x i32], ptr %396, i64 0, i64 %398
  store i32 0, ptr %399, align 4
  br label %400

400:                                              ; preds = %393
  %401 = load i32, ptr %6, align 4
  %402 = add nsw i32 %401, 1
  store i32 %402, ptr %6, align 4
  br label %270, !llvm.loop !12

403:                                              ; preds = %270
  %404 = load ptr, ptr %3, align 8
  %405 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %404, i32 0, i32 1
  %406 = getelementptr inbounds %struct.bitread_perm_state, ptr %405, i32 0, i32 1
  store i32 0, ptr %406, align 8
  %407 = load ptr, ptr %3, align 8
  %408 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %407, i32 0, i32 1
  %409 = getelementptr inbounds %struct.bitread_perm_state, ptr %408, i32 0, i32 0
  store i64 0, ptr %409, align 8
  %410 = load ptr, ptr %3, align 8
  %411 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %410, i32 0, i32 1
  %412 = getelementptr inbounds %struct.bitread_perm_state, ptr %411, i32 0, i32 2
  store i32 0, ptr %412, align 4
  %413 = load ptr, ptr %3, align 8
  %414 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %413, i32 0, i32 2
  %415 = getelementptr inbounds %struct.savable_state, ptr %414, i32 0, i32 0
  store i32 0, ptr %415, align 8
  %416 = load ptr, ptr %2, align 8
  %417 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %416, i32 0, i32 49
  %418 = load i32, ptr %417, align 8
  %419 = load ptr, ptr %3, align 8
  %420 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %419, i32 0, i32 3
  store i32 %418, ptr %420, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu_DC_first(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.bitread_working_state, align 8
  %16 = alloca %struct.savable_state, align 4
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %21, i32 0, i32 79
  %23 = load ptr, ptr %22, align 8
  store ptr %23, ptr %6, align 8
  %24 = load ptr, ptr %4, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %24, i32 0, i32 71
  %26 = load i32, ptr %25, align 8
  store i32 %26, ptr %7, align 4
  %27 = load ptr, ptr %4, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %27, i32 0, i32 49
  %29 = load i32, ptr %28, align 8
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %2
  %32 = load ptr, ptr %6, align 8
  %33 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %32, i32 0, i32 3
  %34 = load i32, ptr %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = load ptr, ptr %4, align 8
  %38 = call i32 @process_restart(ptr noundef %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  store i32 0, ptr %3, align 4
  br label %266

41:                                               ; preds = %36
  br label %42

42:                                               ; preds = %41, %31
  br label %43

43:                                               ; preds = %42, %2
  %44 = load ptr, ptr %4, align 8
  %45 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 5
  store ptr %44, ptr %45, align 8
  %46 = load ptr, ptr %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %46, i32 0, i32 5
  %48 = load ptr, ptr %47, align 8
  %49 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %48, i32 0, i32 0
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 0
  store ptr %50, ptr %51, align 8
  %52 = load ptr, ptr %4, align 8
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %52, i32 0, i32 5
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %54, i32 0, i32 1
  %56 = load i64, ptr %55, align 8
  %57 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 1
  store i64 %56, ptr %57, align 8
  %58 = load ptr, ptr %4, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %58, i32 0, i32 72
  %60 = load i32, ptr %59, align 4
  %61 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 2
  store i32 %60, ptr %61, align 8
  %62 = load ptr, ptr %6, align 8
  %63 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %62, i32 0, i32 1
  %64 = getelementptr inbounds %struct.bitread_perm_state, ptr %63, i32 0, i32 0
  %65 = load i64, ptr %64, align 8
  store i64 %65, ptr %13, align 8
  %66 = load ptr, ptr %6, align 8
  %67 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %66, i32 0, i32 1
  %68 = getelementptr inbounds %struct.bitread_perm_state, ptr %67, i32 0, i32 1
  %69 = load i32, ptr %68, align 8
  store i32 %69, ptr %14, align 4
  %70 = load ptr, ptr %6, align 8
  %71 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.bitread_perm_state, ptr %71, i32 0, i32 2
  %73 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 6
  store ptr %72, ptr %73, align 8
  %74 = load ptr, ptr %6, align 8
  %75 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %74, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %16, ptr align 8 %75, i64 20, i1 false)
  store i32 0, ptr %10, align 4
  br label %76

76:                                               ; preds = %232, %43
  %77 = load i32, ptr %10, align 4
  %78 = load ptr, ptr %4, align 8
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %78, i32 0, i32 66
  %80 = load i32, ptr %79, align 8
  %81 = icmp slt i32 %77, %80
  br i1 %81, label %82, label %235

82:                                               ; preds = %76
  %83 = load ptr, ptr %5, align 8
  %84 = load i32, ptr %10, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds ptr, ptr %83, i64 %85
  %87 = load ptr, ptr %86, align 8
  store ptr %87, ptr %12, align 8
  %88 = load ptr, ptr %4, align 8
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %88, i32 0, i32 67
  %90 = load i32, ptr %10, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [10 x i32], ptr %89, i64 0, i64 %91
  %93 = load i32, ptr %92, align 4
  store i32 %93, ptr %11, align 4
  %94 = load ptr, ptr %4, align 8
  %95 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %94, i32 0, i32 63
  %96 = load i32, ptr %11, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [4 x ptr], ptr %95, i64 0, i64 %97
  %99 = load ptr, ptr %98, align 8
  store ptr %99, ptr %18, align 8
  %100 = load ptr, ptr %6, align 8
  %101 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %100, i32 0, i32 4
  %102 = load ptr, ptr %18, align 8
  %103 = getelementptr inbounds %struct.jpeg_component_info, ptr %102, i32 0, i32 5
  %104 = load i32, ptr %103, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [4 x ptr], ptr %101, i64 0, i64 %105
  %107 = load ptr, ptr %106, align 8
  store ptr %107, ptr %17, align 8
  %108 = load i32, ptr %14, align 4
  %109 = icmp slt i32 %108, 8
  br i1 %109, label %110, label %125

110:                                              ; preds = %82
  %111 = load i64, ptr %13, align 8
  %112 = load i32, ptr %14, align 4
  %113 = call i32 @jpeg_fill_bit_buffer(ptr noundef %15, i64 noundef %111, i32 noundef %112, i32 noundef 0)
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %110
  store i32 0, ptr %3, align 4
  br label %266

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 3
  %118 = load i64, ptr %117, align 8
  store i64 %118, ptr %13, align 8
  %119 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 4
  %120 = load i32, ptr %119, align 8
  store i32 %120, ptr %14, align 4
  %121 = load i32, ptr %14, align 4
  %122 = icmp slt i32 %121, 8
  br i1 %122, label %123, label %124

123:                                              ; preds = %116
  store i32 1, ptr %19, align 4
  br label %152

124:                                              ; preds = %116
  br label %125

125:                                              ; preds = %124, %82
  %126 = load i64, ptr %13, align 8
  %127 = load i32, ptr %14, align 4
  %128 = sub nsw i32 %127, 8
  %129 = zext i32 %128 to i64
  %130 = ashr i64 %126, %129
  %131 = trunc i64 %130 to i32
  %132 = and i32 %131, 255
  store i32 %132, ptr %20, align 4
  %133 = load ptr, ptr %17, align 8
  %134 = getelementptr inbounds %struct.d_derived_tbl, ptr %133, i32 0, i32 4
  %135 = load i32, ptr %20, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [256 x i32], ptr %134, i64 0, i64 %136
  %138 = load i32, ptr %137, align 4
  store i32 %138, ptr %19, align 4
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %151

140:                                              ; preds = %125
  %141 = load i32, ptr %19, align 4
  %142 = load i32, ptr %14, align 4
  %143 = sub nsw i32 %142, %141
  store i32 %143, ptr %14, align 4
  %144 = load ptr, ptr %17, align 8
  %145 = getelementptr inbounds %struct.d_derived_tbl, ptr %144, i32 0, i32 5
  %146 = load i32, ptr %20, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [256 x i8], ptr %145, i64 0, i64 %147
  %149 = load i8, ptr %148, align 1
  %150 = zext i8 %149 to i32
  store i32 %150, ptr %8, align 4
  br label %165

151:                                              ; preds = %125
  store i32 9, ptr %19, align 4
  br label %152

152:                                              ; preds = %151, %123
  %153 = load i64, ptr %13, align 8
  %154 = load i32, ptr %14, align 4
  %155 = load ptr, ptr %17, align 8
  %156 = load i32, ptr %19, align 4
  %157 = call i32 @jpeg_huff_decode(ptr noundef %15, i64 noundef %153, i32 noundef %154, ptr noundef %155, i32 noundef %156)
  store i32 %157, ptr %8, align 4
  %158 = icmp slt i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %152
  store i32 0, ptr %3, align 4
  br label %266

160:                                              ; preds = %152
  %161 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 3
  %162 = load i64, ptr %161, align 8
  store i64 %162, ptr %13, align 8
  %163 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 4
  %164 = load i32, ptr %163, align 8
  store i32 %164, ptr %14, align 4
  br label %165

165:                                              ; preds = %160, %140
  %166 = load i32, ptr %8, align 4
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %168, label %213

168:                                              ; preds = %165
  %169 = load i32, ptr %14, align 4
  %170 = load i32, ptr %8, align 4
  %171 = icmp slt i32 %169, %170
  br i1 %171, label %172, label %184

172:                                              ; preds = %168
  %173 = load i64, ptr %13, align 8
  %174 = load i32, ptr %14, align 4
  %175 = load i32, ptr %8, align 4
  %176 = call i32 @jpeg_fill_bit_buffer(ptr noundef %15, i64 noundef %173, i32 noundef %174, i32 noundef %175)
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %172
  store i32 0, ptr %3, align 4
  br label %266

179:                                              ; preds = %172
  %180 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 3
  %181 = load i64, ptr %180, align 8
  store i64 %181, ptr %13, align 8
  %182 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 4
  %183 = load i32, ptr %182, align 8
  store i32 %183, ptr %14, align 4
  br label %184

184:                                              ; preds = %179, %168
  %185 = load i64, ptr %13, align 8
  %186 = load i32, ptr %8, align 4
  %187 = load i32, ptr %14, align 4
  %188 = sub nsw i32 %187, %186
  store i32 %188, ptr %14, align 4
  %189 = zext i32 %188 to i64
  %190 = ashr i64 %185, %189
  %191 = trunc i64 %190 to i32
  %192 = load i32, ptr %8, align 4
  %193 = shl i32 1, %192
  %194 = sub nsw i32 %193, 1
  %195 = and i32 %191, %194
  store i32 %195, ptr %9, align 4
  %196 = load i32, ptr %9, align 4
  %197 = load i32, ptr %8, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [16 x i32], ptr @extend_test, i64 0, i64 %198
  %200 = load i32, ptr %199, align 4
  %201 = icmp slt i32 %196, %200
  br i1 %201, label %202, label %209

202:                                              ; preds = %184
  %203 = load i32, ptr %9, align 4
  %204 = load i32, ptr %8, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [16 x i32], ptr @extend_offset, i64 0, i64 %205
  %207 = load i32, ptr %206, align 4
  %208 = add nsw i32 %203, %207
  br label %211

209:                                              ; preds = %184
  %210 = load i32, ptr %9, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %208, %202 ], [ %210, %209 ]
  store i32 %212, ptr %8, align 4
  br label %213

213:                                              ; preds = %211, %165
  %214 = getelementptr inbounds %struct.savable_state, ptr %16, i32 0, i32 1
  %215 = load i32, ptr %11, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds [4 x i32], ptr %214, i64 0, i64 %216
  %218 = load i32, ptr %217, align 4
  %219 = load i32, ptr %8, align 4
  %220 = add nsw i32 %219, %218
  store i32 %220, ptr %8, align 4
  %221 = load i32, ptr %8, align 4
  %222 = getelementptr inbounds %struct.savable_state, ptr %16, i32 0, i32 1
  %223 = load i32, ptr %11, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [4 x i32], ptr %222, i64 0, i64 %224
  store i32 %221, ptr %225, align 4
  %226 = load i32, ptr %8, align 4
  %227 = load i32, ptr %7, align 4
  %228 = shl i32 %226, %227
  %229 = trunc i32 %228 to i16
  %230 = load ptr, ptr %12, align 8
  %231 = getelementptr inbounds [64 x i16], ptr %230, i64 0, i64 0
  store i16 %229, ptr %231, align 2
  br label %232

232:                                              ; preds = %213
  %233 = load i32, ptr %10, align 4
  %234 = add nsw i32 %233, 1
  store i32 %234, ptr %10, align 4
  br label %76, !llvm.loop !13

235:                                              ; preds = %76
  %236 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 0
  %237 = load ptr, ptr %236, align 8
  %238 = load ptr, ptr %4, align 8
  %239 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %238, i32 0, i32 5
  %240 = load ptr, ptr %239, align 8
  %241 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %240, i32 0, i32 0
  store ptr %237, ptr %241, align 8
  %242 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 1
  %243 = load i64, ptr %242, align 8
  %244 = load ptr, ptr %4, align 8
  %245 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %244, i32 0, i32 5
  %246 = load ptr, ptr %245, align 8
  %247 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %246, i32 0, i32 1
  store i64 %243, ptr %247, align 8
  %248 = getelementptr inbounds %struct.bitread_working_state, ptr %15, i32 0, i32 2
  %249 = load i32, ptr %248, align 8
  %250 = load ptr, ptr %4, align 8
  %251 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %250, i32 0, i32 72
  store i32 %249, ptr %251, align 4
  %252 = load i64, ptr %13, align 8
  %253 = load ptr, ptr %6, align 8
  %254 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %253, i32 0, i32 1
  %255 = getelementptr inbounds %struct.bitread_perm_state, ptr %254, i32 0, i32 0
  store i64 %252, ptr %255, align 8
  %256 = load i32, ptr %14, align 4
  %257 = load ptr, ptr %6, align 8
  %258 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %257, i32 0, i32 1
  %259 = getelementptr inbounds %struct.bitread_perm_state, ptr %258, i32 0, i32 1
  store i32 %256, ptr %259, align 8
  %260 = load ptr, ptr %6, align 8
  %261 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %260, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %261, ptr align 4 %16, i64 20, i1 false)
  %262 = load ptr, ptr %6, align 8
  %263 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %262, i32 0, i32 3
  %264 = load i32, ptr %263, align 4
  %265 = add i32 %264, -1
  store i32 %265, ptr %263, align 4
  store i32 1, ptr %3, align 4
  br label %266

266:                                              ; preds = %235, %178, %159, %115, %40
  %267 = load i32, ptr %3, align 4
  ret i32 %267
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu_AC_first(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca ptr, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.bitread_working_state, align 8
  %17 = alloca ptr, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %20 = load ptr, ptr %4, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %20, i32 0, i32 79
  %22 = load ptr, ptr %21, align 8
  store ptr %22, ptr %6, align 8
  %23 = load ptr, ptr %4, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %23, i32 0, i32 69
  %25 = load i32, ptr %24, align 8
  store i32 %25, ptr %7, align 4
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %26, i32 0, i32 71
  %28 = load i32, ptr %27, align 8
  store i32 %28, ptr %8, align 4
  %29 = load ptr, ptr %4, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %29, i32 0, i32 49
  %31 = load i32, ptr %30, align 8
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %2
  %34 = load ptr, ptr %6, align 8
  %35 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %34, i32 0, i32 3
  %36 = load i32, ptr %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = load ptr, ptr %4, align 8
  %40 = call i32 @process_restart(ptr noundef %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  store i32 0, ptr %3, align 4
  br label %307

43:                                               ; preds = %38
  br label %44

44:                                               ; preds = %43, %33
  br label %45

45:                                               ; preds = %44, %2
  %46 = load ptr, ptr %6, align 8
  %47 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %46, i32 0, i32 2
  %48 = getelementptr inbounds %struct.savable_state, ptr %47, i32 0, i32 0
  %49 = load i32, ptr %48, align 8
  store i32 %49, ptr %12, align 4
  %50 = load i32, ptr %12, align 4
  %51 = icmp ugt i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = load i32, ptr %12, align 4
  %54 = add i32 %53, -1
  store i32 %54, ptr %12, align 4
  br label %298

55:                                               ; preds = %45
  %56 = load ptr, ptr %4, align 8
  %57 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 5
  store ptr %56, ptr %57, align 8
  %58 = load ptr, ptr %4, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %58, i32 0, i32 5
  %60 = load ptr, ptr %59, align 8
  %61 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %60, i32 0, i32 0
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 0
  store ptr %62, ptr %63, align 8
  %64 = load ptr, ptr %4, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %64, i32 0, i32 5
  %66 = load ptr, ptr %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %66, i32 0, i32 1
  %68 = load i64, ptr %67, align 8
  %69 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 1
  store i64 %68, ptr %69, align 8
  %70 = load ptr, ptr %4, align 8
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %70, i32 0, i32 72
  %72 = load i32, ptr %71, align 4
  %73 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 2
  store i32 %72, ptr %73, align 8
  %74 = load ptr, ptr %6, align 8
  %75 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %74, i32 0, i32 1
  %76 = getelementptr inbounds %struct.bitread_perm_state, ptr %75, i32 0, i32 0
  %77 = load i64, ptr %76, align 8
  store i64 %77, ptr %14, align 8
  %78 = load ptr, ptr %6, align 8
  %79 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %78, i32 0, i32 1
  %80 = getelementptr inbounds %struct.bitread_perm_state, ptr %79, i32 0, i32 1
  %81 = load i32, ptr %80, align 8
  store i32 %81, ptr %15, align 4
  %82 = load ptr, ptr %6, align 8
  %83 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %82, i32 0, i32 1
  %84 = getelementptr inbounds %struct.bitread_perm_state, ptr %83, i32 0, i32 2
  %85 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 6
  store ptr %84, ptr %85, align 8
  %86 = load ptr, ptr %5, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 0
  %88 = load ptr, ptr %87, align 8
  store ptr %88, ptr %13, align 8
  %89 = load ptr, ptr %6, align 8
  %90 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %89, i32 0, i32 5
  %91 = load ptr, ptr %90, align 8
  store ptr %91, ptr %17, align 8
  %92 = load ptr, ptr %4, align 8
  %93 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %92, i32 0, i32 68
  %94 = load i32, ptr %93, align 4
  store i32 %94, ptr %10, align 4
  br label %95

95:                                               ; preds = %270, %55
  %96 = load i32, ptr %10, align 4
  %97 = load i32, ptr %7, align 4
  %98 = icmp sle i32 %96, %97
  br i1 %98, label %99, label %273

99:                                               ; preds = %95
  %100 = load i32, ptr %15, align 4
  %101 = icmp slt i32 %100, 8
  br i1 %101, label %102, label %117

102:                                              ; preds = %99
  %103 = load i64, ptr %14, align 8
  %104 = load i32, ptr %15, align 4
  %105 = call i32 @jpeg_fill_bit_buffer(ptr noundef %16, i64 noundef %103, i32 noundef %104, i32 noundef 0)
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %102
  store i32 0, ptr %3, align 4
  br label %307

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 3
  %110 = load i64, ptr %109, align 8
  store i64 %110, ptr %14, align 8
  %111 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 4
  %112 = load i32, ptr %111, align 8
  store i32 %112, ptr %15, align 4
  %113 = load i32, ptr %15, align 4
  %114 = icmp slt i32 %113, 8
  br i1 %114, label %115, label %116

115:                                              ; preds = %108
  store i32 1, ptr %18, align 4
  br label %144

116:                                              ; preds = %108
  br label %117

117:                                              ; preds = %116, %99
  %118 = load i64, ptr %14, align 8
  %119 = load i32, ptr %15, align 4
  %120 = sub nsw i32 %119, 8
  %121 = zext i32 %120 to i64
  %122 = ashr i64 %118, %121
  %123 = trunc i64 %122 to i32
  %124 = and i32 %123, 255
  store i32 %124, ptr %19, align 4
  %125 = load ptr, ptr %17, align 8
  %126 = getelementptr inbounds %struct.d_derived_tbl, ptr %125, i32 0, i32 4
  %127 = load i32, ptr %19, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [256 x i32], ptr %126, i64 0, i64 %128
  %130 = load i32, ptr %129, align 4
  store i32 %130, ptr %18, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %143

132:                                              ; preds = %117
  %133 = load i32, ptr %18, align 4
  %134 = load i32, ptr %15, align 4
  %135 = sub nsw i32 %134, %133
  store i32 %135, ptr %15, align 4
  %136 = load ptr, ptr %17, align 8
  %137 = getelementptr inbounds %struct.d_derived_tbl, ptr %136, i32 0, i32 5
  %138 = load i32, ptr %19, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [256 x i8], ptr %137, i64 0, i64 %139
  %141 = load i8, ptr %140, align 1
  %142 = zext i8 %141 to i32
  store i32 %142, ptr %9, align 4
  br label %157

143:                                              ; preds = %117
  store i32 9, ptr %18, align 4
  br label %144

144:                                              ; preds = %143, %115
  %145 = load i64, ptr %14, align 8
  %146 = load i32, ptr %15, align 4
  %147 = load ptr, ptr %17, align 8
  %148 = load i32, ptr %18, align 4
  %149 = call i32 @jpeg_huff_decode(ptr noundef %16, i64 noundef %145, i32 noundef %146, ptr noundef %147, i32 noundef %148)
  store i32 %149, ptr %9, align 4
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %144
  store i32 0, ptr %3, align 4
  br label %307

152:                                              ; preds = %144
  %153 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 3
  %154 = load i64, ptr %153, align 8
  store i64 %154, ptr %14, align 8
  %155 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 4
  %156 = load i32, ptr %155, align 8
  store i32 %156, ptr %15, align 4
  br label %157

157:                                              ; preds = %152, %132
  %158 = load i32, ptr %9, align 4
  %159 = ashr i32 %158, 4
  store i32 %159, ptr %11, align 4
  %160 = load i32, ptr %9, align 4
  %161 = and i32 %160, 15
  store i32 %161, ptr %9, align 4
  %162 = load i32, ptr %9, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %223

164:                                              ; preds = %157
  %165 = load i32, ptr %11, align 4
  %166 = load i32, ptr %10, align 4
  %167 = add nsw i32 %166, %165
  store i32 %167, ptr %10, align 4
  %168 = load i32, ptr %15, align 4
  %169 = load i32, ptr %9, align 4
  %170 = icmp slt i32 %168, %169
  br i1 %170, label %171, label %183

171:                                              ; preds = %164
  %172 = load i64, ptr %14, align 8
  %173 = load i32, ptr %15, align 4
  %174 = load i32, ptr %9, align 4
  %175 = call i32 @jpeg_fill_bit_buffer(ptr noundef %16, i64 noundef %172, i32 noundef %173, i32 noundef %174)
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %178, label %177

177:                                              ; preds = %171
  store i32 0, ptr %3, align 4
  br label %307

178:                                              ; preds = %171
  %179 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 3
  %180 = load i64, ptr %179, align 8
  store i64 %180, ptr %14, align 8
  %181 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 4
  %182 = load i32, ptr %181, align 8
  store i32 %182, ptr %15, align 4
  br label %183

183:                                              ; preds = %178, %164
  %184 = load i64, ptr %14, align 8
  %185 = load i32, ptr %9, align 4
  %186 = load i32, ptr %15, align 4
  %187 = sub nsw i32 %186, %185
  store i32 %187, ptr %15, align 4
  %188 = zext i32 %187 to i64
  %189 = ashr i64 %184, %188
  %190 = trunc i64 %189 to i32
  %191 = load i32, ptr %9, align 4
  %192 = shl i32 1, %191
  %193 = sub nsw i32 %192, 1
  %194 = and i32 %190, %193
  store i32 %194, ptr %11, align 4
  %195 = load i32, ptr %11, align 4
  %196 = load i32, ptr %9, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [16 x i32], ptr @extend_test, i64 0, i64 %197
  %199 = load i32, ptr %198, align 4
  %200 = icmp slt i32 %195, %199
  br i1 %200, label %201, label %208

201:                                              ; preds = %183
  %202 = load i32, ptr %11, align 4
  %203 = load i32, ptr %9, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [16 x i32], ptr @extend_offset, i64 0, i64 %204
  %206 = load i32, ptr %205, align 4
  %207 = add nsw i32 %202, %206
  br label %210

208:                                              ; preds = %183
  %209 = load i32, ptr %11, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %207, %201 ], [ %209, %208 ]
  store i32 %211, ptr %9, align 4
  %212 = load i32, ptr %9, align 4
  %213 = load i32, ptr %8, align 4
  %214 = shl i32 %212, %213
  %215 = trunc i32 %214 to i16
  %216 = load ptr, ptr %13, align 8
  %217 = load i32, ptr %10, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [0 x i32], ptr @jpeg_natural_order, i64 0, i64 %218
  %220 = load i32, ptr %219, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [64 x i16], ptr %216, i64 0, i64 %221
  store i16 %215, ptr %222, align 2
  br label %269

223:                                              ; preds = %157
  %224 = load i32, ptr %11, align 4
  %225 = icmp eq i32 %224, 15
  br i1 %225, label %226, label %229

226:                                              ; preds = %223
  %227 = load i32, ptr %10, align 4
  %228 = add nsw i32 %227, 15
  store i32 %228, ptr %10, align 4
  br label %268

229:                                              ; preds = %223
  %230 = load i32, ptr %11, align 4
  %231 = shl i32 1, %230
  store i32 %231, ptr %12, align 4
  %232 = load i32, ptr %11, align 4
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %265

234:                                              ; preds = %229
  %235 = load i32, ptr %15, align 4
  %236 = load i32, ptr %11, align 4
  %237 = icmp slt i32 %235, %236
  br i1 %237, label %238, label %250

238:                                              ; preds = %234
  %239 = load i64, ptr %14, align 8
  %240 = load i32, ptr %15, align 4
  %241 = load i32, ptr %11, align 4
  %242 = call i32 @jpeg_fill_bit_buffer(ptr noundef %16, i64 noundef %239, i32 noundef %240, i32 noundef %241)
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %245, label %244

244:                                              ; preds = %238
  store i32 0, ptr %3, align 4
  br label %307

245:                                              ; preds = %238
  %246 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 3
  %247 = load i64, ptr %246, align 8
  store i64 %247, ptr %14, align 8
  %248 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 4
  %249 = load i32, ptr %248, align 8
  store i32 %249, ptr %15, align 4
  br label %250

250:                                              ; preds = %245, %234
  %251 = load i64, ptr %14, align 8
  %252 = load i32, ptr %11, align 4
  %253 = load i32, ptr %15, align 4
  %254 = sub nsw i32 %253, %252
  store i32 %254, ptr %15, align 4
  %255 = zext i32 %254 to i64
  %256 = ashr i64 %251, %255
  %257 = trunc i64 %256 to i32
  %258 = load i32, ptr %11, align 4
  %259 = shl i32 1, %258
  %260 = sub nsw i32 %259, 1
  %261 = and i32 %257, %260
  store i32 %261, ptr %11, align 4
  %262 = load i32, ptr %11, align 4
  %263 = load i32, ptr %12, align 4
  %264 = add i32 %263, %262
  store i32 %264, ptr %12, align 4
  br label %265

265:                                              ; preds = %250, %229
  %266 = load i32, ptr %12, align 4
  %267 = add i32 %266, -1
  store i32 %267, ptr %12, align 4
  br label %273

268:                                              ; preds = %226
  br label %269

269:                                              ; preds = %268, %210
  br label %270

270:                                              ; preds = %269
  %271 = load i32, ptr %10, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, ptr %10, align 4
  br label %95, !llvm.loop !14

273:                                              ; preds = %265, %95
  %274 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 0
  %275 = load ptr, ptr %274, align 8
  %276 = load ptr, ptr %4, align 8
  %277 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %276, i32 0, i32 5
  %278 = load ptr, ptr %277, align 8
  %279 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %278, i32 0, i32 0
  store ptr %275, ptr %279, align 8
  %280 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 1
  %281 = load i64, ptr %280, align 8
  %282 = load ptr, ptr %4, align 8
  %283 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %282, i32 0, i32 5
  %284 = load ptr, ptr %283, align 8
  %285 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %284, i32 0, i32 1
  store i64 %281, ptr %285, align 8
  %286 = getelementptr inbounds %struct.bitread_working_state, ptr %16, i32 0, i32 2
  %287 = load i32, ptr %286, align 8
  %288 = load ptr, ptr %4, align 8
  %289 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %288, i32 0, i32 72
  store i32 %287, ptr %289, align 4
  %290 = load i64, ptr %14, align 8
  %291 = load ptr, ptr %6, align 8
  %292 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %291, i32 0, i32 1
  %293 = getelementptr inbounds %struct.bitread_perm_state, ptr %292, i32 0, i32 0
  store i64 %290, ptr %293, align 8
  %294 = load i32, ptr %15, align 4
  %295 = load ptr, ptr %6, align 8
  %296 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %295, i32 0, i32 1
  %297 = getelementptr inbounds %struct.bitread_perm_state, ptr %296, i32 0, i32 1
  store i32 %294, ptr %297, align 8
  br label %298

298:                                              ; preds = %273, %52
  %299 = load i32, ptr %12, align 4
  %300 = load ptr, ptr %6, align 8
  %301 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %300, i32 0, i32 2
  %302 = getelementptr inbounds %struct.savable_state, ptr %301, i32 0, i32 0
  store i32 %299, ptr %302, align 8
  %303 = load ptr, ptr %6, align 8
  %304 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %303, i32 0, i32 3
  %305 = load i32, ptr %304, align 4
  %306 = add i32 %305, -1
  store i32 %306, ptr %304, align 4
  store i32 1, ptr %3, align 4
  br label %307

307:                                              ; preds = %298, %244, %177, %151, %107, %42
  %308 = load i32, ptr %3, align 4
  ret i32 %308
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu_DC_refine(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.bitread_working_state, align 8
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %13 = load ptr, ptr %4, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %13, i32 0, i32 79
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %6, align 8
  %16 = load ptr, ptr %4, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %16, i32 0, i32 71
  %18 = load i32, ptr %17, align 8
  %19 = shl i32 1, %18
  store i32 %19, ptr %7, align 4
  %20 = load ptr, ptr %4, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %20, i32 0, i32 49
  %22 = load i32, ptr %21, align 8
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %2
  %25 = load ptr, ptr %6, align 8
  %26 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %25, i32 0, i32 3
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = load ptr, ptr %4, align 8
  %31 = call i32 @process_restart(ptr noundef %30)
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  store i32 0, ptr %3, align 4
  br label %142

34:                                               ; preds = %29
  br label %35

35:                                               ; preds = %34, %24
  br label %36

36:                                               ; preds = %35, %2
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 5
  store ptr %37, ptr %38, align 8
  %39 = load ptr, ptr %4, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %39, i32 0, i32 5
  %41 = load ptr, ptr %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %41, i32 0, i32 0
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 0
  store ptr %43, ptr %44, align 8
  %45 = load ptr, ptr %4, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %45, i32 0, i32 5
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %47, i32 0, i32 1
  %49 = load i64, ptr %48, align 8
  %50 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 1
  store i64 %49, ptr %50, align 8
  %51 = load ptr, ptr %4, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %51, i32 0, i32 72
  %53 = load i32, ptr %52, align 4
  %54 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 2
  store i32 %53, ptr %54, align 8
  %55 = load ptr, ptr %6, align 8
  %56 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %55, i32 0, i32 1
  %57 = getelementptr inbounds %struct.bitread_perm_state, ptr %56, i32 0, i32 0
  %58 = load i64, ptr %57, align 8
  store i64 %58, ptr %10, align 8
  %59 = load ptr, ptr %6, align 8
  %60 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %59, i32 0, i32 1
  %61 = getelementptr inbounds %struct.bitread_perm_state, ptr %60, i32 0, i32 1
  %62 = load i32, ptr %61, align 8
  store i32 %62, ptr %11, align 4
  %63 = load ptr, ptr %6, align 8
  %64 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %63, i32 0, i32 1
  %65 = getelementptr inbounds %struct.bitread_perm_state, ptr %64, i32 0, i32 2
  %66 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 6
  store ptr %65, ptr %66, align 8
  store i32 0, ptr %8, align 4
  br label %67

67:                                               ; preds = %110, %36
  %68 = load i32, ptr %8, align 4
  %69 = load ptr, ptr %4, align 8
  %70 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %69, i32 0, i32 66
  %71 = load i32, ptr %70, align 8
  %72 = icmp slt i32 %68, %71
  br i1 %72, label %73, label %113

73:                                               ; preds = %67
  %74 = load ptr, ptr %5, align 8
  %75 = load i32, ptr %8, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds ptr, ptr %74, i64 %76
  %78 = load ptr, ptr %77, align 8
  store ptr %78, ptr %9, align 8
  %79 = load i32, ptr %11, align 4
  %80 = icmp slt i32 %79, 1
  br i1 %80, label %81, label %92

81:                                               ; preds = %73
  %82 = load i64, ptr %10, align 8
  %83 = load i32, ptr %11, align 4
  %84 = call i32 @jpeg_fill_bit_buffer(ptr noundef %12, i64 noundef %82, i32 noundef %83, i32 noundef 1)
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %81
  store i32 0, ptr %3, align 4
  br label %142

87:                                               ; preds = %81
  %88 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 3
  %89 = load i64, ptr %88, align 8
  store i64 %89, ptr %10, align 8
  %90 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 4
  %91 = load i32, ptr %90, align 8
  store i32 %91, ptr %11, align 4
  br label %92

92:                                               ; preds = %87, %73
  %93 = load i64, ptr %10, align 8
  %94 = load i32, ptr %11, align 4
  %95 = sub nsw i32 %94, 1
  store i32 %95, ptr %11, align 4
  %96 = zext i32 %95 to i64
  %97 = ashr i64 %93, %96
  %98 = trunc i64 %97 to i32
  %99 = and i32 %98, 1
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %109

101:                                              ; preds = %92
  %102 = load i32, ptr %7, align 4
  %103 = load ptr, ptr %9, align 8
  %104 = getelementptr inbounds [64 x i16], ptr %103, i64 0, i64 0
  %105 = load i16, ptr %104, align 2
  %106 = sext i16 %105 to i32
  %107 = or i32 %106, %102
  %108 = trunc i32 %107 to i16
  store i16 %108, ptr %104, align 2
  br label %109

109:                                              ; preds = %101, %92
  br label %110

110:                                              ; preds = %109
  %111 = load i32, ptr %8, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr %8, align 4
  br label %67, !llvm.loop !15

113:                                              ; preds = %67
  %114 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 0
  %115 = load ptr, ptr %114, align 8
  %116 = load ptr, ptr %4, align 8
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %116, i32 0, i32 5
  %118 = load ptr, ptr %117, align 8
  %119 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %118, i32 0, i32 0
  store ptr %115, ptr %119, align 8
  %120 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 1
  %121 = load i64, ptr %120, align 8
  %122 = load ptr, ptr %4, align 8
  %123 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %122, i32 0, i32 5
  %124 = load ptr, ptr %123, align 8
  %125 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %124, i32 0, i32 1
  store i64 %121, ptr %125, align 8
  %126 = getelementptr inbounds %struct.bitread_working_state, ptr %12, i32 0, i32 2
  %127 = load i32, ptr %126, align 8
  %128 = load ptr, ptr %4, align 8
  %129 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %128, i32 0, i32 72
  store i32 %127, ptr %129, align 4
  %130 = load i64, ptr %10, align 8
  %131 = load ptr, ptr %6, align 8
  %132 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %131, i32 0, i32 1
  %133 = getelementptr inbounds %struct.bitread_perm_state, ptr %132, i32 0, i32 0
  store i64 %130, ptr %133, align 8
  %134 = load i32, ptr %11, align 4
  %135 = load ptr, ptr %6, align 8
  %136 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %135, i32 0, i32 1
  %137 = getelementptr inbounds %struct.bitread_perm_state, ptr %136, i32 0, i32 1
  store i32 %134, ptr %137, align 8
  %138 = load ptr, ptr %6, align 8
  %139 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %138, i32 0, i32 3
  %140 = load i32, ptr %139, align 4
  %141 = add i32 %140, -1
  store i32 %141, ptr %139, align 4
  store i32 1, ptr %3, align 4
  br label %142

142:                                              ; preds = %113, %86, %33
  %143 = load i32, ptr %3, align 4
  ret i32 %143
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decode_mcu_AC_refine(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.bitread_working_state, align 8
  %19 = alloca ptr, align 8
  %20 = alloca i32, align 4
  %21 = alloca [64 x i32], align 16
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %25, i32 0, i32 79
  %27 = load ptr, ptr %26, align 8
  store ptr %27, ptr %6, align 8
  %28 = load ptr, ptr %4, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %28, i32 0, i32 69
  %30 = load i32, ptr %29, align 8
  store i32 %30, ptr %7, align 4
  %31 = load ptr, ptr %4, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %31, i32 0, i32 71
  %33 = load i32, ptr %32, align 8
  %34 = shl i32 1, %33
  store i32 %34, ptr %8, align 4
  %35 = load ptr, ptr %4, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %35, i32 0, i32 71
  %37 = load i32, ptr %36, align 8
  %38 = shl i32 -1, %37
  store i32 %38, ptr %9, align 4
  %39 = load ptr, ptr %4, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %39, i32 0, i32 49
  %41 = load i32, ptr %40, align 8
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %2
  %44 = load ptr, ptr %6, align 8
  %45 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %44, i32 0, i32 3
  %46 = load i32, ptr %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = load ptr, ptr %4, align 8
  %50 = call i32 @process_restart(ptr noundef %49)
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  store i32 0, ptr %3, align 4
  br label %484

53:                                               ; preds = %48
  br label %54

54:                                               ; preds = %53, %43
  br label %55

55:                                               ; preds = %54, %2
  %56 = load ptr, ptr %4, align 8
  %57 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 5
  store ptr %56, ptr %57, align 8
  %58 = load ptr, ptr %4, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %58, i32 0, i32 5
  %60 = load ptr, ptr %59, align 8
  %61 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %60, i32 0, i32 0
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 0
  store ptr %62, ptr %63, align 8
  %64 = load ptr, ptr %4, align 8
  %65 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %64, i32 0, i32 5
  %66 = load ptr, ptr %65, align 8
  %67 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %66, i32 0, i32 1
  %68 = load i64, ptr %67, align 8
  %69 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 1
  store i64 %68, ptr %69, align 8
  %70 = load ptr, ptr %4, align 8
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %70, i32 0, i32 72
  %72 = load i32, ptr %71, align 4
  %73 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 2
  store i32 %72, ptr %73, align 8
  %74 = load ptr, ptr %6, align 8
  %75 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %74, i32 0, i32 1
  %76 = getelementptr inbounds %struct.bitread_perm_state, ptr %75, i32 0, i32 0
  %77 = load i64, ptr %76, align 8
  store i64 %77, ptr %16, align 8
  %78 = load ptr, ptr %6, align 8
  %79 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %78, i32 0, i32 1
  %80 = getelementptr inbounds %struct.bitread_perm_state, ptr %79, i32 0, i32 1
  %81 = load i32, ptr %80, align 8
  store i32 %81, ptr %17, align 4
  %82 = load ptr, ptr %6, align 8
  %83 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %82, i32 0, i32 1
  %84 = getelementptr inbounds %struct.bitread_perm_state, ptr %83, i32 0, i32 2
  %85 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 6
  store ptr %84, ptr %85, align 8
  %86 = load ptr, ptr %6, align 8
  %87 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %86, i32 0, i32 2
  %88 = getelementptr inbounds %struct.savable_state, ptr %87, i32 0, i32 0
  %89 = load i32, ptr %88, align 8
  store i32 %89, ptr %13, align 4
  %90 = load ptr, ptr %5, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 0
  %92 = load ptr, ptr %91, align 8
  store ptr %92, ptr %14, align 8
  %93 = load ptr, ptr %6, align 8
  %94 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %93, i32 0, i32 5
  %95 = load ptr, ptr %94, align 8
  store ptr %95, ptr %19, align 8
  store i32 0, ptr %20, align 4
  %96 = load ptr, ptr %4, align 8
  %97 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %96, i32 0, i32 68
  %98 = load i32, ptr %97, align 4
  store i32 %98, ptr %11, align 4
  %99 = load i32, ptr %13, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %357

101:                                              ; preds = %55
  br label %102

102:                                              ; preds = %353, %101
  %103 = load i32, ptr %11, align 4
  %104 = load i32, ptr %7, align 4
  %105 = icmp sle i32 %103, %104
  br i1 %105, label %106, label %356

106:                                              ; preds = %102
  %107 = load i32, ptr %17, align 4
  %108 = icmp slt i32 %107, 8
  br i1 %108, label %109, label %124

109:                                              ; preds = %106
  %110 = load i64, ptr %16, align 8
  %111 = load i32, ptr %17, align 4
  %112 = call i32 @jpeg_fill_bit_buffer(ptr noundef %18, i64 noundef %110, i32 noundef %111, i32 noundef 0)
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %109
  br label %470

115:                                              ; preds = %109
  %116 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 3
  %117 = load i64, ptr %116, align 8
  store i64 %117, ptr %16, align 8
  %118 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 4
  %119 = load i32, ptr %118, align 8
  store i32 %119, ptr %17, align 4
  %120 = load i32, ptr %17, align 4
  %121 = icmp slt i32 %120, 8
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  store i32 1, ptr %22, align 4
  br label %151

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123, %106
  %125 = load i64, ptr %16, align 8
  %126 = load i32, ptr %17, align 4
  %127 = sub nsw i32 %126, 8
  %128 = zext i32 %127 to i64
  %129 = ashr i64 %125, %128
  %130 = trunc i64 %129 to i32
  %131 = and i32 %130, 255
  store i32 %131, ptr %23, align 4
  %132 = load ptr, ptr %19, align 8
  %133 = getelementptr inbounds %struct.d_derived_tbl, ptr %132, i32 0, i32 4
  %134 = load i32, ptr %23, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [256 x i32], ptr %133, i64 0, i64 %135
  %137 = load i32, ptr %136, align 4
  store i32 %137, ptr %22, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %150

139:                                              ; preds = %124
  %140 = load i32, ptr %22, align 4
  %141 = load i32, ptr %17, align 4
  %142 = sub nsw i32 %141, %140
  store i32 %142, ptr %17, align 4
  %143 = load ptr, ptr %19, align 8
  %144 = getelementptr inbounds %struct.d_derived_tbl, ptr %143, i32 0, i32 5
  %145 = load i32, ptr %23, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [256 x i8], ptr %144, i64 0, i64 %146
  %148 = load i8, ptr %147, align 1
  %149 = zext i8 %148 to i32
  store i32 %149, ptr %10, align 4
  br label %164

150:                                              ; preds = %124
  store i32 9, ptr %22, align 4
  br label %151

151:                                              ; preds = %150, %122
  %152 = load i64, ptr %16, align 8
  %153 = load i32, ptr %17, align 4
  %154 = load ptr, ptr %19, align 8
  %155 = load i32, ptr %22, align 4
  %156 = call i32 @jpeg_huff_decode(ptr noundef %18, i64 noundef %152, i32 noundef %153, ptr noundef %154, i32 noundef %155)
  store i32 %156, ptr %10, align 4
  %157 = icmp slt i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %151
  br label %470

159:                                              ; preds = %151
  %160 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 3
  %161 = load i64, ptr %160, align 8
  store i64 %161, ptr %16, align 8
  %162 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 4
  %163 = load i32, ptr %162, align 8
  store i32 %163, ptr %17, align 4
  br label %164

164:                                              ; preds = %159, %139
  %165 = load i32, ptr %10, align 4
  %166 = ashr i32 %165, 4
  store i32 %166, ptr %12, align 4
  %167 = load i32, ptr %10, align 4
  %168 = and i32 %167, 15
  store i32 %168, ptr %10, align 4
  %169 = load i32, ptr %10, align 4
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %213

171:                                              ; preds = %164
  %172 = load i32, ptr %10, align 4
  %173 = icmp ne i32 %172, 1
  br i1 %173, label %174, label %185

174:                                              ; preds = %171
  %175 = load ptr, ptr %4, align 8
  %176 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %175, i32 0, i32 0
  %177 = load ptr, ptr %176, align 8
  %178 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %177, i32 0, i32 5
  store i32 114, ptr %178, align 8
  %179 = load ptr, ptr %4, align 8
  %180 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %179, i32 0, i32 0
  %181 = load ptr, ptr %180, align 8
  %182 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %181, i32 0, i32 1
  %183 = load ptr, ptr %182, align 8
  %184 = load ptr, ptr %4, align 8
  call void %183(ptr noundef %184, i32 noundef -1)
  br label %185

185:                                              ; preds = %174, %171
  %186 = load i32, ptr %17, align 4
  %187 = icmp slt i32 %186, 1
  br i1 %187, label %188, label %199

188:                                              ; preds = %185
  %189 = load i64, ptr %16, align 8
  %190 = load i32, ptr %17, align 4
  %191 = call i32 @jpeg_fill_bit_buffer(ptr noundef %18, i64 noundef %189, i32 noundef %190, i32 noundef 1)
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %194, label %193

193:                                              ; preds = %188
  br label %470

194:                                              ; preds = %188
  %195 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 3
  %196 = load i64, ptr %195, align 8
  store i64 %196, ptr %16, align 8
  %197 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 4
  %198 = load i32, ptr %197, align 8
  store i32 %198, ptr %17, align 4
  br label %199

199:                                              ; preds = %194, %185
  %200 = load i64, ptr %16, align 8
  %201 = load i32, ptr %17, align 4
  %202 = sub nsw i32 %201, 1
  store i32 %202, ptr %17, align 4
  %203 = zext i32 %202 to i64
  %204 = ashr i64 %200, %203
  %205 = trunc i64 %204 to i32
  %206 = and i32 %205, 1
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %199
  %209 = load i32, ptr %8, align 4
  store i32 %209, ptr %10, align 4
  br label %212

210:                                              ; preds = %199
  %211 = load i32, ptr %9, align 4
  store i32 %211, ptr %10, align 4
  br label %212

212:                                              ; preds = %210, %208
  br label %254

213:                                              ; preds = %164
  %214 = load i32, ptr %12, align 4
  %215 = icmp ne i32 %214, 15
  br i1 %215, label %216, label %253

216:                                              ; preds = %213
  %217 = load i32, ptr %12, align 4
  %218 = shl i32 1, %217
  store i32 %218, ptr %13, align 4
  %219 = load i32, ptr %12, align 4
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %221, label %252

221:                                              ; preds = %216
  %222 = load i32, ptr %17, align 4
  %223 = load i32, ptr %12, align 4
  %224 = icmp slt i32 %222, %223
  br i1 %224, label %225, label %237

225:                                              ; preds = %221
  %226 = load i64, ptr %16, align 8
  %227 = load i32, ptr %17, align 4
  %228 = load i32, ptr %12, align 4
  %229 = call i32 @jpeg_fill_bit_buffer(ptr noundef %18, i64 noundef %226, i32 noundef %227, i32 noundef %228)
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %232, label %231

231:                                              ; preds = %225
  br label %470

232:                                              ; preds = %225
  %233 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 3
  %234 = load i64, ptr %233, align 8
  store i64 %234, ptr %16, align 8
  %235 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 4
  %236 = load i32, ptr %235, align 8
  store i32 %236, ptr %17, align 4
  br label %237

237:                                              ; preds = %232, %221
  %238 = load i64, ptr %16, align 8
  %239 = load i32, ptr %12, align 4
  %240 = load i32, ptr %17, align 4
  %241 = sub nsw i32 %240, %239
  store i32 %241, ptr %17, align 4
  %242 = zext i32 %241 to i64
  %243 = ashr i64 %238, %242
  %244 = trunc i64 %243 to i32
  %245 = load i32, ptr %12, align 4
  %246 = shl i32 1, %245
  %247 = sub nsw i32 %246, 1
  %248 = and i32 %244, %247
  store i32 %248, ptr %12, align 4
  %249 = load i32, ptr %12, align 4
  %250 = load i32, ptr %13, align 4
  %251 = add i32 %250, %249
  store i32 %251, ptr %13, align 4
  br label %252

252:                                              ; preds = %237, %216
  br label %356

253:                                              ; preds = %213
  br label %254

254:                                              ; preds = %253, %212
  br label %255

255:                                              ; preds = %329, %254
  %256 = load ptr, ptr %14, align 8
  %257 = getelementptr inbounds [64 x i16], ptr %256, i64 0, i64 0
  %258 = load i32, ptr %11, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [0 x i32], ptr @jpeg_natural_order, i64 0, i64 %259
  %261 = load i32, ptr %260, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i16, ptr %257, i64 %262
  store ptr %263, ptr %15, align 8
  %264 = load ptr, ptr %15, align 8
  %265 = load i16, ptr %264, align 2
  %266 = sext i16 %265 to i32
  %267 = icmp ne i32 %266, 0
  br i1 %267, label %268, label %320

268:                                              ; preds = %255
  %269 = load i32, ptr %17, align 4
  %270 = icmp slt i32 %269, 1
  br i1 %270, label %271, label %282

271:                                              ; preds = %268
  %272 = load i64, ptr %16, align 8
  %273 = load i32, ptr %17, align 4
  %274 = call i32 @jpeg_fill_bit_buffer(ptr noundef %18, i64 noundef %272, i32 noundef %273, i32 noundef 1)
  %275 = icmp ne i32 %274, 0
  br i1 %275, label %277, label %276

276:                                              ; preds = %271
  br label %470

277:                                              ; preds = %271
  %278 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 3
  %279 = load i64, ptr %278, align 8
  store i64 %279, ptr %16, align 8
  %280 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 4
  %281 = load i32, ptr %280, align 8
  store i32 %281, ptr %17, align 4
  br label %282

282:                                              ; preds = %277, %268
  %283 = load i64, ptr %16, align 8
  %284 = load i32, ptr %17, align 4
  %285 = sub nsw i32 %284, 1
  store i32 %285, ptr %17, align 4
  %286 = zext i32 %285 to i64
  %287 = ashr i64 %283, %286
  %288 = trunc i64 %287 to i32
  %289 = and i32 %288, 1
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %291, label %319

291:                                              ; preds = %282
  %292 = load ptr, ptr %15, align 8
  %293 = load i16, ptr %292, align 2
  %294 = sext i16 %293 to i32
  %295 = load i32, ptr %8, align 4
  %296 = and i32 %294, %295
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %318

298:                                              ; preds = %291
  %299 = load ptr, ptr %15, align 8
  %300 = load i16, ptr %299, align 2
  %301 = sext i16 %300 to i32
  %302 = icmp sge i32 %301, 0
  br i1 %302, label %303, label %310

303:                                              ; preds = %298
  %304 = load i32, ptr %8, align 4
  %305 = load ptr, ptr %15, align 8
  %306 = load i16, ptr %305, align 2
  %307 = sext i16 %306 to i32
  %308 = add nsw i32 %307, %304
  %309 = trunc i32 %308 to i16
  store i16 %309, ptr %305, align 2
  br label %317

310:                                              ; preds = %298
  %311 = load i32, ptr %9, align 4
  %312 = load ptr, ptr %15, align 8
  %313 = load i16, ptr %312, align 2
  %314 = sext i16 %313 to i32
  %315 = add nsw i32 %314, %311
  %316 = trunc i32 %315 to i16
  store i16 %316, ptr %312, align 2
  br label %317

317:                                              ; preds = %310, %303
  br label %318

318:                                              ; preds = %317, %291
  br label %319

319:                                              ; preds = %318, %282
  br label %326

320:                                              ; preds = %255
  %321 = load i32, ptr %12, align 4
  %322 = add nsw i32 %321, -1
  store i32 %322, ptr %12, align 4
  %323 = icmp slt i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %320
  br label %333

325:                                              ; preds = %320
  br label %326

326:                                              ; preds = %325, %319
  %327 = load i32, ptr %11, align 4
  %328 = add nsw i32 %327, 1
  store i32 %328, ptr %11, align 4
  br label %329

329:                                              ; preds = %326
  %330 = load i32, ptr %11, align 4
  %331 = load i32, ptr %7, align 4
  %332 = icmp sle i32 %330, %331
  br i1 %332, label %255, label %333, !llvm.loop !16

333:                                              ; preds = %329, %324
  %334 = load i32, ptr %10, align 4
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %336, label %352

336:                                              ; preds = %333
  %337 = load i32, ptr %11, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [0 x i32], ptr @jpeg_natural_order, i64 0, i64 %338
  %340 = load i32, ptr %339, align 4
  store i32 %340, ptr %24, align 4
  %341 = load i32, ptr %10, align 4
  %342 = trunc i32 %341 to i16
  %343 = load ptr, ptr %14, align 8
  %344 = load i32, ptr %24, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [64 x i16], ptr %343, i64 0, i64 %345
  store i16 %342, ptr %346, align 2
  %347 = load i32, ptr %24, align 4
  %348 = load i32, ptr %20, align 4
  %349 = add nsw i32 %348, 1
  store i32 %349, ptr %20, align 4
  %350 = sext i32 %348 to i64
  %351 = getelementptr inbounds [64 x i32], ptr %21, i64 0, i64 %350
  store i32 %347, ptr %351, align 4
  br label %352

352:                                              ; preds = %336, %333
  br label %353

353:                                              ; preds = %352
  %354 = load i32, ptr %11, align 4
  %355 = add nsw i32 %354, 1
  store i32 %355, ptr %11, align 4
  br label %102, !llvm.loop !17

356:                                              ; preds = %252, %102
  br label %357

357:                                              ; preds = %356, %55
  %358 = load i32, ptr %13, align 4
  %359 = icmp ugt i32 %358, 0
  br i1 %359, label %360, label %437

360:                                              ; preds = %357
  br label %361

361:                                              ; preds = %431, %360
  %362 = load i32, ptr %11, align 4
  %363 = load i32, ptr %7, align 4
  %364 = icmp sle i32 %362, %363
  br i1 %364, label %365, label %434

365:                                              ; preds = %361
  %366 = load ptr, ptr %14, align 8
  %367 = getelementptr inbounds [64 x i16], ptr %366, i64 0, i64 0
  %368 = load i32, ptr %11, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [0 x i32], ptr @jpeg_natural_order, i64 0, i64 %369
  %371 = load i32, ptr %370, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds i16, ptr %367, i64 %372
  store ptr %373, ptr %15, align 8
  %374 = load ptr, ptr %15, align 8
  %375 = load i16, ptr %374, align 2
  %376 = sext i16 %375 to i32
  %377 = icmp ne i32 %376, 0
  br i1 %377, label %378, label %430

378:                                              ; preds = %365
  %379 = load i32, ptr %17, align 4
  %380 = icmp slt i32 %379, 1
  br i1 %380, label %381, label %392

381:                                              ; preds = %378
  %382 = load i64, ptr %16, align 8
  %383 = load i32, ptr %17, align 4
  %384 = call i32 @jpeg_fill_bit_buffer(ptr noundef %18, i64 noundef %382, i32 noundef %383, i32 noundef 1)
  %385 = icmp ne i32 %384, 0
  br i1 %385, label %387, label %386

386:                                              ; preds = %381
  br label %470

387:                                              ; preds = %381
  %388 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 3
  %389 = load i64, ptr %388, align 8
  store i64 %389, ptr %16, align 8
  %390 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 4
  %391 = load i32, ptr %390, align 8
  store i32 %391, ptr %17, align 4
  br label %392

392:                                              ; preds = %387, %378
  %393 = load i64, ptr %16, align 8
  %394 = load i32, ptr %17, align 4
  %395 = sub nsw i32 %394, 1
  store i32 %395, ptr %17, align 4
  %396 = zext i32 %395 to i64
  %397 = ashr i64 %393, %396
  %398 = trunc i64 %397 to i32
  %399 = and i32 %398, 1
  %400 = icmp ne i32 %399, 0
  br i1 %400, label %401, label %429

401:                                              ; preds = %392
  %402 = load ptr, ptr %15, align 8
  %403 = load i16, ptr %402, align 2
  %404 = sext i16 %403 to i32
  %405 = load i32, ptr %8, align 4
  %406 = and i32 %404, %405
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %428

408:                                              ; preds = %401
  %409 = load ptr, ptr %15, align 8
  %410 = load i16, ptr %409, align 2
  %411 = sext i16 %410 to i32
  %412 = icmp sge i32 %411, 0
  br i1 %412, label %413, label %420

413:                                              ; preds = %408
  %414 = load i32, ptr %8, align 4
  %415 = load ptr, ptr %15, align 8
  %416 = load i16, ptr %415, align 2
  %417 = sext i16 %416 to i32
  %418 = add nsw i32 %417, %414
  %419 = trunc i32 %418 to i16
  store i16 %419, ptr %415, align 2
  br label %427

420:                                              ; preds = %408
  %421 = load i32, ptr %9, align 4
  %422 = load ptr, ptr %15, align 8
  %423 = load i16, ptr %422, align 2
  %424 = sext i16 %423 to i32
  %425 = add nsw i32 %424, %421
  %426 = trunc i32 %425 to i16
  store i16 %426, ptr %422, align 2
  br label %427

427:                                              ; preds = %420, %413
  br label %428

428:                                              ; preds = %427, %401
  br label %429

429:                                              ; preds = %428, %392
  br label %430

430:                                              ; preds = %429, %365
  br label %431

431:                                              ; preds = %430
  %432 = load i32, ptr %11, align 4
  %433 = add nsw i32 %432, 1
  store i32 %433, ptr %11, align 4
  br label %361, !llvm.loop !18

434:                                              ; preds = %361
  %435 = load i32, ptr %13, align 4
  %436 = add i32 %435, -1
  store i32 %436, ptr %13, align 4
  br label %437

437:                                              ; preds = %434, %357
  %438 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 0
  %439 = load ptr, ptr %438, align 8
  %440 = load ptr, ptr %4, align 8
  %441 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %440, i32 0, i32 5
  %442 = load ptr, ptr %441, align 8
  %443 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %442, i32 0, i32 0
  store ptr %439, ptr %443, align 8
  %444 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 1
  %445 = load i64, ptr %444, align 8
  %446 = load ptr, ptr %4, align 8
  %447 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %446, i32 0, i32 5
  %448 = load ptr, ptr %447, align 8
  %449 = getelementptr inbounds %struct.jpeg_source_mgr, ptr %448, i32 0, i32 1
  store i64 %445, ptr %449, align 8
  %450 = getelementptr inbounds %struct.bitread_working_state, ptr %18, i32 0, i32 2
  %451 = load i32, ptr %450, align 8
  %452 = load ptr, ptr %4, align 8
  %453 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %452, i32 0, i32 72
  store i32 %451, ptr %453, align 4
  %454 = load i64, ptr %16, align 8
  %455 = load ptr, ptr %6, align 8
  %456 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %455, i32 0, i32 1
  %457 = getelementptr inbounds %struct.bitread_perm_state, ptr %456, i32 0, i32 0
  store i64 %454, ptr %457, align 8
  %458 = load i32, ptr %17, align 4
  %459 = load ptr, ptr %6, align 8
  %460 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %459, i32 0, i32 1
  %461 = getelementptr inbounds %struct.bitread_perm_state, ptr %460, i32 0, i32 1
  store i32 %458, ptr %461, align 8
  %462 = load i32, ptr %13, align 4
  %463 = load ptr, ptr %6, align 8
  %464 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %463, i32 0, i32 2
  %465 = getelementptr inbounds %struct.savable_state, ptr %464, i32 0, i32 0
  store i32 %462, ptr %465, align 8
  %466 = load ptr, ptr %6, align 8
  %467 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %466, i32 0, i32 3
  %468 = load i32, ptr %467, align 4
  %469 = add i32 %468, -1
  store i32 %469, ptr %467, align 4
  store i32 1, ptr %3, align 4
  br label %484

470:                                              ; preds = %386, %276, %231, %193, %158, %114
  br label %471

471:                                              ; preds = %474, %470
  %472 = load i32, ptr %20, align 4
  %473 = icmp sgt i32 %472, 0
  br i1 %473, label %474, label %483

474:                                              ; preds = %471
  %475 = load ptr, ptr %14, align 8
  %476 = load i32, ptr %20, align 4
  %477 = add nsw i32 %476, -1
  store i32 %477, ptr %20, align 4
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds [64 x i32], ptr %21, i64 0, i64 %478
  %480 = load i32, ptr %479, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [64 x i16], ptr %475, i64 0, i64 %481
  store i16 0, ptr %482, align 2
  br label %471, !llvm.loop !19

483:                                              ; preds = %471
  store i32 0, ptr %3, align 4
  br label %484

484:                                              ; preds = %483, %437, %52
  %485 = load i32, ptr %3, align 4
  ret i32 %485
}

declare void @jpeg_make_d_derived_tbl(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @process_restart(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  %6 = load ptr, ptr %3, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %6, i32 0, i32 79
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %4, align 8
  %9 = load ptr, ptr %4, align 8
  %10 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.bitread_perm_state, ptr %10, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = sdiv i32 %12, 8
  %14 = load ptr, ptr %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %14, i32 0, i32 78
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_marker_reader, ptr %16, i32 0, i32 8
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, %13
  store i32 %19, ptr %17, align 4
  %20 = load ptr, ptr %4, align 8
  %21 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %20, i32 0, i32 1
  %22 = getelementptr inbounds %struct.bitread_perm_state, ptr %21, i32 0, i32 1
  store i32 0, ptr %22, align 8
  %23 = load ptr, ptr %3, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %23, i32 0, i32 78
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_marker_reader, ptr %25, i32 0, i32 2
  %27 = load ptr, ptr %26, align 8
  %28 = load ptr, ptr %3, align 8
  %29 = call i32 %27(ptr noundef %28)
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %1
  store i32 0, ptr %2, align 4
  br label %61

32:                                               ; preds = %1
  store i32 0, ptr %5, align 4
  br label %33

33:                                               ; preds = %46, %32
  %34 = load i32, ptr %5, align 4
  %35 = load ptr, ptr %3, align 8
  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %35, i32 0, i32 62
  %37 = load i32, ptr %36, align 8
  %38 = icmp slt i32 %34, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %33
  %40 = load ptr, ptr %4, align 8
  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %40, i32 0, i32 2
  %42 = getelementptr inbounds %struct.savable_state, ptr %41, i32 0, i32 1
  %43 = load i32, ptr %5, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [4 x i32], ptr %42, i64 0, i64 %44
  store i32 0, ptr %45, align 4
  br label %46

46:                                               ; preds = %39
  %47 = load i32, ptr %5, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, ptr %5, align 4
  br label %33, !llvm.loop !20

49:                                               ; preds = %33
  %50 = load ptr, ptr %4, align 8
  %51 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %50, i32 0, i32 2
  %52 = getelementptr inbounds %struct.savable_state, ptr %51, i32 0, i32 0
  store i32 0, ptr %52, align 8
  %53 = load ptr, ptr %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %53, i32 0, i32 49
  %55 = load i32, ptr %54, align 8
  %56 = load ptr, ptr %4, align 8
  %57 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %56, i32 0, i32 3
  store i32 %55, ptr %57, align 4
  %58 = load ptr, ptr %4, align 8
  %59 = getelementptr inbounds %struct.phuff_entropy_decoder, ptr %58, i32 0, i32 1
  %60 = getelementptr inbounds %struct.bitread_perm_state, ptr %59, i32 0, i32 2
  store i32 0, ptr %60, align 4
  store i32 1, ptr %2, align 4
  br label %61

61:                                               ; preds = %49, %31
  %62 = load i32, ptr %2, align 4
  ret i32 %62
}

; Function Attrs: argmemonly nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

declare i32 @jpeg_fill_bit_buffer(ptr noundef, i64 noundef, i32 noundef, i32 noundef) #1

declare i32 @jpeg_huff_decode(ptr noundef, i64 noundef, i32 noundef, ptr noundef, i32 noundef) #1

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { argmemonly nocallback nofree nounwind willreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !7}
!20 = distinct !{!20, !7}
