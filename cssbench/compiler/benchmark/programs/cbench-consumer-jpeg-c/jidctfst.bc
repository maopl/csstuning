; ModuleID = 'jidctfst.bc'
source_filename = "jidctfst.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_decompress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], i32, ptr, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, ptr, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }

; Function Attrs: noinline nounwind uwtable
define dso_local void @jpeg_idct_ifast(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca ptr, align 8
  %29 = alloca ptr, align 8
  %30 = alloca ptr, align 8
  %31 = alloca ptr, align 8
  %32 = alloca ptr, align 8
  %33 = alloca i32, align 4
  %34 = alloca [64 x i32], align 16
  %35 = alloca i32, align 4
  %36 = alloca i8, align 1
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store ptr %3, ptr %9, align 8
  store i32 %4, ptr %10, align 4
  %37 = load ptr, ptr %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %37, i32 0, i32 61
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds i8, ptr %39, i64 128
  store ptr %40, ptr %32, align 8
  %41 = load ptr, ptr %8, align 8
  store ptr %41, ptr %28, align 8
  %42 = load ptr, ptr %7, align 8
  %43 = getelementptr inbounds %struct.jpeg_component_info, ptr %42, i32 0, i32 20
  %44 = load ptr, ptr %43, align 8
  store ptr %44, ptr %29, align 8
  %45 = getelementptr inbounds [64 x i32], ptr %34, i64 0, i64 0
  store ptr %45, ptr %30, align 8
  store i32 8, ptr %33, align 4
  br label %46

46:                                               ; preds = %317, %5
  %47 = load i32, ptr %33, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %320

49:                                               ; preds = %46
  %50 = load ptr, ptr %28, align 8
  %51 = getelementptr inbounds i16, ptr %50, i64 8
  %52 = load i16, ptr %51, align 2
  %53 = sext i16 %52 to i32
  %54 = load ptr, ptr %28, align 8
  %55 = getelementptr inbounds i16, ptr %54, i64 16
  %56 = load i16, ptr %55, align 2
  %57 = sext i16 %56 to i32
  %58 = or i32 %53, %57
  %59 = load ptr, ptr %28, align 8
  %60 = getelementptr inbounds i16, ptr %59, i64 24
  %61 = load i16, ptr %60, align 2
  %62 = sext i16 %61 to i32
  %63 = or i32 %58, %62
  %64 = load ptr, ptr %28, align 8
  %65 = getelementptr inbounds i16, ptr %64, i64 32
  %66 = load i16, ptr %65, align 2
  %67 = sext i16 %66 to i32
  %68 = or i32 %63, %67
  %69 = load ptr, ptr %28, align 8
  %70 = getelementptr inbounds i16, ptr %69, i64 40
  %71 = load i16, ptr %70, align 2
  %72 = sext i16 %71 to i32
  %73 = or i32 %68, %72
  %74 = load ptr, ptr %28, align 8
  %75 = getelementptr inbounds i16, ptr %74, i64 48
  %76 = load i16, ptr %75, align 2
  %77 = sext i16 %76 to i32
  %78 = or i32 %73, %77
  %79 = load ptr, ptr %28, align 8
  %80 = getelementptr inbounds i16, ptr %79, i64 56
  %81 = load i16, ptr %80, align 2
  %82 = sext i16 %81 to i32
  %83 = or i32 %78, %82
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %124

85:                                               ; preds = %49
  %86 = load ptr, ptr %28, align 8
  %87 = getelementptr inbounds i16, ptr %86, i64 0
  %88 = load i16, ptr %87, align 2
  %89 = sext i16 %88 to i32
  %90 = load ptr, ptr %29, align 8
  %91 = getelementptr inbounds i32, ptr %90, i64 0
  %92 = load i32, ptr %91, align 4
  %93 = mul nsw i32 %89, %92
  store i32 %93, ptr %35, align 4
  %94 = load i32, ptr %35, align 4
  %95 = load ptr, ptr %30, align 8
  %96 = getelementptr inbounds i32, ptr %95, i64 0
  store i32 %94, ptr %96, align 4
  %97 = load i32, ptr %35, align 4
  %98 = load ptr, ptr %30, align 8
  %99 = getelementptr inbounds i32, ptr %98, i64 8
  store i32 %97, ptr %99, align 4
  %100 = load i32, ptr %35, align 4
  %101 = load ptr, ptr %30, align 8
  %102 = getelementptr inbounds i32, ptr %101, i64 16
  store i32 %100, ptr %102, align 4
  %103 = load i32, ptr %35, align 4
  %104 = load ptr, ptr %30, align 8
  %105 = getelementptr inbounds i32, ptr %104, i64 24
  store i32 %103, ptr %105, align 4
  %106 = load i32, ptr %35, align 4
  %107 = load ptr, ptr %30, align 8
  %108 = getelementptr inbounds i32, ptr %107, i64 32
  store i32 %106, ptr %108, align 4
  %109 = load i32, ptr %35, align 4
  %110 = load ptr, ptr %30, align 8
  %111 = getelementptr inbounds i32, ptr %110, i64 40
  store i32 %109, ptr %111, align 4
  %112 = load i32, ptr %35, align 4
  %113 = load ptr, ptr %30, align 8
  %114 = getelementptr inbounds i32, ptr %113, i64 48
  store i32 %112, ptr %114, align 4
  %115 = load i32, ptr %35, align 4
  %116 = load ptr, ptr %30, align 8
  %117 = getelementptr inbounds i32, ptr %116, i64 56
  store i32 %115, ptr %117, align 4
  %118 = load ptr, ptr %28, align 8
  %119 = getelementptr inbounds i16, ptr %118, i32 1
  store ptr %119, ptr %28, align 8
  %120 = load ptr, ptr %29, align 8
  %121 = getelementptr inbounds i32, ptr %120, i32 1
  store ptr %121, ptr %29, align 8
  %122 = load ptr, ptr %30, align 8
  %123 = getelementptr inbounds i32, ptr %122, i32 1
  store ptr %123, ptr %30, align 8
  br label %317

124:                                              ; preds = %49
  %125 = load ptr, ptr %28, align 8
  %126 = getelementptr inbounds i16, ptr %125, i64 0
  %127 = load i16, ptr %126, align 2
  %128 = sext i16 %127 to i32
  %129 = load ptr, ptr %29, align 8
  %130 = getelementptr inbounds i32, ptr %129, i64 0
  %131 = load i32, ptr %130, align 4
  %132 = mul nsw i32 %128, %131
  store i32 %132, ptr %11, align 4
  %133 = load ptr, ptr %28, align 8
  %134 = getelementptr inbounds i16, ptr %133, i64 16
  %135 = load i16, ptr %134, align 2
  %136 = sext i16 %135 to i32
  %137 = load ptr, ptr %29, align 8
  %138 = getelementptr inbounds i32, ptr %137, i64 16
  %139 = load i32, ptr %138, align 4
  %140 = mul nsw i32 %136, %139
  store i32 %140, ptr %12, align 4
  %141 = load ptr, ptr %28, align 8
  %142 = getelementptr inbounds i16, ptr %141, i64 32
  %143 = load i16, ptr %142, align 2
  %144 = sext i16 %143 to i32
  %145 = load ptr, ptr %29, align 8
  %146 = getelementptr inbounds i32, ptr %145, i64 32
  %147 = load i32, ptr %146, align 4
  %148 = mul nsw i32 %144, %147
  store i32 %148, ptr %13, align 4
  %149 = load ptr, ptr %28, align 8
  %150 = getelementptr inbounds i16, ptr %149, i64 48
  %151 = load i16, ptr %150, align 2
  %152 = sext i16 %151 to i32
  %153 = load ptr, ptr %29, align 8
  %154 = getelementptr inbounds i32, ptr %153, i64 48
  %155 = load i32, ptr %154, align 4
  %156 = mul nsw i32 %152, %155
  store i32 %156, ptr %14, align 4
  %157 = load i32, ptr %11, align 4
  %158 = load i32, ptr %13, align 4
  %159 = add nsw i32 %157, %158
  store i32 %159, ptr %19, align 4
  %160 = load i32, ptr %11, align 4
  %161 = load i32, ptr %13, align 4
  %162 = sub nsw i32 %160, %161
  store i32 %162, ptr %20, align 4
  %163 = load i32, ptr %12, align 4
  %164 = load i32, ptr %14, align 4
  %165 = add nsw i32 %163, %164
  store i32 %165, ptr %22, align 4
  %166 = load i32, ptr %12, align 4
  %167 = load i32, ptr %14, align 4
  %168 = sub nsw i32 %166, %167
  %169 = sext i32 %168 to i64
  %170 = mul nsw i64 %169, 362
  %171 = ashr i64 %170, 8
  %172 = trunc i64 %171 to i32
  %173 = load i32, ptr %22, align 4
  %174 = sub nsw i32 %172, %173
  store i32 %174, ptr %21, align 4
  %175 = load i32, ptr %19, align 4
  %176 = load i32, ptr %22, align 4
  %177 = add nsw i32 %175, %176
  store i32 %177, ptr %11, align 4
  %178 = load i32, ptr %19, align 4
  %179 = load i32, ptr %22, align 4
  %180 = sub nsw i32 %178, %179
  store i32 %180, ptr %14, align 4
  %181 = load i32, ptr %20, align 4
  %182 = load i32, ptr %21, align 4
  %183 = add nsw i32 %181, %182
  store i32 %183, ptr %12, align 4
  %184 = load i32, ptr %20, align 4
  %185 = load i32, ptr %21, align 4
  %186 = sub nsw i32 %184, %185
  store i32 %186, ptr %13, align 4
  %187 = load ptr, ptr %28, align 8
  %188 = getelementptr inbounds i16, ptr %187, i64 8
  %189 = load i16, ptr %188, align 2
  %190 = sext i16 %189 to i32
  %191 = load ptr, ptr %29, align 8
  %192 = getelementptr inbounds i32, ptr %191, i64 8
  %193 = load i32, ptr %192, align 4
  %194 = mul nsw i32 %190, %193
  store i32 %194, ptr %15, align 4
  %195 = load ptr, ptr %28, align 8
  %196 = getelementptr inbounds i16, ptr %195, i64 24
  %197 = load i16, ptr %196, align 2
  %198 = sext i16 %197 to i32
  %199 = load ptr, ptr %29, align 8
  %200 = getelementptr inbounds i32, ptr %199, i64 24
  %201 = load i32, ptr %200, align 4
  %202 = mul nsw i32 %198, %201
  store i32 %202, ptr %16, align 4
  %203 = load ptr, ptr %28, align 8
  %204 = getelementptr inbounds i16, ptr %203, i64 40
  %205 = load i16, ptr %204, align 2
  %206 = sext i16 %205 to i32
  %207 = load ptr, ptr %29, align 8
  %208 = getelementptr inbounds i32, ptr %207, i64 40
  %209 = load i32, ptr %208, align 4
  %210 = mul nsw i32 %206, %209
  store i32 %210, ptr %17, align 4
  %211 = load ptr, ptr %28, align 8
  %212 = getelementptr inbounds i16, ptr %211, i64 56
  %213 = load i16, ptr %212, align 2
  %214 = sext i16 %213 to i32
  %215 = load ptr, ptr %29, align 8
  %216 = getelementptr inbounds i32, ptr %215, i64 56
  %217 = load i32, ptr %216, align 4
  %218 = mul nsw i32 %214, %217
  store i32 %218, ptr %18, align 4
  %219 = load i32, ptr %17, align 4
  %220 = load i32, ptr %16, align 4
  %221 = add nsw i32 %219, %220
  store i32 %221, ptr %27, align 4
  %222 = load i32, ptr %17, align 4
  %223 = load i32, ptr %16, align 4
  %224 = sub nsw i32 %222, %223
  store i32 %224, ptr %24, align 4
  %225 = load i32, ptr %15, align 4
  %226 = load i32, ptr %18, align 4
  %227 = add nsw i32 %225, %226
  store i32 %227, ptr %25, align 4
  %228 = load i32, ptr %15, align 4
  %229 = load i32, ptr %18, align 4
  %230 = sub nsw i32 %228, %229
  store i32 %230, ptr %26, align 4
  %231 = load i32, ptr %25, align 4
  %232 = load i32, ptr %27, align 4
  %233 = add nsw i32 %231, %232
  store i32 %233, ptr %18, align 4
  %234 = load i32, ptr %25, align 4
  %235 = load i32, ptr %27, align 4
  %236 = sub nsw i32 %234, %235
  %237 = sext i32 %236 to i64
  %238 = mul nsw i64 %237, 362
  %239 = ashr i64 %238, 8
  %240 = trunc i64 %239 to i32
  store i32 %240, ptr %20, align 4
  %241 = load i32, ptr %24, align 4
  %242 = load i32, ptr %26, align 4
  %243 = add nsw i32 %241, %242
  %244 = sext i32 %243 to i64
  %245 = mul nsw i64 %244, 473
  %246 = ashr i64 %245, 8
  %247 = trunc i64 %246 to i32
  store i32 %247, ptr %23, align 4
  %248 = load i32, ptr %26, align 4
  %249 = sext i32 %248 to i64
  %250 = mul nsw i64 %249, 277
  %251 = ashr i64 %250, 8
  %252 = trunc i64 %251 to i32
  %253 = load i32, ptr %23, align 4
  %254 = sub nsw i32 %252, %253
  store i32 %254, ptr %19, align 4
  %255 = load i32, ptr %24, align 4
  %256 = sext i32 %255 to i64
  %257 = mul nsw i64 %256, -669
  %258 = ashr i64 %257, 8
  %259 = trunc i64 %258 to i32
  %260 = load i32, ptr %23, align 4
  %261 = add nsw i32 %259, %260
  store i32 %261, ptr %21, align 4
  %262 = load i32, ptr %21, align 4
  %263 = load i32, ptr %18, align 4
  %264 = sub nsw i32 %262, %263
  store i32 %264, ptr %17, align 4
  %265 = load i32, ptr %20, align 4
  %266 = load i32, ptr %17, align 4
  %267 = sub nsw i32 %265, %266
  store i32 %267, ptr %16, align 4
  %268 = load i32, ptr %19, align 4
  %269 = load i32, ptr %16, align 4
  %270 = add nsw i32 %268, %269
  store i32 %270, ptr %15, align 4
  %271 = load i32, ptr %11, align 4
  %272 = load i32, ptr %18, align 4
  %273 = add nsw i32 %271, %272
  %274 = load ptr, ptr %30, align 8
  %275 = getelementptr inbounds i32, ptr %274, i64 0
  store i32 %273, ptr %275, align 4
  %276 = load i32, ptr %11, align 4
  %277 = load i32, ptr %18, align 4
  %278 = sub nsw i32 %276, %277
  %279 = load ptr, ptr %30, align 8
  %280 = getelementptr inbounds i32, ptr %279, i64 56
  store i32 %278, ptr %280, align 4
  %281 = load i32, ptr %12, align 4
  %282 = load i32, ptr %17, align 4
  %283 = add nsw i32 %281, %282
  %284 = load ptr, ptr %30, align 8
  %285 = getelementptr inbounds i32, ptr %284, i64 8
  store i32 %283, ptr %285, align 4
  %286 = load i32, ptr %12, align 4
  %287 = load i32, ptr %17, align 4
  %288 = sub nsw i32 %286, %287
  %289 = load ptr, ptr %30, align 8
  %290 = getelementptr inbounds i32, ptr %289, i64 48
  store i32 %288, ptr %290, align 4
  %291 = load i32, ptr %13, align 4
  %292 = load i32, ptr %16, align 4
  %293 = add nsw i32 %291, %292
  %294 = load ptr, ptr %30, align 8
  %295 = getelementptr inbounds i32, ptr %294, i64 16
  store i32 %293, ptr %295, align 4
  %296 = load i32, ptr %13, align 4
  %297 = load i32, ptr %16, align 4
  %298 = sub nsw i32 %296, %297
  %299 = load ptr, ptr %30, align 8
  %300 = getelementptr inbounds i32, ptr %299, i64 40
  store i32 %298, ptr %300, align 4
  %301 = load i32, ptr %14, align 4
  %302 = load i32, ptr %15, align 4
  %303 = add nsw i32 %301, %302
  %304 = load ptr, ptr %30, align 8
  %305 = getelementptr inbounds i32, ptr %304, i64 32
  store i32 %303, ptr %305, align 4
  %306 = load i32, ptr %14, align 4
  %307 = load i32, ptr %15, align 4
  %308 = sub nsw i32 %306, %307
  %309 = load ptr, ptr %30, align 8
  %310 = getelementptr inbounds i32, ptr %309, i64 24
  store i32 %308, ptr %310, align 4
  %311 = load ptr, ptr %28, align 8
  %312 = getelementptr inbounds i16, ptr %311, i32 1
  store ptr %312, ptr %28, align 8
  %313 = load ptr, ptr %29, align 8
  %314 = getelementptr inbounds i32, ptr %313, i32 1
  store ptr %314, ptr %29, align 8
  %315 = load ptr, ptr %30, align 8
  %316 = getelementptr inbounds i32, ptr %315, i32 1
  store ptr %316, ptr %30, align 8
  br label %317

317:                                              ; preds = %124, %85
  %318 = load i32, ptr %33, align 4
  %319 = add nsw i32 %318, -1
  store i32 %319, ptr %33, align 4
  br label %46, !llvm.loop !6

320:                                              ; preds = %46
  %321 = getelementptr inbounds [64 x i32], ptr %34, i64 0, i64 0
  store ptr %321, ptr %30, align 8
  store i32 0, ptr %33, align 4
  br label %322

322:                                              ; preds = %603, %320
  %323 = load i32, ptr %33, align 4
  %324 = icmp slt i32 %323, 8
  br i1 %324, label %325, label %606

325:                                              ; preds = %322
  %326 = load ptr, ptr %9, align 8
  %327 = load i32, ptr %33, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds ptr, ptr %326, i64 %328
  %330 = load ptr, ptr %329, align 8
  %331 = load i32, ptr %10, align 4
  %332 = zext i32 %331 to i64
  %333 = getelementptr inbounds i8, ptr %330, i64 %332
  store ptr %333, ptr %31, align 8
  %334 = load ptr, ptr %30, align 8
  %335 = getelementptr inbounds i32, ptr %334, i64 1
  %336 = load i32, ptr %335, align 4
  %337 = load ptr, ptr %30, align 8
  %338 = getelementptr inbounds i32, ptr %337, i64 2
  %339 = load i32, ptr %338, align 4
  %340 = or i32 %336, %339
  %341 = load ptr, ptr %30, align 8
  %342 = getelementptr inbounds i32, ptr %341, i64 3
  %343 = load i32, ptr %342, align 4
  %344 = or i32 %340, %343
  %345 = load ptr, ptr %30, align 8
  %346 = getelementptr inbounds i32, ptr %345, i64 4
  %347 = load i32, ptr %346, align 4
  %348 = or i32 %344, %347
  %349 = load ptr, ptr %30, align 8
  %350 = getelementptr inbounds i32, ptr %349, i64 5
  %351 = load i32, ptr %350, align 4
  %352 = or i32 %348, %351
  %353 = load ptr, ptr %30, align 8
  %354 = getelementptr inbounds i32, ptr %353, i64 6
  %355 = load i32, ptr %354, align 4
  %356 = or i32 %352, %355
  %357 = load ptr, ptr %30, align 8
  %358 = getelementptr inbounds i32, ptr %357, i64 7
  %359 = load i32, ptr %358, align 4
  %360 = or i32 %356, %359
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %398

362:                                              ; preds = %325
  %363 = load ptr, ptr %32, align 8
  %364 = load ptr, ptr %30, align 8
  %365 = getelementptr inbounds i32, ptr %364, i64 0
  %366 = load i32, ptr %365, align 4
  %367 = ashr i32 %366, 5
  %368 = and i32 %367, 1023
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds i8, ptr %363, i64 %369
  %371 = load i8, ptr %370, align 1
  store i8 %371, ptr %36, align 1
  %372 = load i8, ptr %36, align 1
  %373 = load ptr, ptr %31, align 8
  %374 = getelementptr inbounds i8, ptr %373, i64 0
  store i8 %372, ptr %374, align 1
  %375 = load i8, ptr %36, align 1
  %376 = load ptr, ptr %31, align 8
  %377 = getelementptr inbounds i8, ptr %376, i64 1
  store i8 %375, ptr %377, align 1
  %378 = load i8, ptr %36, align 1
  %379 = load ptr, ptr %31, align 8
  %380 = getelementptr inbounds i8, ptr %379, i64 2
  store i8 %378, ptr %380, align 1
  %381 = load i8, ptr %36, align 1
  %382 = load ptr, ptr %31, align 8
  %383 = getelementptr inbounds i8, ptr %382, i64 3
  store i8 %381, ptr %383, align 1
  %384 = load i8, ptr %36, align 1
  %385 = load ptr, ptr %31, align 8
  %386 = getelementptr inbounds i8, ptr %385, i64 4
  store i8 %384, ptr %386, align 1
  %387 = load i8, ptr %36, align 1
  %388 = load ptr, ptr %31, align 8
  %389 = getelementptr inbounds i8, ptr %388, i64 5
  store i8 %387, ptr %389, align 1
  %390 = load i8, ptr %36, align 1
  %391 = load ptr, ptr %31, align 8
  %392 = getelementptr inbounds i8, ptr %391, i64 6
  store i8 %390, ptr %392, align 1
  %393 = load i8, ptr %36, align 1
  %394 = load ptr, ptr %31, align 8
  %395 = getelementptr inbounds i8, ptr %394, i64 7
  store i8 %393, ptr %395, align 1
  %396 = load ptr, ptr %30, align 8
  %397 = getelementptr inbounds i32, ptr %396, i64 8
  store ptr %397, ptr %30, align 8
  br label %603

398:                                              ; preds = %325
  %399 = load ptr, ptr %30, align 8
  %400 = getelementptr inbounds i32, ptr %399, i64 0
  %401 = load i32, ptr %400, align 4
  %402 = load ptr, ptr %30, align 8
  %403 = getelementptr inbounds i32, ptr %402, i64 4
  %404 = load i32, ptr %403, align 4
  %405 = add nsw i32 %401, %404
  store i32 %405, ptr %19, align 4
  %406 = load ptr, ptr %30, align 8
  %407 = getelementptr inbounds i32, ptr %406, i64 0
  %408 = load i32, ptr %407, align 4
  %409 = load ptr, ptr %30, align 8
  %410 = getelementptr inbounds i32, ptr %409, i64 4
  %411 = load i32, ptr %410, align 4
  %412 = sub nsw i32 %408, %411
  store i32 %412, ptr %20, align 4
  %413 = load ptr, ptr %30, align 8
  %414 = getelementptr inbounds i32, ptr %413, i64 2
  %415 = load i32, ptr %414, align 4
  %416 = load ptr, ptr %30, align 8
  %417 = getelementptr inbounds i32, ptr %416, i64 6
  %418 = load i32, ptr %417, align 4
  %419 = add nsw i32 %415, %418
  store i32 %419, ptr %22, align 4
  %420 = load ptr, ptr %30, align 8
  %421 = getelementptr inbounds i32, ptr %420, i64 2
  %422 = load i32, ptr %421, align 4
  %423 = load ptr, ptr %30, align 8
  %424 = getelementptr inbounds i32, ptr %423, i64 6
  %425 = load i32, ptr %424, align 4
  %426 = sub nsw i32 %422, %425
  %427 = sext i32 %426 to i64
  %428 = mul nsw i64 %427, 362
  %429 = ashr i64 %428, 8
  %430 = trunc i64 %429 to i32
  %431 = load i32, ptr %22, align 4
  %432 = sub nsw i32 %430, %431
  store i32 %432, ptr %21, align 4
  %433 = load i32, ptr %19, align 4
  %434 = load i32, ptr %22, align 4
  %435 = add nsw i32 %433, %434
  store i32 %435, ptr %11, align 4
  %436 = load i32, ptr %19, align 4
  %437 = load i32, ptr %22, align 4
  %438 = sub nsw i32 %436, %437
  store i32 %438, ptr %14, align 4
  %439 = load i32, ptr %20, align 4
  %440 = load i32, ptr %21, align 4
  %441 = add nsw i32 %439, %440
  store i32 %441, ptr %12, align 4
  %442 = load i32, ptr %20, align 4
  %443 = load i32, ptr %21, align 4
  %444 = sub nsw i32 %442, %443
  store i32 %444, ptr %13, align 4
  %445 = load ptr, ptr %30, align 8
  %446 = getelementptr inbounds i32, ptr %445, i64 5
  %447 = load i32, ptr %446, align 4
  %448 = load ptr, ptr %30, align 8
  %449 = getelementptr inbounds i32, ptr %448, i64 3
  %450 = load i32, ptr %449, align 4
  %451 = add nsw i32 %447, %450
  store i32 %451, ptr %27, align 4
  %452 = load ptr, ptr %30, align 8
  %453 = getelementptr inbounds i32, ptr %452, i64 5
  %454 = load i32, ptr %453, align 4
  %455 = load ptr, ptr %30, align 8
  %456 = getelementptr inbounds i32, ptr %455, i64 3
  %457 = load i32, ptr %456, align 4
  %458 = sub nsw i32 %454, %457
  store i32 %458, ptr %24, align 4
  %459 = load ptr, ptr %30, align 8
  %460 = getelementptr inbounds i32, ptr %459, i64 1
  %461 = load i32, ptr %460, align 4
  %462 = load ptr, ptr %30, align 8
  %463 = getelementptr inbounds i32, ptr %462, i64 7
  %464 = load i32, ptr %463, align 4
  %465 = add nsw i32 %461, %464
  store i32 %465, ptr %25, align 4
  %466 = load ptr, ptr %30, align 8
  %467 = getelementptr inbounds i32, ptr %466, i64 1
  %468 = load i32, ptr %467, align 4
  %469 = load ptr, ptr %30, align 8
  %470 = getelementptr inbounds i32, ptr %469, i64 7
  %471 = load i32, ptr %470, align 4
  %472 = sub nsw i32 %468, %471
  store i32 %472, ptr %26, align 4
  %473 = load i32, ptr %25, align 4
  %474 = load i32, ptr %27, align 4
  %475 = add nsw i32 %473, %474
  store i32 %475, ptr %18, align 4
  %476 = load i32, ptr %25, align 4
  %477 = load i32, ptr %27, align 4
  %478 = sub nsw i32 %476, %477
  %479 = sext i32 %478 to i64
  %480 = mul nsw i64 %479, 362
  %481 = ashr i64 %480, 8
  %482 = trunc i64 %481 to i32
  store i32 %482, ptr %20, align 4
  %483 = load i32, ptr %24, align 4
  %484 = load i32, ptr %26, align 4
  %485 = add nsw i32 %483, %484
  %486 = sext i32 %485 to i64
  %487 = mul nsw i64 %486, 473
  %488 = ashr i64 %487, 8
  %489 = trunc i64 %488 to i32
  store i32 %489, ptr %23, align 4
  %490 = load i32, ptr %26, align 4
  %491 = sext i32 %490 to i64
  %492 = mul nsw i64 %491, 277
  %493 = ashr i64 %492, 8
  %494 = trunc i64 %493 to i32
  %495 = load i32, ptr %23, align 4
  %496 = sub nsw i32 %494, %495
  store i32 %496, ptr %19, align 4
  %497 = load i32, ptr %24, align 4
  %498 = sext i32 %497 to i64
  %499 = mul nsw i64 %498, -669
  %500 = ashr i64 %499, 8
  %501 = trunc i64 %500 to i32
  %502 = load i32, ptr %23, align 4
  %503 = add nsw i32 %501, %502
  store i32 %503, ptr %21, align 4
  %504 = load i32, ptr %21, align 4
  %505 = load i32, ptr %18, align 4
  %506 = sub nsw i32 %504, %505
  store i32 %506, ptr %17, align 4
  %507 = load i32, ptr %20, align 4
  %508 = load i32, ptr %17, align 4
  %509 = sub nsw i32 %507, %508
  store i32 %509, ptr %16, align 4
  %510 = load i32, ptr %19, align 4
  %511 = load i32, ptr %16, align 4
  %512 = add nsw i32 %510, %511
  store i32 %512, ptr %15, align 4
  %513 = load ptr, ptr %32, align 8
  %514 = load i32, ptr %11, align 4
  %515 = load i32, ptr %18, align 4
  %516 = add nsw i32 %514, %515
  %517 = ashr i32 %516, 5
  %518 = and i32 %517, 1023
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i8, ptr %513, i64 %519
  %521 = load i8, ptr %520, align 1
  %522 = load ptr, ptr %31, align 8
  %523 = getelementptr inbounds i8, ptr %522, i64 0
  store i8 %521, ptr %523, align 1
  %524 = load ptr, ptr %32, align 8
  %525 = load i32, ptr %11, align 4
  %526 = load i32, ptr %18, align 4
  %527 = sub nsw i32 %525, %526
  %528 = ashr i32 %527, 5
  %529 = and i32 %528, 1023
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds i8, ptr %524, i64 %530
  %532 = load i8, ptr %531, align 1
  %533 = load ptr, ptr %31, align 8
  %534 = getelementptr inbounds i8, ptr %533, i64 7
  store i8 %532, ptr %534, align 1
  %535 = load ptr, ptr %32, align 8
  %536 = load i32, ptr %12, align 4
  %537 = load i32, ptr %17, align 4
  %538 = add nsw i32 %536, %537
  %539 = ashr i32 %538, 5
  %540 = and i32 %539, 1023
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds i8, ptr %535, i64 %541
  %543 = load i8, ptr %542, align 1
  %544 = load ptr, ptr %31, align 8
  %545 = getelementptr inbounds i8, ptr %544, i64 1
  store i8 %543, ptr %545, align 1
  %546 = load ptr, ptr %32, align 8
  %547 = load i32, ptr %12, align 4
  %548 = load i32, ptr %17, align 4
  %549 = sub nsw i32 %547, %548
  %550 = ashr i32 %549, 5
  %551 = and i32 %550, 1023
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds i8, ptr %546, i64 %552
  %554 = load i8, ptr %553, align 1
  %555 = load ptr, ptr %31, align 8
  %556 = getelementptr inbounds i8, ptr %555, i64 6
  store i8 %554, ptr %556, align 1
  %557 = load ptr, ptr %32, align 8
  %558 = load i32, ptr %13, align 4
  %559 = load i32, ptr %16, align 4
  %560 = add nsw i32 %558, %559
  %561 = ashr i32 %560, 5
  %562 = and i32 %561, 1023
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds i8, ptr %557, i64 %563
  %565 = load i8, ptr %564, align 1
  %566 = load ptr, ptr %31, align 8
  %567 = getelementptr inbounds i8, ptr %566, i64 2
  store i8 %565, ptr %567, align 1
  %568 = load ptr, ptr %32, align 8
  %569 = load i32, ptr %13, align 4
  %570 = load i32, ptr %16, align 4
  %571 = sub nsw i32 %569, %570
  %572 = ashr i32 %571, 5
  %573 = and i32 %572, 1023
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds i8, ptr %568, i64 %574
  %576 = load i8, ptr %575, align 1
  %577 = load ptr, ptr %31, align 8
  %578 = getelementptr inbounds i8, ptr %577, i64 5
  store i8 %576, ptr %578, align 1
  %579 = load ptr, ptr %32, align 8
  %580 = load i32, ptr %14, align 4
  %581 = load i32, ptr %15, align 4
  %582 = add nsw i32 %580, %581
  %583 = ashr i32 %582, 5
  %584 = and i32 %583, 1023
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds i8, ptr %579, i64 %585
  %587 = load i8, ptr %586, align 1
  %588 = load ptr, ptr %31, align 8
  %589 = getelementptr inbounds i8, ptr %588, i64 4
  store i8 %587, ptr %589, align 1
  %590 = load ptr, ptr %32, align 8
  %591 = load i32, ptr %14, align 4
  %592 = load i32, ptr %15, align 4
  %593 = sub nsw i32 %591, %592
  %594 = ashr i32 %593, 5
  %595 = and i32 %594, 1023
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds i8, ptr %590, i64 %596
  %598 = load i8, ptr %597, align 1
  %599 = load ptr, ptr %31, align 8
  %600 = getelementptr inbounds i8, ptr %599, i64 3
  store i8 %598, ptr %600, align 1
  %601 = load ptr, ptr %30, align 8
  %602 = getelementptr inbounds i32, ptr %601, i64 8
  store ptr %602, ptr %30, align 8
  br label %603

603:                                              ; preds = %398, %362
  %604 = load i32, ptr %33, align 4
  %605 = add nsw i32 %604, 1
  store i32 %605, ptr %33, align 4
  br label %322, !llvm.loop !8

606:                                              ; preds = %322
  ret void
}

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
