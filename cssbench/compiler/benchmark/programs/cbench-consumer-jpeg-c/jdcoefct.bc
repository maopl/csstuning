; ModuleID = 'jdcoefct.bc'
source_filename = "jdcoefct.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_decompress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], i32, ptr, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, ptr, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_memory_mgr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64 }
%struct.my_coef_controller = type { %struct.jpeg_d_coef_controller, i32, i32, i32, [10 x ptr], [10 x ptr], ptr }
%struct.jpeg_d_coef_controller = type { ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }
%struct.jpeg_entropy_decoder = type { ptr, ptr }
%struct.jpeg_input_controller = type { ptr, ptr, ptr, ptr, i32, i32 }
%struct.jpeg_inverse_dct = type { ptr, [10 x ptr] }
%struct.JQUANT_TBL = type { [64 x i16], i32 }

; Function Attrs: noinline nounwind uwtable
define dso_local void @jinit_d_coef_controller(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store i32 %1, ptr %4, align 4
  %11 = load ptr, ptr %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %11, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %13, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %3, align 8
  %17 = call ptr %15(ptr noundef %16, i32 noundef 1, i64 noundef 224)
  store ptr %17, ptr %5, align 8
  %18 = load ptr, ptr %5, align 8
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %19, i32 0, i32 75
  store ptr %18, ptr %20, align 8
  %21 = load ptr, ptr %5, align 8
  %22 = getelementptr inbounds %struct.my_coef_controller, ptr %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %22, i32 0, i32 0
  store ptr @start_input_pass, ptr %23, align 8
  %24 = load ptr, ptr %5, align 8
  %25 = getelementptr inbounds %struct.my_coef_controller, ptr %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %25, i32 0, i32 2
  store ptr @start_output_pass, ptr %26, align 8
  %27 = load ptr, ptr %5, align 8
  %28 = getelementptr inbounds %struct.my_coef_controller, ptr %27, i32 0, i32 6
  store ptr null, ptr %28, align 8
  %29 = load i32, ptr %4, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %104

31:                                               ; preds = %2
  store i32 0, ptr %6, align 4
  %32 = load ptr, ptr %3, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %32, i32 0, i32 43
  %34 = load ptr, ptr %33, align 8
  store ptr %34, ptr %8, align 8
  br label %35

35:                                               ; preds = %86, %31
  %36 = load i32, ptr %6, align 4
  %37 = load ptr, ptr %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %37, i32 0, i32 8
  %39 = load i32, ptr %38, align 8
  %40 = icmp slt i32 %36, %39
  br i1 %40, label %41, label %91

41:                                               ; preds = %35
  %42 = load ptr, ptr %8, align 8
  %43 = getelementptr inbounds %struct.jpeg_component_info, ptr %42, i32 0, i32 3
  %44 = load i32, ptr %43, align 4
  store i32 %44, ptr %7, align 4
  %45 = load ptr, ptr %3, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %45, i32 0, i32 44
  %47 = load i32, ptr %46, align 8
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = load i32, ptr %7, align 4
  %51 = mul nsw i32 %50, 3
  store i32 %51, ptr %7, align 4
  br label %52

52:                                               ; preds = %49, %41
  %53 = load ptr, ptr %3, align 8
  %54 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %53, i32 0, i32 1
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %55, i32 0, i32 5
  %57 = load ptr, ptr %56, align 8
  %58 = load ptr, ptr %3, align 8
  %59 = load ptr, ptr %8, align 8
  %60 = getelementptr inbounds %struct.jpeg_component_info, ptr %59, i32 0, i32 7
  %61 = load i32, ptr %60, align 4
  %62 = zext i32 %61 to i64
  %63 = load ptr, ptr %8, align 8
  %64 = getelementptr inbounds %struct.jpeg_component_info, ptr %63, i32 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = sext i32 %65 to i64
  %67 = call i64 @jround_up(i64 noundef %62, i64 noundef %66)
  %68 = trunc i64 %67 to i32
  %69 = load ptr, ptr %8, align 8
  %70 = getelementptr inbounds %struct.jpeg_component_info, ptr %69, i32 0, i32 8
  %71 = load i32, ptr %70, align 8
  %72 = zext i32 %71 to i64
  %73 = load ptr, ptr %8, align 8
  %74 = getelementptr inbounds %struct.jpeg_component_info, ptr %73, i32 0, i32 3
  %75 = load i32, ptr %74, align 4
  %76 = sext i32 %75 to i64
  %77 = call i64 @jround_up(i64 noundef %72, i64 noundef %76)
  %78 = trunc i64 %77 to i32
  %79 = load i32, ptr %7, align 4
  %80 = call ptr %57(ptr noundef %58, i32 noundef 1, i32 noundef 1, i32 noundef %68, i32 noundef %78, i32 noundef %79)
  %81 = load ptr, ptr %5, align 8
  %82 = getelementptr inbounds %struct.my_coef_controller, ptr %81, i32 0, i32 5
  %83 = load i32, ptr %6, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [10 x ptr], ptr %82, i64 0, i64 %84
  store ptr %80, ptr %85, align 8
  br label %86

86:                                               ; preds = %52
  %87 = load i32, ptr %6, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, ptr %6, align 4
  %89 = load ptr, ptr %8, align 8
  %90 = getelementptr inbounds %struct.jpeg_component_info, ptr %89, i32 1
  store ptr %90, ptr %8, align 8
  br label %35, !llvm.loop !6

91:                                               ; preds = %35
  %92 = load ptr, ptr %5, align 8
  %93 = getelementptr inbounds %struct.my_coef_controller, ptr %92, i32 0, i32 0
  %94 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %93, i32 0, i32 1
  store ptr @consume_data, ptr %94, align 8
  %95 = load ptr, ptr %5, align 8
  %96 = getelementptr inbounds %struct.my_coef_controller, ptr %95, i32 0, i32 0
  %97 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %96, i32 0, i32 3
  store ptr @decompress_data, ptr %97, align 8
  %98 = load ptr, ptr %5, align 8
  %99 = getelementptr inbounds %struct.my_coef_controller, ptr %98, i32 0, i32 5
  %100 = getelementptr inbounds [10 x ptr], ptr %99, i64 0, i64 0
  %101 = load ptr, ptr %5, align 8
  %102 = getelementptr inbounds %struct.my_coef_controller, ptr %101, i32 0, i32 0
  %103 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %102, i32 0, i32 4
  store ptr %100, ptr %103, align 8
  br label %138

104:                                              ; preds = %2
  %105 = load ptr, ptr %3, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %105, i32 0, i32 1
  %107 = load ptr, ptr %106, align 8
  %108 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %107, i32 0, i32 1
  %109 = load ptr, ptr %108, align 8
  %110 = load ptr, ptr %3, align 8
  %111 = call ptr %109(ptr noundef %110, i32 noundef 1, i64 noundef 1280)
  store ptr %111, ptr %9, align 8
  store i32 0, ptr %10, align 4
  br label %112

112:                                              ; preds = %125, %104
  %113 = load i32, ptr %10, align 4
  %114 = icmp slt i32 %113, 10
  br i1 %114, label %115, label %128

115:                                              ; preds = %112
  %116 = load ptr, ptr %9, align 8
  %117 = load i32, ptr %10, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [64 x i16], ptr %116, i64 %118
  %120 = load ptr, ptr %5, align 8
  %121 = getelementptr inbounds %struct.my_coef_controller, ptr %120, i32 0, i32 4
  %122 = load i32, ptr %10, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [10 x ptr], ptr %121, i64 0, i64 %123
  store ptr %119, ptr %124, align 8
  br label %125

125:                                              ; preds = %115
  %126 = load i32, ptr %10, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, ptr %10, align 4
  br label %112, !llvm.loop !8

128:                                              ; preds = %112
  %129 = load ptr, ptr %5, align 8
  %130 = getelementptr inbounds %struct.my_coef_controller, ptr %129, i32 0, i32 0
  %131 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %130, i32 0, i32 1
  store ptr @dummy_consume_data, ptr %131, align 8
  %132 = load ptr, ptr %5, align 8
  %133 = getelementptr inbounds %struct.my_coef_controller, ptr %132, i32 0, i32 0
  %134 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %133, i32 0, i32 3
  store ptr @decompress_onepass, ptr %134, align 8
  %135 = load ptr, ptr %5, align 8
  %136 = getelementptr inbounds %struct.my_coef_controller, ptr %135, i32 0, i32 0
  %137 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %136, i32 0, i32 4
  store ptr null, ptr %137, align 8
  br label %138

138:                                              ; preds = %128, %91
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_input_pass(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %3, i32 0, i32 35
  store i32 0, ptr %4, align 8
  %5 = load ptr, ptr %2, align 8
  call void @start_iMCU_row(ptr noundef %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_output_pass(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %4, i32 0, i32 75
  %6 = load ptr, ptr %5, align 8
  store ptr %6, ptr %3, align 8
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.my_coef_controller, ptr %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %8, i32 0, i32 4
  %10 = load ptr, ptr %9, align 8
  %11 = icmp ne ptr %10, null
  br i1 %11, label %12, label %30

12:                                               ; preds = %1
  %13 = load ptr, ptr %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %13, i32 0, i32 18
  %15 = load i32, ptr %14, align 8
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %12
  %18 = load ptr, ptr %2, align 8
  %19 = call i32 @smoothing_ok(ptr noundef %18)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = load ptr, ptr %3, align 8
  %23 = getelementptr inbounds %struct.my_coef_controller, ptr %22, i32 0, i32 0
  %24 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %23, i32 0, i32 3
  store ptr @decompress_smooth_data, ptr %24, align 8
  br label %29

25:                                               ; preds = %17, %12
  %26 = load ptr, ptr %3, align 8
  %27 = getelementptr inbounds %struct.my_coef_controller, ptr %26, i32 0, i32 0
  %28 = getelementptr inbounds %struct.jpeg_d_coef_controller, ptr %27, i32 0, i32 3
  store ptr @decompress_data, ptr %28, align 8
  br label %29

29:                                               ; preds = %25, %21
  br label %30

30:                                               ; preds = %29, %1
  %31 = load ptr, ptr %2, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %31, i32 0, i32 37
  store i32 0, ptr %32, align 8
  ret void
}

declare i64 @jround_up(i64 noundef, i64 noundef) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @consume_data(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [4 x ptr], align 16
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %15 = load ptr, ptr %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %15, i32 0, i32 75
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %4, align 8
  store i32 0, ptr %7, align 4
  br label %18

18:                                               ; preds = %59, %1
  %19 = load i32, ptr %7, align 4
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %20, i32 0, i32 62
  %22 = load i32, ptr %21, align 8
  %23 = icmp slt i32 %19, %22
  br i1 %23, label %24, label %62

24:                                               ; preds = %18
  %25 = load ptr, ptr %3, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %25, i32 0, i32 63
  %27 = load i32, ptr %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [4 x ptr], ptr %26, i64 0, i64 %28
  %30 = load ptr, ptr %29, align 8
  store ptr %30, ptr %14, align 8
  %31 = load ptr, ptr %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %31, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %33, i32 0, i32 8
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr %3, align 8
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds %struct.my_coef_controller, ptr %37, i32 0, i32 5
  %39 = load ptr, ptr %14, align 8
  %40 = getelementptr inbounds %struct.jpeg_component_info, ptr %39, i32 0, i32 1
  %41 = load i32, ptr %40, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [10 x ptr], ptr %38, i64 0, i64 %42
  %44 = load ptr, ptr %43, align 8
  %45 = load ptr, ptr %3, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %45, i32 0, i32 35
  %47 = load i32, ptr %46, align 8
  %48 = load ptr, ptr %14, align 8
  %49 = getelementptr inbounds %struct.jpeg_component_info, ptr %48, i32 0, i32 3
  %50 = load i32, ptr %49, align 4
  %51 = mul i32 %47, %50
  %52 = load ptr, ptr %14, align 8
  %53 = getelementptr inbounds %struct.jpeg_component_info, ptr %52, i32 0, i32 3
  %54 = load i32, ptr %53, align 4
  %55 = call ptr %35(ptr noundef %36, ptr noundef %44, i32 noundef %51, i32 noundef %54, i32 noundef 1)
  %56 = load i32, ptr %7, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [4 x ptr], ptr %12, i64 0, i64 %57
  store ptr %55, ptr %58, align 8
  br label %59

59:                                               ; preds = %24
  %60 = load i32, ptr %7, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, ptr %7, align 4
  br label %18, !llvm.loop !9

62:                                               ; preds = %18
  %63 = load ptr, ptr %4, align 8
  %64 = getelementptr inbounds %struct.my_coef_controller, ptr %63, i32 0, i32 2
  %65 = load i32, ptr %64, align 4
  store i32 %65, ptr %10, align 4
  br label %66

66:                                               ; preds = %173, %62
  %67 = load i32, ptr %10, align 4
  %68 = load ptr, ptr %4, align 8
  %69 = getelementptr inbounds %struct.my_coef_controller, ptr %68, i32 0, i32 3
  %70 = load i32, ptr %69, align 8
  %71 = icmp slt i32 %67, %70
  br i1 %71, label %72, label %176

72:                                               ; preds = %66
  %73 = load ptr, ptr %4, align 8
  %74 = getelementptr inbounds %struct.my_coef_controller, ptr %73, i32 0, i32 1
  %75 = load i32, ptr %74, align 8
  store i32 %75, ptr %5, align 4
  br label %76

76:                                               ; preds = %167, %72
  %77 = load i32, ptr %5, align 4
  %78 = load ptr, ptr %3, align 8
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %78, i32 0, i32 64
  %80 = load i32, ptr %79, align 8
  %81 = icmp ult i32 %77, %80
  br i1 %81, label %82, label %170

82:                                               ; preds = %76
  store i32 0, ptr %6, align 4
  store i32 0, ptr %7, align 4
  br label %83

83:                                               ; preds = %144, %82
  %84 = load i32, ptr %7, align 4
  %85 = load ptr, ptr %3, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %85, i32 0, i32 62
  %87 = load i32, ptr %86, align 8
  %88 = icmp slt i32 %84, %87
  br i1 %88, label %89, label %147

89:                                               ; preds = %83
  %90 = load ptr, ptr %3, align 8
  %91 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %90, i32 0, i32 63
  %92 = load i32, ptr %7, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [4 x ptr], ptr %91, i64 0, i64 %93
  %95 = load ptr, ptr %94, align 8
  store ptr %95, ptr %14, align 8
  %96 = load i32, ptr %5, align 4
  %97 = load ptr, ptr %14, align 8
  %98 = getelementptr inbounds %struct.jpeg_component_info, ptr %97, i32 0, i32 13
  %99 = load i32, ptr %98, align 4
  %100 = mul i32 %96, %99
  store i32 %100, ptr %11, align 4
  store i32 0, ptr %9, align 4
  br label %101

101:                                              ; preds = %140, %89
  %102 = load i32, ptr %9, align 4
  %103 = load ptr, ptr %14, align 8
  %104 = getelementptr inbounds %struct.jpeg_component_info, ptr %103, i32 0, i32 14
  %105 = load i32, ptr %104, align 8
  %106 = icmp slt i32 %102, %105
  br i1 %106, label %107, label %143

107:                                              ; preds = %101
  %108 = load i32, ptr %7, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [4 x ptr], ptr %12, i64 0, i64 %109
  %111 = load ptr, ptr %110, align 8
  %112 = load i32, ptr %9, align 4
  %113 = load i32, ptr %10, align 4
  %114 = add nsw i32 %112, %113
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds ptr, ptr %111, i64 %115
  %117 = load ptr, ptr %116, align 8
  %118 = load i32, ptr %11, align 4
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds [64 x i16], ptr %117, i64 %119
  store ptr %120, ptr %13, align 8
  store i32 0, ptr %8, align 4
  br label %121

121:                                              ; preds = %136, %107
  %122 = load i32, ptr %8, align 4
  %123 = load ptr, ptr %14, align 8
  %124 = getelementptr inbounds %struct.jpeg_component_info, ptr %123, i32 0, i32 13
  %125 = load i32, ptr %124, align 4
  %126 = icmp slt i32 %122, %125
  br i1 %126, label %127, label %139

127:                                              ; preds = %121
  %128 = load ptr, ptr %13, align 8
  %129 = getelementptr inbounds [64 x i16], ptr %128, i32 1
  store ptr %129, ptr %13, align 8
  %130 = load ptr, ptr %4, align 8
  %131 = getelementptr inbounds %struct.my_coef_controller, ptr %130, i32 0, i32 4
  %132 = load i32, ptr %6, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, ptr %6, align 4
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds [10 x ptr], ptr %131, i64 0, i64 %134
  store ptr %128, ptr %135, align 8
  br label %136

136:                                              ; preds = %127
  %137 = load i32, ptr %8, align 4
  %138 = add nsw i32 %137, 1
  store i32 %138, ptr %8, align 4
  br label %121, !llvm.loop !10

139:                                              ; preds = %121
  br label %140

140:                                              ; preds = %139
  %141 = load i32, ptr %9, align 4
  %142 = add nsw i32 %141, 1
  store i32 %142, ptr %9, align 4
  br label %101, !llvm.loop !11

143:                                              ; preds = %101
  br label %144

144:                                              ; preds = %143
  %145 = load i32, ptr %7, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, ptr %7, align 4
  br label %83, !llvm.loop !12

147:                                              ; preds = %83
  %148 = load ptr, ptr %3, align 8
  %149 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %148, i32 0, i32 79
  %150 = load ptr, ptr %149, align 8
  %151 = getelementptr inbounds %struct.jpeg_entropy_decoder, ptr %150, i32 0, i32 1
  %152 = load ptr, ptr %151, align 8
  %153 = load ptr, ptr %3, align 8
  %154 = load ptr, ptr %4, align 8
  %155 = getelementptr inbounds %struct.my_coef_controller, ptr %154, i32 0, i32 4
  %156 = getelementptr inbounds [10 x ptr], ptr %155, i64 0, i64 0
  %157 = call i32 %152(ptr noundef %153, ptr noundef %156)
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %166, label %159

159:                                              ; preds = %147
  %160 = load i32, ptr %10, align 4
  %161 = load ptr, ptr %4, align 8
  %162 = getelementptr inbounds %struct.my_coef_controller, ptr %161, i32 0, i32 2
  store i32 %160, ptr %162, align 4
  %163 = load i32, ptr %5, align 4
  %164 = load ptr, ptr %4, align 8
  %165 = getelementptr inbounds %struct.my_coef_controller, ptr %164, i32 0, i32 1
  store i32 %163, ptr %165, align 8
  store i32 0, ptr %2, align 4
  br label %194

166:                                              ; preds = %147
  br label %167

167:                                              ; preds = %166
  %168 = load i32, ptr %5, align 4
  %169 = add i32 %168, 1
  store i32 %169, ptr %5, align 4
  br label %76, !llvm.loop !13

170:                                              ; preds = %76
  %171 = load ptr, ptr %4, align 8
  %172 = getelementptr inbounds %struct.my_coef_controller, ptr %171, i32 0, i32 1
  store i32 0, ptr %172, align 8
  br label %173

173:                                              ; preds = %170
  %174 = load i32, ptr %10, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, ptr %10, align 4
  br label %66, !llvm.loop !14

176:                                              ; preds = %66
  %177 = load ptr, ptr %3, align 8
  %178 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %177, i32 0, i32 35
  %179 = load i32, ptr %178, align 8
  %180 = add i32 %179, 1
  store i32 %180, ptr %178, align 8
  %181 = load ptr, ptr %3, align 8
  %182 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %181, i32 0, i32 60
  %183 = load i32, ptr %182, align 8
  %184 = icmp ult i32 %180, %183
  br i1 %184, label %185, label %187

185:                                              ; preds = %176
  %186 = load ptr, ptr %3, align 8
  call void @start_iMCU_row(ptr noundef %186)
  store i32 3, ptr %2, align 4
  br label %194

187:                                              ; preds = %176
  %188 = load ptr, ptr %3, align 8
  %189 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %188, i32 0, i32 77
  %190 = load ptr, ptr %189, align 8
  %191 = getelementptr inbounds %struct.jpeg_input_controller, ptr %190, i32 0, i32 3
  %192 = load ptr, ptr %191, align 8
  %193 = load ptr, ptr %3, align 8
  call void %192(ptr noundef %193)
  store i32 4, ptr %2, align 4
  br label %194

194:                                              ; preds = %187, %185, %159
  %195 = load i32, ptr %2, align 4
  ret i32 %195
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decompress_data(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %18 = load ptr, ptr %4, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %18, i32 0, i32 75
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %6, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %21, i32 0, i32 60
  %23 = load i32, ptr %22, align 8
  %24 = sub i32 %23, 1
  store i32 %24, ptr %7, align 4
  br label %25

25:                                               ; preds = %63, %2
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %26, i32 0, i32 34
  %28 = load i32, ptr %27, align 4
  %29 = load ptr, ptr %4, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %29, i32 0, i32 36
  %31 = load i32, ptr %30, align 4
  %32 = icmp slt i32 %28, %31
  br i1 %32, label %51, label %33

33:                                               ; preds = %25
  %34 = load ptr, ptr %4, align 8
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %34, i32 0, i32 34
  %36 = load i32, ptr %35, align 4
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %37, i32 0, i32 36
  %39 = load i32, ptr %38, align 4
  %40 = icmp eq i32 %36, %39
  br i1 %40, label %41, label %49

41:                                               ; preds = %33
  %42 = load ptr, ptr %4, align 8
  %43 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %42, i32 0, i32 35
  %44 = load i32, ptr %43, align 8
  %45 = load ptr, ptr %4, align 8
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %45, i32 0, i32 37
  %47 = load i32, ptr %46, align 8
  %48 = icmp ule i32 %44, %47
  br label %49

49:                                               ; preds = %41, %33
  %50 = phi i1 [ false, %33 ], [ %48, %41 ]
  br label %51

51:                                               ; preds = %49, %25
  %52 = phi i1 [ true, %25 ], [ %50, %49 ]
  br i1 %52, label %53, label %64

53:                                               ; preds = %51
  %54 = load ptr, ptr %4, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %54, i32 0, i32 77
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_input_controller, ptr %56, i32 0, i32 0
  %58 = load ptr, ptr %57, align 8
  %59 = load ptr, ptr %4, align 8
  %60 = call i32 %58(ptr noundef %59)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %53
  store i32 0, ptr %3, align 4
  br label %202

63:                                               ; preds = %53
  br label %25, !llvm.loop !15

64:                                               ; preds = %51
  store i32 0, ptr %9, align 4
  %65 = load ptr, ptr %4, align 8
  %66 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %65, i32 0, i32 43
  %67 = load ptr, ptr %66, align 8
  store ptr %67, ptr %16, align 8
  br label %68

68:                                               ; preds = %186, %64
  %69 = load i32, ptr %9, align 4
  %70 = load ptr, ptr %4, align 8
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %70, i32 0, i32 8
  %72 = load i32, ptr %71, align 8
  %73 = icmp slt i32 %69, %72
  br i1 %73, label %74, label %191

74:                                               ; preds = %68
  %75 = load ptr, ptr %16, align 8
  %76 = getelementptr inbounds %struct.jpeg_component_info, ptr %75, i32 0, i32 12
  %77 = load i32, ptr %76, align 8
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  br label %186

80:                                               ; preds = %74
  %81 = load ptr, ptr %4, align 8
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %81, i32 0, i32 1
  %83 = load ptr, ptr %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %83, i32 0, i32 8
  %85 = load ptr, ptr %84, align 8
  %86 = load ptr, ptr %4, align 8
  %87 = load ptr, ptr %6, align 8
  %88 = getelementptr inbounds %struct.my_coef_controller, ptr %87, i32 0, i32 5
  %89 = load i32, ptr %9, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [10 x ptr], ptr %88, i64 0, i64 %90
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %4, align 8
  %94 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %93, i32 0, i32 37
  %95 = load i32, ptr %94, align 8
  %96 = load ptr, ptr %16, align 8
  %97 = getelementptr inbounds %struct.jpeg_component_info, ptr %96, i32 0, i32 3
  %98 = load i32, ptr %97, align 4
  %99 = mul i32 %95, %98
  %100 = load ptr, ptr %16, align 8
  %101 = getelementptr inbounds %struct.jpeg_component_info, ptr %100, i32 0, i32 3
  %102 = load i32, ptr %101, align 4
  %103 = call ptr %85(ptr noundef %86, ptr noundef %92, i32 noundef %99, i32 noundef %102, i32 noundef 0)
  store ptr %103, ptr %12, align 8
  %104 = load ptr, ptr %4, align 8
  %105 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %104, i32 0, i32 37
  %106 = load i32, ptr %105, align 8
  %107 = load i32, ptr %7, align 4
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %109, label %113

109:                                              ; preds = %80
  %110 = load ptr, ptr %16, align 8
  %111 = getelementptr inbounds %struct.jpeg_component_info, ptr %110, i32 0, i32 3
  %112 = load i32, ptr %111, align 4
  store i32 %112, ptr %11, align 4
  br label %128

113:                                              ; preds = %80
  %114 = load ptr, ptr %16, align 8
  %115 = getelementptr inbounds %struct.jpeg_component_info, ptr %114, i32 0, i32 8
  %116 = load i32, ptr %115, align 8
  %117 = load ptr, ptr %16, align 8
  %118 = getelementptr inbounds %struct.jpeg_component_info, ptr %117, i32 0, i32 3
  %119 = load i32, ptr %118, align 4
  %120 = urem i32 %116, %119
  store i32 %120, ptr %11, align 4
  %121 = load i32, ptr %11, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %113
  %124 = load ptr, ptr %16, align 8
  %125 = getelementptr inbounds %struct.jpeg_component_info, ptr %124, i32 0, i32 3
  %126 = load i32, ptr %125, align 4
  store i32 %126, ptr %11, align 4
  br label %127

127:                                              ; preds = %123, %113
  br label %128

128:                                              ; preds = %127, %109
  %129 = load ptr, ptr %4, align 8
  %130 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %129, i32 0, i32 80
  %131 = load ptr, ptr %130, align 8
  %132 = getelementptr inbounds %struct.jpeg_inverse_dct, ptr %131, i32 0, i32 1
  %133 = load i32, ptr %9, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [10 x ptr], ptr %132, i64 0, i64 %134
  %136 = load ptr, ptr %135, align 8
  store ptr %136, ptr %17, align 8
  %137 = load ptr, ptr %5, align 8
  %138 = load i32, ptr %9, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds ptr, ptr %137, i64 %139
  %141 = load ptr, ptr %140, align 8
  store ptr %141, ptr %14, align 8
  store i32 0, ptr %10, align 4
  br label %142

142:                                              ; preds = %182, %128
  %143 = load i32, ptr %10, align 4
  %144 = load i32, ptr %11, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %146, label %185

146:                                              ; preds = %142
  %147 = load ptr, ptr %12, align 8
  %148 = load i32, ptr %10, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds ptr, ptr %147, i64 %149
  %151 = load ptr, ptr %150, align 8
  store ptr %151, ptr %13, align 8
  store i32 0, ptr %15, align 4
  store i32 0, ptr %8, align 4
  br label %152

152:                                              ; preds = %172, %146
  %153 = load i32, ptr %8, align 4
  %154 = load ptr, ptr %16, align 8
  %155 = getelementptr inbounds %struct.jpeg_component_info, ptr %154, i32 0, i32 7
  %156 = load i32, ptr %155, align 4
  %157 = icmp ult i32 %153, %156
  br i1 %157, label %158, label %175

158:                                              ; preds = %152
  %159 = load ptr, ptr %17, align 8
  %160 = load ptr, ptr %4, align 8
  %161 = load ptr, ptr %16, align 8
  %162 = load ptr, ptr %13, align 8
  %163 = load ptr, ptr %14, align 8
  %164 = load i32, ptr %15, align 4
  call void %159(ptr noundef %160, ptr noundef %161, ptr noundef %162, ptr noundef %163, i32 noundef %164)
  %165 = load ptr, ptr %13, align 8
  %166 = getelementptr inbounds [64 x i16], ptr %165, i32 1
  store ptr %166, ptr %13, align 8
  %167 = load ptr, ptr %16, align 8
  %168 = getelementptr inbounds %struct.jpeg_component_info, ptr %167, i32 0, i32 9
  %169 = load i32, ptr %168, align 4
  %170 = load i32, ptr %15, align 4
  %171 = add i32 %170, %169
  store i32 %171, ptr %15, align 4
  br label %172

172:                                              ; preds = %158
  %173 = load i32, ptr %8, align 4
  %174 = add i32 %173, 1
  store i32 %174, ptr %8, align 4
  br label %152, !llvm.loop !16

175:                                              ; preds = %152
  %176 = load ptr, ptr %16, align 8
  %177 = getelementptr inbounds %struct.jpeg_component_info, ptr %176, i32 0, i32 9
  %178 = load i32, ptr %177, align 4
  %179 = load ptr, ptr %14, align 8
  %180 = sext i32 %178 to i64
  %181 = getelementptr inbounds ptr, ptr %179, i64 %180
  store ptr %181, ptr %14, align 8
  br label %182

182:                                              ; preds = %175
  %183 = load i32, ptr %10, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, ptr %10, align 4
  br label %142, !llvm.loop !17

185:                                              ; preds = %142
  br label %186

186:                                              ; preds = %185, %79
  %187 = load i32, ptr %9, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, ptr %9, align 4
  %189 = load ptr, ptr %16, align 8
  %190 = getelementptr inbounds %struct.jpeg_component_info, ptr %189, i32 1
  store ptr %190, ptr %16, align 8
  br label %68, !llvm.loop !18

191:                                              ; preds = %68
  %192 = load ptr, ptr %4, align 8
  %193 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %192, i32 0, i32 37
  %194 = load i32, ptr %193, align 8
  %195 = add i32 %194, 1
  store i32 %195, ptr %193, align 8
  %196 = load ptr, ptr %4, align 8
  %197 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %196, i32 0, i32 60
  %198 = load i32, ptr %197, align 8
  %199 = icmp ult i32 %195, %198
  br i1 %199, label %200, label %201

200:                                              ; preds = %191
  store i32 3, ptr %3, align 4
  br label %202

201:                                              ; preds = %191
  store i32 4, ptr %3, align 4
  br label %202

202:                                              ; preds = %201, %200, %62
  %203 = load i32, ptr %3, align 4
  ret i32 %203
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dummy_consume_data(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decompress_onepass(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca ptr, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca ptr, align 8
  %20 = alloca ptr, align 8
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %21, i32 0, i32 75
  %23 = load ptr, ptr %22, align 8
  store ptr %23, ptr %6, align 8
  %24 = load ptr, ptr %4, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %24, i32 0, i32 64
  %26 = load i32, ptr %25, align 8
  %27 = sub i32 %26, 1
  store i32 %27, ptr %8, align 4
  %28 = load ptr, ptr %4, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %28, i32 0, i32 60
  %30 = load i32, ptr %29, align 8
  %31 = sub i32 %30, 1
  store i32 %31, ptr %9, align 4
  %32 = load ptr, ptr %6, align 8
  %33 = getelementptr inbounds %struct.my_coef_controller, ptr %32, i32 0, i32 2
  %34 = load i32, ptr %33, align 4
  store i32 %34, ptr %14, align 4
  br label %35

35:                                               ; preds = %217, %2
  %36 = load i32, ptr %14, align 4
  %37 = load ptr, ptr %6, align 8
  %38 = getelementptr inbounds %struct.my_coef_controller, ptr %37, i32 0, i32 3
  %39 = load i32, ptr %38, align 8
  %40 = icmp slt i32 %36, %39
  br i1 %40, label %41, label %220

41:                                               ; preds = %35
  %42 = load ptr, ptr %6, align 8
  %43 = getelementptr inbounds %struct.my_coef_controller, ptr %42, i32 0, i32 1
  %44 = load i32, ptr %43, align 8
  store i32 %44, ptr %7, align 4
  br label %45

45:                                               ; preds = %211, %41
  %46 = load i32, ptr %7, align 4
  %47 = load i32, ptr %8, align 4
  %48 = icmp ule i32 %46, %47
  br i1 %48, label %49, label %214

49:                                               ; preds = %45
  %50 = load ptr, ptr %6, align 8
  %51 = getelementptr inbounds %struct.my_coef_controller, ptr %50, i32 0, i32 4
  %52 = getelementptr inbounds [10 x ptr], ptr %51, i64 0, i64 0
  %53 = load ptr, ptr %52, align 8
  %54 = load ptr, ptr %4, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %54, i32 0, i32 66
  %56 = load i32, ptr %55, align 8
  %57 = sext i32 %56 to i64
  %58 = mul i64 %57, 128
  call void @jzero_far(ptr noundef %53, i64 noundef %58)
  %59 = load ptr, ptr %4, align 8
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %59, i32 0, i32 79
  %61 = load ptr, ptr %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_entropy_decoder, ptr %61, i32 0, i32 1
  %63 = load ptr, ptr %62, align 8
  %64 = load ptr, ptr %4, align 8
  %65 = load ptr, ptr %6, align 8
  %66 = getelementptr inbounds %struct.my_coef_controller, ptr %65, i32 0, i32 4
  %67 = getelementptr inbounds [10 x ptr], ptr %66, i64 0, i64 0
  %68 = call i32 %63(ptr noundef %64, ptr noundef %67)
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %49
  %71 = load i32, ptr %14, align 4
  %72 = load ptr, ptr %6, align 8
  %73 = getelementptr inbounds %struct.my_coef_controller, ptr %72, i32 0, i32 2
  store i32 %71, ptr %73, align 4
  %74 = load i32, ptr %7, align 4
  %75 = load ptr, ptr %6, align 8
  %76 = getelementptr inbounds %struct.my_coef_controller, ptr %75, i32 0, i32 1
  store i32 %74, ptr %76, align 8
  store i32 0, ptr %3, align 4
  br label %242

77:                                               ; preds = %49
  store i32 0, ptr %10, align 4
  store i32 0, ptr %11, align 4
  br label %78

78:                                               ; preds = %207, %77
  %79 = load i32, ptr %11, align 4
  %80 = load ptr, ptr %4, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %80, i32 0, i32 62
  %82 = load i32, ptr %81, align 8
  %83 = icmp slt i32 %79, %82
  br i1 %83, label %84, label %210

84:                                               ; preds = %78
  %85 = load ptr, ptr %4, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %85, i32 0, i32 63
  %87 = load i32, ptr %11, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [4 x ptr], ptr %86, i64 0, i64 %88
  %90 = load ptr, ptr %89, align 8
  store ptr %90, ptr %19, align 8
  %91 = load ptr, ptr %19, align 8
  %92 = getelementptr inbounds %struct.jpeg_component_info, ptr %91, i32 0, i32 12
  %93 = load i32, ptr %92, align 8
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %84
  %96 = load ptr, ptr %19, align 8
  %97 = getelementptr inbounds %struct.jpeg_component_info, ptr %96, i32 0, i32 15
  %98 = load i32, ptr %97, align 4
  %99 = load i32, ptr %10, align 4
  %100 = add nsw i32 %99, %98
  store i32 %100, ptr %10, align 4
  br label %207

101:                                              ; preds = %84
  %102 = load ptr, ptr %4, align 8
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %102, i32 0, i32 80
  %104 = load ptr, ptr %103, align 8
  %105 = getelementptr inbounds %struct.jpeg_inverse_dct, ptr %104, i32 0, i32 1
  %106 = load ptr, ptr %19, align 8
  %107 = getelementptr inbounds %struct.jpeg_component_info, ptr %106, i32 0, i32 1
  %108 = load i32, ptr %107, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [10 x ptr], ptr %105, i64 0, i64 %109
  %111 = load ptr, ptr %110, align 8
  store ptr %111, ptr %20, align 8
  %112 = load i32, ptr %7, align 4
  %113 = load i32, ptr %8, align 4
  %114 = icmp ult i32 %112, %113
  br i1 %114, label %115, label %119

115:                                              ; preds = %101
  %116 = load ptr, ptr %19, align 8
  %117 = getelementptr inbounds %struct.jpeg_component_info, ptr %116, i32 0, i32 13
  %118 = load i32, ptr %117, align 4
  br label %123

119:                                              ; preds = %101
  %120 = load ptr, ptr %19, align 8
  %121 = getelementptr inbounds %struct.jpeg_component_info, ptr %120, i32 0, i32 17
  %122 = load i32, ptr %121, align 4
  br label %123

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %118, %115 ], [ %122, %119 ]
  store i32 %124, ptr %15, align 4
  %125 = load ptr, ptr %5, align 8
  %126 = load i32, ptr %11, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds ptr, ptr %125, i64 %127
  %129 = load ptr, ptr %128, align 8
  %130 = load i32, ptr %14, align 4
  %131 = load ptr, ptr %19, align 8
  %132 = getelementptr inbounds %struct.jpeg_component_info, ptr %131, i32 0, i32 9
  %133 = load i32, ptr %132, align 4
  %134 = mul nsw i32 %130, %133
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds ptr, ptr %129, i64 %135
  store ptr %136, ptr %16, align 8
  %137 = load i32, ptr %7, align 4
  %138 = load ptr, ptr %19, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, ptr %138, i32 0, i32 16
  %140 = load i32, ptr %139, align 8
  %141 = mul i32 %137, %140
  store i32 %141, ptr %17, align 4
  store i32 0, ptr %13, align 4
  br label %142

142:                                              ; preds = %203, %123
  %143 = load i32, ptr %13, align 4
  %144 = load ptr, ptr %19, align 8
  %145 = getelementptr inbounds %struct.jpeg_component_info, ptr %144, i32 0, i32 14
  %146 = load i32, ptr %145, align 8
  %147 = icmp slt i32 %143, %146
  br i1 %147, label %148, label %206

148:                                              ; preds = %142
  %149 = load ptr, ptr %4, align 8
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %149, i32 0, i32 35
  %151 = load i32, ptr %150, align 8
  %152 = load i32, ptr %9, align 4
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %162, label %154

154:                                              ; preds = %148
  %155 = load i32, ptr %14, align 4
  %156 = load i32, ptr %13, align 4
  %157 = add nsw i32 %155, %156
  %158 = load ptr, ptr %19, align 8
  %159 = getelementptr inbounds %struct.jpeg_component_info, ptr %158, i32 0, i32 18
  %160 = load i32, ptr %159, align 8
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %191

162:                                              ; preds = %154, %148
  %163 = load i32, ptr %17, align 4
  store i32 %163, ptr %18, align 4
  store i32 0, ptr %12, align 4
  br label %164

164:                                              ; preds = %187, %162
  %165 = load i32, ptr %12, align 4
  %166 = load i32, ptr %15, align 4
  %167 = icmp slt i32 %165, %166
  br i1 %167, label %168, label %190

168:                                              ; preds = %164
  %169 = load ptr, ptr %20, align 8
  %170 = load ptr, ptr %4, align 8
  %171 = load ptr, ptr %19, align 8
  %172 = load ptr, ptr %6, align 8
  %173 = getelementptr inbounds %struct.my_coef_controller, ptr %172, i32 0, i32 4
  %174 = load i32, ptr %10, align 4
  %175 = load i32, ptr %12, align 4
  %176 = add nsw i32 %174, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [10 x ptr], ptr %173, i64 0, i64 %177
  %179 = load ptr, ptr %178, align 8
  %180 = load ptr, ptr %16, align 8
  %181 = load i32, ptr %18, align 4
  call void %169(ptr noundef %170, ptr noundef %171, ptr noundef %179, ptr noundef %180, i32 noundef %181)
  %182 = load ptr, ptr %19, align 8
  %183 = getelementptr inbounds %struct.jpeg_component_info, ptr %182, i32 0, i32 9
  %184 = load i32, ptr %183, align 4
  %185 = load i32, ptr %18, align 4
  %186 = add i32 %185, %184
  store i32 %186, ptr %18, align 4
  br label %187

187:                                              ; preds = %168
  %188 = load i32, ptr %12, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, ptr %12, align 4
  br label %164, !llvm.loop !19

190:                                              ; preds = %164
  br label %191

191:                                              ; preds = %190, %154
  %192 = load ptr, ptr %19, align 8
  %193 = getelementptr inbounds %struct.jpeg_component_info, ptr %192, i32 0, i32 13
  %194 = load i32, ptr %193, align 4
  %195 = load i32, ptr %10, align 4
  %196 = add nsw i32 %195, %194
  store i32 %196, ptr %10, align 4
  %197 = load ptr, ptr %19, align 8
  %198 = getelementptr inbounds %struct.jpeg_component_info, ptr %197, i32 0, i32 9
  %199 = load i32, ptr %198, align 4
  %200 = load ptr, ptr %16, align 8
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds ptr, ptr %200, i64 %201
  store ptr %202, ptr %16, align 8
  br label %203

203:                                              ; preds = %191
  %204 = load i32, ptr %13, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, ptr %13, align 4
  br label %142, !llvm.loop !20

206:                                              ; preds = %142
  br label %207

207:                                              ; preds = %206, %95
  %208 = load i32, ptr %11, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, ptr %11, align 4
  br label %78, !llvm.loop !21

210:                                              ; preds = %78
  br label %211

211:                                              ; preds = %210
  %212 = load i32, ptr %7, align 4
  %213 = add i32 %212, 1
  store i32 %213, ptr %7, align 4
  br label %45, !llvm.loop !22

214:                                              ; preds = %45
  %215 = load ptr, ptr %6, align 8
  %216 = getelementptr inbounds %struct.my_coef_controller, ptr %215, i32 0, i32 1
  store i32 0, ptr %216, align 8
  br label %217

217:                                              ; preds = %214
  %218 = load i32, ptr %14, align 4
  %219 = add nsw i32 %218, 1
  store i32 %219, ptr %14, align 4
  br label %35, !llvm.loop !23

220:                                              ; preds = %35
  %221 = load ptr, ptr %4, align 8
  %222 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %221, i32 0, i32 37
  %223 = load i32, ptr %222, align 8
  %224 = add i32 %223, 1
  store i32 %224, ptr %222, align 8
  %225 = load ptr, ptr %4, align 8
  %226 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %225, i32 0, i32 35
  %227 = load i32, ptr %226, align 8
  %228 = add i32 %227, 1
  store i32 %228, ptr %226, align 8
  %229 = load ptr, ptr %4, align 8
  %230 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %229, i32 0, i32 60
  %231 = load i32, ptr %230, align 8
  %232 = icmp ult i32 %228, %231
  br i1 %232, label %233, label %235

233:                                              ; preds = %220
  %234 = load ptr, ptr %4, align 8
  call void @start_iMCU_row(ptr noundef %234)
  store i32 3, ptr %3, align 4
  br label %242

235:                                              ; preds = %220
  %236 = load ptr, ptr %4, align 8
  %237 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %236, i32 0, i32 77
  %238 = load ptr, ptr %237, align 8
  %239 = getelementptr inbounds %struct.jpeg_input_controller, ptr %238, i32 0, i32 3
  %240 = load ptr, ptr %239, align 8
  %241 = load ptr, ptr %4, align 8
  call void %240(ptr noundef %241)
  store i32 4, ptr %3, align 4
  br label %242

242:                                              ; preds = %235, %233, %70
  %243 = load i32, ptr %3, align 4
  ret i32 %243
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_iMCU_row(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %4, i32 0, i32 75
  %6 = load ptr, ptr %5, align 8
  store ptr %6, ptr %3, align 8
  %7 = load ptr, ptr %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %7, i32 0, i32 62
  %9 = load i32, ptr %8, align 8
  %10 = icmp sgt i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct.my_coef_controller, ptr %12, i32 0, i32 3
  store i32 1, ptr %13, align 8
  br label %42

14:                                               ; preds = %1
  %15 = load ptr, ptr %2, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %15, i32 0, i32 35
  %17 = load i32, ptr %16, align 8
  %18 = load ptr, ptr %2, align 8
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %18, i32 0, i32 60
  %20 = load i32, ptr %19, align 8
  %21 = sub i32 %20, 1
  %22 = icmp ult i32 %17, %21
  br i1 %22, label %23, label %32

23:                                               ; preds = %14
  %24 = load ptr, ptr %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %24, i32 0, i32 63
  %26 = getelementptr inbounds [4 x ptr], ptr %25, i64 0, i64 0
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_component_info, ptr %27, i32 0, i32 3
  %29 = load i32, ptr %28, align 4
  %30 = load ptr, ptr %3, align 8
  %31 = getelementptr inbounds %struct.my_coef_controller, ptr %30, i32 0, i32 3
  store i32 %29, ptr %31, align 8
  br label %41

32:                                               ; preds = %14
  %33 = load ptr, ptr %2, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %33, i32 0, i32 63
  %35 = getelementptr inbounds [4 x ptr], ptr %34, i64 0, i64 0
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_component_info, ptr %36, i32 0, i32 18
  %38 = load i32, ptr %37, align 8
  %39 = load ptr, ptr %3, align 8
  %40 = getelementptr inbounds %struct.my_coef_controller, ptr %39, i32 0, i32 3
  store i32 %38, ptr %40, align 8
  br label %41

41:                                               ; preds = %32, %23
  br label %42

42:                                               ; preds = %41, %11
  %43 = load ptr, ptr %3, align 8
  %44 = getelementptr inbounds %struct.my_coef_controller, ptr %43, i32 0, i32 1
  store i32 0, ptr %44, align 8
  %45 = load ptr, ptr %3, align 8
  %46 = getelementptr inbounds %struct.my_coef_controller, ptr %45, i32 0, i32 2
  store i32 0, ptr %46, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @smoothing_ok(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %12, i32 0, i32 75
  %14 = load ptr, ptr %13, align 8
  store ptr %14, ptr %4, align 8
  store i32 0, ptr %5, align 4
  %15 = load ptr, ptr %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %15, i32 0, i32 44
  %17 = load i32, ptr %16, align 8
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %1
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %20, i32 0, i32 38
  %22 = load ptr, ptr %21, align 8
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %19, %1
  store i32 0, ptr %2, align 4
  br label %155

25:                                               ; preds = %19
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds %struct.my_coef_controller, ptr %26, i32 0, i32 6
  %28 = load ptr, ptr %27, align 8
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %45

30:                                               ; preds = %25
  %31 = load ptr, ptr %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %31, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %33, i32 0, i32 0
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr %3, align 8
  %37 = load ptr, ptr %3, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %37, i32 0, i32 8
  %39 = load i32, ptr %38, align 8
  %40 = sext i32 %39 to i64
  %41 = mul i64 %40, 24
  %42 = call ptr %35(ptr noundef %36, i32 noundef 1, i64 noundef %41)
  %43 = load ptr, ptr %4, align 8
  %44 = getelementptr inbounds %struct.my_coef_controller, ptr %43, i32 0, i32 6
  store ptr %42, ptr %44, align 8
  br label %45

45:                                               ; preds = %30, %25
  %46 = load ptr, ptr %4, align 8
  %47 = getelementptr inbounds %struct.my_coef_controller, ptr %46, i32 0, i32 6
  %48 = load ptr, ptr %47, align 8
  store ptr %48, ptr %11, align 8
  store i32 0, ptr %6, align 4
  %49 = load ptr, ptr %3, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %49, i32 0, i32 43
  %51 = load ptr, ptr %50, align 8
  store ptr %51, ptr %8, align 8
  br label %52

52:                                               ; preds = %148, %45
  %53 = load i32, ptr %6, align 4
  %54 = load ptr, ptr %3, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %54, i32 0, i32 8
  %56 = load i32, ptr %55, align 8
  %57 = icmp slt i32 %53, %56
  br i1 %57, label %58, label %153

58:                                               ; preds = %52
  %59 = load ptr, ptr %8, align 8
  %60 = getelementptr inbounds %struct.jpeg_component_info, ptr %59, i32 0, i32 19
  %61 = load ptr, ptr %60, align 8
  store ptr %61, ptr %9, align 8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  store i32 0, ptr %2, align 4
  br label %155

64:                                               ; preds = %58
  %65 = load ptr, ptr %9, align 8
  %66 = getelementptr inbounds %struct.JQUANT_TBL, ptr %65, i32 0, i32 0
  %67 = getelementptr inbounds [64 x i16], ptr %66, i64 0, i64 0
  %68 = load i16, ptr %67, align 4
  %69 = zext i16 %68 to i32
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %106, label %71

71:                                               ; preds = %64
  %72 = load ptr, ptr %9, align 8
  %73 = getelementptr inbounds %struct.JQUANT_TBL, ptr %72, i32 0, i32 0
  %74 = getelementptr inbounds [64 x i16], ptr %73, i64 0, i64 1
  %75 = load i16, ptr %74, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %106, label %78

78:                                               ; preds = %71
  %79 = load ptr, ptr %9, align 8
  %80 = getelementptr inbounds %struct.JQUANT_TBL, ptr %79, i32 0, i32 0
  %81 = getelementptr inbounds [64 x i16], ptr %80, i64 0, i64 8
  %82 = load i16, ptr %81, align 4
  %83 = zext i16 %82 to i32
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %106, label %85

85:                                               ; preds = %78
  %86 = load ptr, ptr %9, align 8
  %87 = getelementptr inbounds %struct.JQUANT_TBL, ptr %86, i32 0, i32 0
  %88 = getelementptr inbounds [64 x i16], ptr %87, i64 0, i64 16
  %89 = load i16, ptr %88, align 4
  %90 = zext i16 %89 to i32
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %85
  %93 = load ptr, ptr %9, align 8
  %94 = getelementptr inbounds %struct.JQUANT_TBL, ptr %93, i32 0, i32 0
  %95 = getelementptr inbounds [64 x i16], ptr %94, i64 0, i64 9
  %96 = load i16, ptr %95, align 2
  %97 = zext i16 %96 to i32
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %92
  %100 = load ptr, ptr %9, align 8
  %101 = getelementptr inbounds %struct.JQUANT_TBL, ptr %100, i32 0, i32 0
  %102 = getelementptr inbounds [64 x i16], ptr %101, i64 0, i64 2
  %103 = load i16, ptr %102, align 4
  %104 = zext i16 %103 to i32
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %99, %92, %85, %78, %71, %64
  store i32 0, ptr %2, align 4
  br label %155

107:                                              ; preds = %99
  %108 = load ptr, ptr %3, align 8
  %109 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %108, i32 0, i32 38
  %110 = load ptr, ptr %109, align 8
  %111 = load i32, ptr %6, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [64 x i32], ptr %110, i64 %112
  %114 = getelementptr inbounds [64 x i32], ptr %113, i64 0, i64 0
  store ptr %114, ptr %10, align 8
  %115 = load ptr, ptr %10, align 8
  %116 = getelementptr inbounds i32, ptr %115, i64 0
  %117 = load i32, ptr %116, align 4
  %118 = icmp slt i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %107
  store i32 0, ptr %2, align 4
  br label %155

120:                                              ; preds = %107
  store i32 1, ptr %7, align 4
  br label %121

121:                                              ; preds = %142, %120
  %122 = load i32, ptr %7, align 4
  %123 = icmp sle i32 %122, 5
  br i1 %123, label %124, label %145

124:                                              ; preds = %121
  %125 = load ptr, ptr %10, align 8
  %126 = load i32, ptr %7, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i32, ptr %125, i64 %127
  %129 = load i32, ptr %128, align 4
  %130 = load ptr, ptr %11, align 8
  %131 = load i32, ptr %7, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, ptr %130, i64 %132
  store i32 %129, ptr %133, align 4
  %134 = load ptr, ptr %10, align 8
  %135 = load i32, ptr %7, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i32, ptr %134, i64 %136
  %138 = load i32, ptr %137, align 4
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %124
  store i32 1, ptr %5, align 4
  br label %141

141:                                              ; preds = %140, %124
  br label %142

142:                                              ; preds = %141
  %143 = load i32, ptr %7, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, ptr %7, align 4
  br label %121, !llvm.loop !24

145:                                              ; preds = %121
  %146 = load ptr, ptr %11, align 8
  %147 = getelementptr inbounds i32, ptr %146, i64 6
  store ptr %147, ptr %11, align 8
  br label %148

148:                                              ; preds = %145
  %149 = load i32, ptr %6, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, ptr %6, align 4
  %151 = load ptr, ptr %8, align 8
  %152 = getelementptr inbounds %struct.jpeg_component_info, ptr %151, i32 1
  store ptr %152, ptr %8, align 8
  br label %52, !llvm.loop !25

153:                                              ; preds = %52
  %154 = load i32, ptr %5, align 4
  store i32 %154, ptr %2, align 4
  br label %155

155:                                              ; preds = %153, %119, %106, %63, %24
  %156 = load i32, ptr %2, align 4
  ret i32 %156
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decompress_smooth_data(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = alloca ptr, align 8
  %17 = alloca ptr, align 8
  %18 = alloca ptr, align 8
  %19 = alloca i32, align 4
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca [64 x i16], align 16
  %25 = alloca ptr, align 8
  %26 = alloca ptr, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store ptr %1, ptr %5, align 8
  %46 = load ptr, ptr %4, align 8
  %47 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %46, i32 0, i32 75
  %48 = load ptr, ptr %47, align 8
  store ptr %48, ptr %6, align 8
  %49 = load ptr, ptr %4, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %49, i32 0, i32 60
  %51 = load i32, ptr %50, align 8
  %52 = sub i32 %51, 1
  store i32 %52, ptr %7, align 4
  br label %53

53:                                               ; preds = %107, %2
  %54 = load ptr, ptr %4, align 8
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %54, i32 0, i32 34
  %56 = load i32, ptr %55, align 4
  %57 = load ptr, ptr %4, align 8
  %58 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %57, i32 0, i32 36
  %59 = load i32, ptr %58, align 4
  %60 = icmp sle i32 %56, %59
  br i1 %60, label %61, label %69

61:                                               ; preds = %53
  %62 = load ptr, ptr %4, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %62, i32 0, i32 77
  %64 = load ptr, ptr %63, align 8
  %65 = getelementptr inbounds %struct.jpeg_input_controller, ptr %64, i32 0, i32 5
  %66 = load i32, ptr %65, align 4
  %67 = icmp ne i32 %66, 0
  %68 = xor i1 %67, true
  br label %69

69:                                               ; preds = %61, %53
  %70 = phi i1 [ false, %53 ], [ %68, %61 ]
  br i1 %70, label %71, label %108

71:                                               ; preds = %69
  %72 = load ptr, ptr %4, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %72, i32 0, i32 34
  %74 = load i32, ptr %73, align 4
  %75 = load ptr, ptr %4, align 8
  %76 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %75, i32 0, i32 36
  %77 = load i32, ptr %76, align 4
  %78 = icmp eq i32 %74, %77
  br i1 %78, label %79, label %97

79:                                               ; preds = %71
  %80 = load ptr, ptr %4, align 8
  %81 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %80, i32 0, i32 68
  %82 = load i32, ptr %81, align 4
  %83 = icmp eq i32 %82, 0
  %84 = zext i1 %83 to i64
  %85 = select i1 %83, i32 1, i32 0
  store i32 %85, ptr %45, align 4
  %86 = load ptr, ptr %4, align 8
  %87 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %86, i32 0, i32 35
  %88 = load i32, ptr %87, align 8
  %89 = load ptr, ptr %4, align 8
  %90 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %89, i32 0, i32 37
  %91 = load i32, ptr %90, align 8
  %92 = load i32, ptr %45, align 4
  %93 = add i32 %91, %92
  %94 = icmp ugt i32 %88, %93
  br i1 %94, label %95, label %96

95:                                               ; preds = %79
  br label %108

96:                                               ; preds = %79
  br label %97

97:                                               ; preds = %96, %71
  %98 = load ptr, ptr %4, align 8
  %99 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %98, i32 0, i32 77
  %100 = load ptr, ptr %99, align 8
  %101 = getelementptr inbounds %struct.jpeg_input_controller, ptr %100, i32 0, i32 0
  %102 = load ptr, ptr %101, align 8
  %103 = load ptr, ptr %4, align 8
  %104 = call i32 %102(ptr noundef %103)
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %97
  store i32 0, ptr %3, align 4
  br label %751

107:                                              ; preds = %97
  br label %53, !llvm.loop !26

108:                                              ; preds = %95, %69
  store i32 0, ptr %10, align 4
  %109 = load ptr, ptr %4, align 8
  %110 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %109, i32 0, i32 43
  %111 = load ptr, ptr %110, align 8
  store ptr %111, ptr %20, align 8
  br label %112

112:                                              ; preds = %735, %108
  %113 = load i32, ptr %10, align 4
  %114 = load ptr, ptr %4, align 8
  %115 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %114, i32 0, i32 8
  %116 = load i32, ptr %115, align 8
  %117 = icmp slt i32 %113, %116
  br i1 %117, label %118, label %740

118:                                              ; preds = %112
  %119 = load ptr, ptr %20, align 8
  %120 = getelementptr inbounds %struct.jpeg_component_info, ptr %119, i32 0, i32 12
  %121 = load i32, ptr %120, align 8
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %118
  br label %735

124:                                              ; preds = %118
  %125 = load ptr, ptr %4, align 8
  %126 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %125, i32 0, i32 37
  %127 = load i32, ptr %126, align 8
  %128 = load i32, ptr %7, align 4
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %130, label %136

130:                                              ; preds = %124
  %131 = load ptr, ptr %20, align 8
  %132 = getelementptr inbounds %struct.jpeg_component_info, ptr %131, i32 0, i32 3
  %133 = load i32, ptr %132, align 4
  store i32 %133, ptr %12, align 4
  %134 = load i32, ptr %12, align 4
  %135 = mul nsw i32 %134, 2
  store i32 %135, ptr %13, align 4
  store i32 0, ptr %23, align 4
  br label %152

136:                                              ; preds = %124
  %137 = load ptr, ptr %20, align 8
  %138 = getelementptr inbounds %struct.jpeg_component_info, ptr %137, i32 0, i32 8
  %139 = load i32, ptr %138, align 8
  %140 = load ptr, ptr %20, align 8
  %141 = getelementptr inbounds %struct.jpeg_component_info, ptr %140, i32 0, i32 3
  %142 = load i32, ptr %141, align 4
  %143 = urem i32 %139, %142
  store i32 %143, ptr %12, align 4
  %144 = load i32, ptr %12, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %136
  %147 = load ptr, ptr %20, align 8
  %148 = getelementptr inbounds %struct.jpeg_component_info, ptr %147, i32 0, i32 3
  %149 = load i32, ptr %148, align 4
  store i32 %149, ptr %12, align 4
  br label %150

150:                                              ; preds = %146, %136
  %151 = load i32, ptr %12, align 4
  store i32 %151, ptr %13, align 4
  store i32 1, ptr %23, align 4
  br label %152

152:                                              ; preds = %150, %130
  %153 = load ptr, ptr %4, align 8
  %154 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %153, i32 0, i32 37
  %155 = load i32, ptr %154, align 8
  %156 = icmp ugt i32 %155, 0
  br i1 %156, label %157, label %191

157:                                              ; preds = %152
  %158 = load ptr, ptr %20, align 8
  %159 = getelementptr inbounds %struct.jpeg_component_info, ptr %158, i32 0, i32 3
  %160 = load i32, ptr %159, align 4
  %161 = load i32, ptr %13, align 4
  %162 = add nsw i32 %161, %160
  store i32 %162, ptr %13, align 4
  %163 = load ptr, ptr %4, align 8
  %164 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %163, i32 0, i32 1
  %165 = load ptr, ptr %164, align 8
  %166 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %165, i32 0, i32 8
  %167 = load ptr, ptr %166, align 8
  %168 = load ptr, ptr %4, align 8
  %169 = load ptr, ptr %6, align 8
  %170 = getelementptr inbounds %struct.my_coef_controller, ptr %169, i32 0, i32 5
  %171 = load i32, ptr %10, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [10 x ptr], ptr %170, i64 0, i64 %172
  %174 = load ptr, ptr %173, align 8
  %175 = load ptr, ptr %4, align 8
  %176 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %175, i32 0, i32 37
  %177 = load i32, ptr %176, align 8
  %178 = sub i32 %177, 1
  %179 = load ptr, ptr %20, align 8
  %180 = getelementptr inbounds %struct.jpeg_component_info, ptr %179, i32 0, i32 3
  %181 = load i32, ptr %180, align 4
  %182 = mul i32 %178, %181
  %183 = load i32, ptr %13, align 4
  %184 = call ptr %167(ptr noundef %168, ptr noundef %174, i32 noundef %182, i32 noundef %183, i32 noundef 0)
  store ptr %184, ptr %14, align 8
  %185 = load ptr, ptr %20, align 8
  %186 = getelementptr inbounds %struct.jpeg_component_info, ptr %185, i32 0, i32 3
  %187 = load i32, ptr %186, align 4
  %188 = load ptr, ptr %14, align 8
  %189 = sext i32 %187 to i64
  %190 = getelementptr inbounds ptr, ptr %188, i64 %189
  store ptr %190, ptr %14, align 8
  store i32 0, ptr %22, align 4
  br label %206

191:                                              ; preds = %152
  %192 = load ptr, ptr %4, align 8
  %193 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %192, i32 0, i32 1
  %194 = load ptr, ptr %193, align 8
  %195 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %194, i32 0, i32 8
  %196 = load ptr, ptr %195, align 8
  %197 = load ptr, ptr %4, align 8
  %198 = load ptr, ptr %6, align 8
  %199 = getelementptr inbounds %struct.my_coef_controller, ptr %198, i32 0, i32 5
  %200 = load i32, ptr %10, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [10 x ptr], ptr %199, i64 0, i64 %201
  %203 = load ptr, ptr %202, align 8
  %204 = load i32, ptr %13, align 4
  %205 = call ptr %196(ptr noundef %197, ptr noundef %203, i32 noundef 0, i32 noundef %204, i32 noundef 0)
  store ptr %205, ptr %14, align 8
  store i32 1, ptr %22, align 4
  br label %206

206:                                              ; preds = %191, %157
  %207 = load ptr, ptr %6, align 8
  %208 = getelementptr inbounds %struct.my_coef_controller, ptr %207, i32 0, i32 6
  %209 = load ptr, ptr %208, align 8
  %210 = load i32, ptr %10, align 4
  %211 = mul nsw i32 %210, 6
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i32, ptr %209, i64 %212
  store ptr %213, ptr %25, align 8
  %214 = load ptr, ptr %20, align 8
  %215 = getelementptr inbounds %struct.jpeg_component_info, ptr %214, i32 0, i32 19
  %216 = load ptr, ptr %215, align 8
  store ptr %216, ptr %26, align 8
  %217 = load ptr, ptr %26, align 8
  %218 = getelementptr inbounds %struct.JQUANT_TBL, ptr %217, i32 0, i32 0
  %219 = getelementptr inbounds [64 x i16], ptr %218, i64 0, i64 0
  %220 = load i16, ptr %219, align 4
  %221 = zext i16 %220 to i64
  store i64 %221, ptr %27, align 8
  %222 = load ptr, ptr %26, align 8
  %223 = getelementptr inbounds %struct.JQUANT_TBL, ptr %222, i32 0, i32 0
  %224 = getelementptr inbounds [64 x i16], ptr %223, i64 0, i64 1
  %225 = load i16, ptr %224, align 2
  %226 = zext i16 %225 to i64
  store i64 %226, ptr %28, align 8
  %227 = load ptr, ptr %26, align 8
  %228 = getelementptr inbounds %struct.JQUANT_TBL, ptr %227, i32 0, i32 0
  %229 = getelementptr inbounds [64 x i16], ptr %228, i64 0, i64 8
  %230 = load i16, ptr %229, align 4
  %231 = zext i16 %230 to i64
  store i64 %231, ptr %30, align 8
  %232 = load ptr, ptr %26, align 8
  %233 = getelementptr inbounds %struct.JQUANT_TBL, ptr %232, i32 0, i32 0
  %234 = getelementptr inbounds [64 x i16], ptr %233, i64 0, i64 16
  %235 = load i16, ptr %234, align 4
  %236 = zext i16 %235 to i64
  store i64 %236, ptr %32, align 8
  %237 = load ptr, ptr %26, align 8
  %238 = getelementptr inbounds %struct.JQUANT_TBL, ptr %237, i32 0, i32 0
  %239 = getelementptr inbounds [64 x i16], ptr %238, i64 0, i64 9
  %240 = load i16, ptr %239, align 2
  %241 = zext i16 %240 to i64
  store i64 %241, ptr %31, align 8
  %242 = load ptr, ptr %26, align 8
  %243 = getelementptr inbounds %struct.JQUANT_TBL, ptr %242, i32 0, i32 0
  %244 = getelementptr inbounds [64 x i16], ptr %243, i64 0, i64 2
  %245 = load i16, ptr %244, align 4
  %246 = zext i16 %245 to i64
  store i64 %246, ptr %29, align 8
  %247 = load ptr, ptr %4, align 8
  %248 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %247, i32 0, i32 80
  %249 = load ptr, ptr %248, align 8
  %250 = getelementptr inbounds %struct.jpeg_inverse_dct, ptr %249, i32 0, i32 1
  %251 = load i32, ptr %10, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [10 x ptr], ptr %250, i64 0, i64 %252
  %254 = load ptr, ptr %253, align 8
  store ptr %254, ptr %21, align 8
  %255 = load ptr, ptr %5, align 8
  %256 = load i32, ptr %10, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds ptr, ptr %255, i64 %257
  %259 = load ptr, ptr %258, align 8
  store ptr %259, ptr %18, align 8
  store i32 0, ptr %11, align 4
  br label %260

260:                                              ; preds = %731, %206
  %261 = load i32, ptr %11, align 4
  %262 = load i32, ptr %12, align 4
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %264, label %734

264:                                              ; preds = %260
  %265 = load ptr, ptr %14, align 8
  %266 = load i32, ptr %11, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds ptr, ptr %265, i64 %267
  %269 = load ptr, ptr %268, align 8
  store ptr %269, ptr %15, align 8
  %270 = load i32, ptr %22, align 4
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %272, label %277

272:                                              ; preds = %264
  %273 = load i32, ptr %11, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %272
  %276 = load ptr, ptr %15, align 8
  store ptr %276, ptr %16, align 8
  br label %284

277:                                              ; preds = %272, %264
  %278 = load ptr, ptr %14, align 8
  %279 = load i32, ptr %11, align 4
  %280 = sub nsw i32 %279, 1
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds ptr, ptr %278, i64 %281
  %283 = load ptr, ptr %282, align 8
  store ptr %283, ptr %16, align 8
  br label %284

284:                                              ; preds = %277, %275
  %285 = load i32, ptr %23, align 4
  %286 = icmp ne i32 %285, 0
  br i1 %286, label %287, label %294

287:                                              ; preds = %284
  %288 = load i32, ptr %11, align 4
  %289 = load i32, ptr %12, align 4
  %290 = sub nsw i32 %289, 1
  %291 = icmp eq i32 %288, %290
  br i1 %291, label %292, label %294

292:                                              ; preds = %287
  %293 = load ptr, ptr %15, align 8
  store ptr %293, ptr %17, align 8
  br label %301

294:                                              ; preds = %287, %284
  %295 = load ptr, ptr %14, align 8
  %296 = load i32, ptr %11, align 4
  %297 = add nsw i32 %296, 1
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds ptr, ptr %295, i64 %298
  %300 = load ptr, ptr %299, align 8
  store ptr %300, ptr %17, align 8
  br label %301

301:                                              ; preds = %294, %292
  %302 = load ptr, ptr %16, align 8
  %303 = getelementptr inbounds [64 x i16], ptr %302, i64 0
  %304 = getelementptr inbounds [64 x i16], ptr %303, i64 0, i64 0
  %305 = load i16, ptr %304, align 2
  %306 = sext i16 %305 to i32
  store i32 %306, ptr %36, align 4
  store i32 %306, ptr %35, align 4
  store i32 %306, ptr %34, align 4
  %307 = load ptr, ptr %15, align 8
  %308 = getelementptr inbounds [64 x i16], ptr %307, i64 0
  %309 = getelementptr inbounds [64 x i16], ptr %308, i64 0, i64 0
  %310 = load i16, ptr %309, align 2
  %311 = sext i16 %310 to i32
  store i32 %311, ptr %39, align 4
  store i32 %311, ptr %38, align 4
  store i32 %311, ptr %37, align 4
  %312 = load ptr, ptr %17, align 8
  %313 = getelementptr inbounds [64 x i16], ptr %312, i64 0
  %314 = getelementptr inbounds [64 x i16], ptr %313, i64 0, i64 0
  %315 = load i16, ptr %314, align 2
  %316 = sext i16 %315 to i32
  store i32 %316, ptr %42, align 4
  store i32 %316, ptr %41, align 4
  store i32 %316, ptr %40, align 4
  store i32 0, ptr %19, align 4
  %317 = load ptr, ptr %20, align 8
  %318 = getelementptr inbounds %struct.jpeg_component_info, ptr %317, i32 0, i32 7
  %319 = load i32, ptr %318, align 4
  %320 = sub i32 %319, 1
  store i32 %320, ptr %9, align 4
  store i32 0, ptr %8, align 4
  br label %321

321:                                              ; preds = %721, %301
  %322 = load i32, ptr %8, align 4
  %323 = load i32, ptr %9, align 4
  %324 = icmp ule i32 %322, %323
  br i1 %324, label %325, label %724

325:                                              ; preds = %321
  %326 = load ptr, ptr %15, align 8
  %327 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 0
  call void @jcopy_block_row(ptr noundef %326, ptr noundef %327, i32 noundef 1)
  %328 = load i32, ptr %8, align 4
  %329 = load i32, ptr %9, align 4
  %330 = icmp ult i32 %328, %329
  br i1 %330, label %331, label %347

331:                                              ; preds = %325
  %332 = load ptr, ptr %16, align 8
  %333 = getelementptr inbounds [64 x i16], ptr %332, i64 1
  %334 = getelementptr inbounds [64 x i16], ptr %333, i64 0, i64 0
  %335 = load i16, ptr %334, align 2
  %336 = sext i16 %335 to i32
  store i32 %336, ptr %36, align 4
  %337 = load ptr, ptr %15, align 8
  %338 = getelementptr inbounds [64 x i16], ptr %337, i64 1
  %339 = getelementptr inbounds [64 x i16], ptr %338, i64 0, i64 0
  %340 = load i16, ptr %339, align 2
  %341 = sext i16 %340 to i32
  store i32 %341, ptr %39, align 4
  %342 = load ptr, ptr %17, align 8
  %343 = getelementptr inbounds [64 x i16], ptr %342, i64 1
  %344 = getelementptr inbounds [64 x i16], ptr %343, i64 0, i64 0
  %345 = load i16, ptr %344, align 2
  %346 = sext i16 %345 to i32
  store i32 %346, ptr %42, align 4
  br label %347

347:                                              ; preds = %331, %325
  %348 = load ptr, ptr %25, align 8
  %349 = getelementptr inbounds i32, ptr %348, i64 1
  %350 = load i32, ptr %349, align 4
  store i32 %350, ptr %43, align 4
  %351 = icmp ne i32 %350, 0
  br i1 %351, label %352, label %415

352:                                              ; preds = %347
  %353 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 1
  %354 = load i16, ptr %353, align 2
  %355 = sext i16 %354 to i32
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %415

357:                                              ; preds = %352
  %358 = load i64, ptr %27, align 8
  %359 = mul nsw i64 36, %358
  %360 = load i32, ptr %37, align 4
  %361 = load i32, ptr %39, align 4
  %362 = sub nsw i32 %360, %361
  %363 = sext i32 %362 to i64
  %364 = mul nsw i64 %359, %363
  store i64 %364, ptr %33, align 8
  %365 = load i64, ptr %33, align 8
  %366 = icmp sge i64 %365, 0
  br i1 %366, label %367, label %388

367:                                              ; preds = %357
  %368 = load i64, ptr %28, align 8
  %369 = shl i64 %368, 7
  %370 = load i64, ptr %33, align 8
  %371 = add nsw i64 %369, %370
  %372 = load i64, ptr %28, align 8
  %373 = shl i64 %372, 8
  %374 = sdiv i64 %371, %373
  %375 = trunc i64 %374 to i32
  store i32 %375, ptr %44, align 4
  %376 = load i32, ptr %43, align 4
  %377 = icmp sgt i32 %376, 0
  br i1 %377, label %378, label %387

378:                                              ; preds = %367
  %379 = load i32, ptr %44, align 4
  %380 = load i32, ptr %43, align 4
  %381 = shl i32 1, %380
  %382 = icmp sge i32 %379, %381
  br i1 %382, label %383, label %387

383:                                              ; preds = %378
  %384 = load i32, ptr %43, align 4
  %385 = shl i32 1, %384
  %386 = sub nsw i32 %385, 1
  store i32 %386, ptr %44, align 4
  br label %387

387:                                              ; preds = %383, %378, %367
  br label %411

388:                                              ; preds = %357
  %389 = load i64, ptr %28, align 8
  %390 = shl i64 %389, 7
  %391 = load i64, ptr %33, align 8
  %392 = sub nsw i64 %390, %391
  %393 = load i64, ptr %28, align 8
  %394 = shl i64 %393, 8
  %395 = sdiv i64 %392, %394
  %396 = trunc i64 %395 to i32
  store i32 %396, ptr %44, align 4
  %397 = load i32, ptr %43, align 4
  %398 = icmp sgt i32 %397, 0
  br i1 %398, label %399, label %408

399:                                              ; preds = %388
  %400 = load i32, ptr %44, align 4
  %401 = load i32, ptr %43, align 4
  %402 = shl i32 1, %401
  %403 = icmp sge i32 %400, %402
  br i1 %403, label %404, label %408

404:                                              ; preds = %399
  %405 = load i32, ptr %43, align 4
  %406 = shl i32 1, %405
  %407 = sub nsw i32 %406, 1
  store i32 %407, ptr %44, align 4
  br label %408

408:                                              ; preds = %404, %399, %388
  %409 = load i32, ptr %44, align 4
  %410 = sub nsw i32 0, %409
  store i32 %410, ptr %44, align 4
  br label %411

411:                                              ; preds = %408, %387
  %412 = load i32, ptr %44, align 4
  %413 = trunc i32 %412 to i16
  %414 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 1
  store i16 %413, ptr %414, align 2
  br label %415

415:                                              ; preds = %411, %352, %347
  %416 = load ptr, ptr %25, align 8
  %417 = getelementptr inbounds i32, ptr %416, i64 2
  %418 = load i32, ptr %417, align 4
  store i32 %418, ptr %43, align 4
  %419 = icmp ne i32 %418, 0
  br i1 %419, label %420, label %483

420:                                              ; preds = %415
  %421 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 8
  %422 = load i16, ptr %421, align 16
  %423 = sext i16 %422 to i32
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %483

425:                                              ; preds = %420
  %426 = load i64, ptr %27, align 8
  %427 = mul nsw i64 36, %426
  %428 = load i32, ptr %35, align 4
  %429 = load i32, ptr %41, align 4
  %430 = sub nsw i32 %428, %429
  %431 = sext i32 %430 to i64
  %432 = mul nsw i64 %427, %431
  store i64 %432, ptr %33, align 8
  %433 = load i64, ptr %33, align 8
  %434 = icmp sge i64 %433, 0
  br i1 %434, label %435, label %456

435:                                              ; preds = %425
  %436 = load i64, ptr %30, align 8
  %437 = shl i64 %436, 7
  %438 = load i64, ptr %33, align 8
  %439 = add nsw i64 %437, %438
  %440 = load i64, ptr %30, align 8
  %441 = shl i64 %440, 8
  %442 = sdiv i64 %439, %441
  %443 = trunc i64 %442 to i32
  store i32 %443, ptr %44, align 4
  %444 = load i32, ptr %43, align 4
  %445 = icmp sgt i32 %444, 0
  br i1 %445, label %446, label %455

446:                                              ; preds = %435
  %447 = load i32, ptr %44, align 4
  %448 = load i32, ptr %43, align 4
  %449 = shl i32 1, %448
  %450 = icmp sge i32 %447, %449
  br i1 %450, label %451, label %455

451:                                              ; preds = %446
  %452 = load i32, ptr %43, align 4
  %453 = shl i32 1, %452
  %454 = sub nsw i32 %453, 1
  store i32 %454, ptr %44, align 4
  br label %455

455:                                              ; preds = %451, %446, %435
  br label %479

456:                                              ; preds = %425
  %457 = load i64, ptr %30, align 8
  %458 = shl i64 %457, 7
  %459 = load i64, ptr %33, align 8
  %460 = sub nsw i64 %458, %459
  %461 = load i64, ptr %30, align 8
  %462 = shl i64 %461, 8
  %463 = sdiv i64 %460, %462
  %464 = trunc i64 %463 to i32
  store i32 %464, ptr %44, align 4
  %465 = load i32, ptr %43, align 4
  %466 = icmp sgt i32 %465, 0
  br i1 %466, label %467, label %476

467:                                              ; preds = %456
  %468 = load i32, ptr %44, align 4
  %469 = load i32, ptr %43, align 4
  %470 = shl i32 1, %469
  %471 = icmp sge i32 %468, %470
  br i1 %471, label %472, label %476

472:                                              ; preds = %467
  %473 = load i32, ptr %43, align 4
  %474 = shl i32 1, %473
  %475 = sub nsw i32 %474, 1
  store i32 %475, ptr %44, align 4
  br label %476

476:                                              ; preds = %472, %467, %456
  %477 = load i32, ptr %44, align 4
  %478 = sub nsw i32 0, %477
  store i32 %478, ptr %44, align 4
  br label %479

479:                                              ; preds = %476, %455
  %480 = load i32, ptr %44, align 4
  %481 = trunc i32 %480 to i16
  %482 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 8
  store i16 %481, ptr %482, align 16
  br label %483

483:                                              ; preds = %479, %420, %415
  %484 = load ptr, ptr %25, align 8
  %485 = getelementptr inbounds i32, ptr %484, i64 3
  %486 = load i32, ptr %485, align 4
  store i32 %486, ptr %43, align 4
  %487 = icmp ne i32 %486, 0
  br i1 %487, label %488, label %554

488:                                              ; preds = %483
  %489 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 16
  %490 = load i16, ptr %489, align 16
  %491 = sext i16 %490 to i32
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %493, label %554

493:                                              ; preds = %488
  %494 = load i64, ptr %27, align 8
  %495 = mul nsw i64 9, %494
  %496 = load i32, ptr %35, align 4
  %497 = load i32, ptr %41, align 4
  %498 = add nsw i32 %496, %497
  %499 = load i32, ptr %38, align 4
  %500 = mul nsw i32 2, %499
  %501 = sub nsw i32 %498, %500
  %502 = sext i32 %501 to i64
  %503 = mul nsw i64 %495, %502
  store i64 %503, ptr %33, align 8
  %504 = load i64, ptr %33, align 8
  %505 = icmp sge i64 %504, 0
  br i1 %505, label %506, label %527

506:                                              ; preds = %493
  %507 = load i64, ptr %32, align 8
  %508 = shl i64 %507, 7
  %509 = load i64, ptr %33, align 8
  %510 = add nsw i64 %508, %509
  %511 = load i64, ptr %32, align 8
  %512 = shl i64 %511, 8
  %513 = sdiv i64 %510, %512
  %514 = trunc i64 %513 to i32
  store i32 %514, ptr %44, align 4
  %515 = load i32, ptr %43, align 4
  %516 = icmp sgt i32 %515, 0
  br i1 %516, label %517, label %526

517:                                              ; preds = %506
  %518 = load i32, ptr %44, align 4
  %519 = load i32, ptr %43, align 4
  %520 = shl i32 1, %519
  %521 = icmp sge i32 %518, %520
  br i1 %521, label %522, label %526

522:                                              ; preds = %517
  %523 = load i32, ptr %43, align 4
  %524 = shl i32 1, %523
  %525 = sub nsw i32 %524, 1
  store i32 %525, ptr %44, align 4
  br label %526

526:                                              ; preds = %522, %517, %506
  br label %550

527:                                              ; preds = %493
  %528 = load i64, ptr %32, align 8
  %529 = shl i64 %528, 7
  %530 = load i64, ptr %33, align 8
  %531 = sub nsw i64 %529, %530
  %532 = load i64, ptr %32, align 8
  %533 = shl i64 %532, 8
  %534 = sdiv i64 %531, %533
  %535 = trunc i64 %534 to i32
  store i32 %535, ptr %44, align 4
  %536 = load i32, ptr %43, align 4
  %537 = icmp sgt i32 %536, 0
  br i1 %537, label %538, label %547

538:                                              ; preds = %527
  %539 = load i32, ptr %44, align 4
  %540 = load i32, ptr %43, align 4
  %541 = shl i32 1, %540
  %542 = icmp sge i32 %539, %541
  br i1 %542, label %543, label %547

543:                                              ; preds = %538
  %544 = load i32, ptr %43, align 4
  %545 = shl i32 1, %544
  %546 = sub nsw i32 %545, 1
  store i32 %546, ptr %44, align 4
  br label %547

547:                                              ; preds = %543, %538, %527
  %548 = load i32, ptr %44, align 4
  %549 = sub nsw i32 0, %548
  store i32 %549, ptr %44, align 4
  br label %550

550:                                              ; preds = %547, %526
  %551 = load i32, ptr %44, align 4
  %552 = trunc i32 %551 to i16
  %553 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 16
  store i16 %552, ptr %553, align 16
  br label %554

554:                                              ; preds = %550, %488, %483
  %555 = load ptr, ptr %25, align 8
  %556 = getelementptr inbounds i32, ptr %555, i64 4
  %557 = load i32, ptr %556, align 4
  store i32 %557, ptr %43, align 4
  %558 = icmp ne i32 %557, 0
  br i1 %558, label %559, label %626

559:                                              ; preds = %554
  %560 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 9
  %561 = load i16, ptr %560, align 2
  %562 = sext i16 %561 to i32
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %626

564:                                              ; preds = %559
  %565 = load i64, ptr %27, align 8
  %566 = mul nsw i64 5, %565
  %567 = load i32, ptr %34, align 4
  %568 = load i32, ptr %36, align 4
  %569 = sub nsw i32 %567, %568
  %570 = load i32, ptr %40, align 4
  %571 = sub nsw i32 %569, %570
  %572 = load i32, ptr %42, align 4
  %573 = add nsw i32 %571, %572
  %574 = sext i32 %573 to i64
  %575 = mul nsw i64 %566, %574
  store i64 %575, ptr %33, align 8
  %576 = load i64, ptr %33, align 8
  %577 = icmp sge i64 %576, 0
  br i1 %577, label %578, label %599

578:                                              ; preds = %564
  %579 = load i64, ptr %31, align 8
  %580 = shl i64 %579, 7
  %581 = load i64, ptr %33, align 8
  %582 = add nsw i64 %580, %581
  %583 = load i64, ptr %31, align 8
  %584 = shl i64 %583, 8
  %585 = sdiv i64 %582, %584
  %586 = trunc i64 %585 to i32
  store i32 %586, ptr %44, align 4
  %587 = load i32, ptr %43, align 4
  %588 = icmp sgt i32 %587, 0
  br i1 %588, label %589, label %598

589:                                              ; preds = %578
  %590 = load i32, ptr %44, align 4
  %591 = load i32, ptr %43, align 4
  %592 = shl i32 1, %591
  %593 = icmp sge i32 %590, %592
  br i1 %593, label %594, label %598

594:                                              ; preds = %589
  %595 = load i32, ptr %43, align 4
  %596 = shl i32 1, %595
  %597 = sub nsw i32 %596, 1
  store i32 %597, ptr %44, align 4
  br label %598

598:                                              ; preds = %594, %589, %578
  br label %622

599:                                              ; preds = %564
  %600 = load i64, ptr %31, align 8
  %601 = shl i64 %600, 7
  %602 = load i64, ptr %33, align 8
  %603 = sub nsw i64 %601, %602
  %604 = load i64, ptr %31, align 8
  %605 = shl i64 %604, 8
  %606 = sdiv i64 %603, %605
  %607 = trunc i64 %606 to i32
  store i32 %607, ptr %44, align 4
  %608 = load i32, ptr %43, align 4
  %609 = icmp sgt i32 %608, 0
  br i1 %609, label %610, label %619

610:                                              ; preds = %599
  %611 = load i32, ptr %44, align 4
  %612 = load i32, ptr %43, align 4
  %613 = shl i32 1, %612
  %614 = icmp sge i32 %611, %613
  br i1 %614, label %615, label %619

615:                                              ; preds = %610
  %616 = load i32, ptr %43, align 4
  %617 = shl i32 1, %616
  %618 = sub nsw i32 %617, 1
  store i32 %618, ptr %44, align 4
  br label %619

619:                                              ; preds = %615, %610, %599
  %620 = load i32, ptr %44, align 4
  %621 = sub nsw i32 0, %620
  store i32 %621, ptr %44, align 4
  br label %622

622:                                              ; preds = %619, %598
  %623 = load i32, ptr %44, align 4
  %624 = trunc i32 %623 to i16
  %625 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 9
  store i16 %624, ptr %625, align 2
  br label %626

626:                                              ; preds = %622, %559, %554
  %627 = load ptr, ptr %25, align 8
  %628 = getelementptr inbounds i32, ptr %627, i64 5
  %629 = load i32, ptr %628, align 4
  store i32 %629, ptr %43, align 4
  %630 = icmp ne i32 %629, 0
  br i1 %630, label %631, label %697

631:                                              ; preds = %626
  %632 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 2
  %633 = load i16, ptr %632, align 4
  %634 = sext i16 %633 to i32
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %636, label %697

636:                                              ; preds = %631
  %637 = load i64, ptr %27, align 8
  %638 = mul nsw i64 9, %637
  %639 = load i32, ptr %37, align 4
  %640 = load i32, ptr %39, align 4
  %641 = add nsw i32 %639, %640
  %642 = load i32, ptr %38, align 4
  %643 = mul nsw i32 2, %642
  %644 = sub nsw i32 %641, %643
  %645 = sext i32 %644 to i64
  %646 = mul nsw i64 %638, %645
  store i64 %646, ptr %33, align 8
  %647 = load i64, ptr %33, align 8
  %648 = icmp sge i64 %647, 0
  br i1 %648, label %649, label %670

649:                                              ; preds = %636
  %650 = load i64, ptr %29, align 8
  %651 = shl i64 %650, 7
  %652 = load i64, ptr %33, align 8
  %653 = add nsw i64 %651, %652
  %654 = load i64, ptr %29, align 8
  %655 = shl i64 %654, 8
  %656 = sdiv i64 %653, %655
  %657 = trunc i64 %656 to i32
  store i32 %657, ptr %44, align 4
  %658 = load i32, ptr %43, align 4
  %659 = icmp sgt i32 %658, 0
  br i1 %659, label %660, label %669

660:                                              ; preds = %649
  %661 = load i32, ptr %44, align 4
  %662 = load i32, ptr %43, align 4
  %663 = shl i32 1, %662
  %664 = icmp sge i32 %661, %663
  br i1 %664, label %665, label %669

665:                                              ; preds = %660
  %666 = load i32, ptr %43, align 4
  %667 = shl i32 1, %666
  %668 = sub nsw i32 %667, 1
  store i32 %668, ptr %44, align 4
  br label %669

669:                                              ; preds = %665, %660, %649
  br label %693

670:                                              ; preds = %636
  %671 = load i64, ptr %29, align 8
  %672 = shl i64 %671, 7
  %673 = load i64, ptr %33, align 8
  %674 = sub nsw i64 %672, %673
  %675 = load i64, ptr %29, align 8
  %676 = shl i64 %675, 8
  %677 = sdiv i64 %674, %676
  %678 = trunc i64 %677 to i32
  store i32 %678, ptr %44, align 4
  %679 = load i32, ptr %43, align 4
  %680 = icmp sgt i32 %679, 0
  br i1 %680, label %681, label %690

681:                                              ; preds = %670
  %682 = load i32, ptr %44, align 4
  %683 = load i32, ptr %43, align 4
  %684 = shl i32 1, %683
  %685 = icmp sge i32 %682, %684
  br i1 %685, label %686, label %690

686:                                              ; preds = %681
  %687 = load i32, ptr %43, align 4
  %688 = shl i32 1, %687
  %689 = sub nsw i32 %688, 1
  store i32 %689, ptr %44, align 4
  br label %690

690:                                              ; preds = %686, %681, %670
  %691 = load i32, ptr %44, align 4
  %692 = sub nsw i32 0, %691
  store i32 %692, ptr %44, align 4
  br label %693

693:                                              ; preds = %690, %669
  %694 = load i32, ptr %44, align 4
  %695 = trunc i32 %694 to i16
  %696 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 2
  store i16 %695, ptr %696, align 4
  br label %697

697:                                              ; preds = %693, %631, %626
  %698 = load ptr, ptr %21, align 8
  %699 = load ptr, ptr %4, align 8
  %700 = load ptr, ptr %20, align 8
  %701 = getelementptr inbounds [64 x i16], ptr %24, i64 0, i64 0
  %702 = load ptr, ptr %18, align 8
  %703 = load i32, ptr %19, align 4
  call void %698(ptr noundef %699, ptr noundef %700, ptr noundef %701, ptr noundef %702, i32 noundef %703)
  %704 = load i32, ptr %35, align 4
  store i32 %704, ptr %34, align 4
  %705 = load i32, ptr %36, align 4
  store i32 %705, ptr %35, align 4
  %706 = load i32, ptr %38, align 4
  store i32 %706, ptr %37, align 4
  %707 = load i32, ptr %39, align 4
  store i32 %707, ptr %38, align 4
  %708 = load i32, ptr %41, align 4
  store i32 %708, ptr %40, align 4
  %709 = load i32, ptr %42, align 4
  store i32 %709, ptr %41, align 4
  %710 = load ptr, ptr %15, align 8
  %711 = getelementptr inbounds [64 x i16], ptr %710, i32 1
  store ptr %711, ptr %15, align 8
  %712 = load ptr, ptr %16, align 8
  %713 = getelementptr inbounds [64 x i16], ptr %712, i32 1
  store ptr %713, ptr %16, align 8
  %714 = load ptr, ptr %17, align 8
  %715 = getelementptr inbounds [64 x i16], ptr %714, i32 1
  store ptr %715, ptr %17, align 8
  %716 = load ptr, ptr %20, align 8
  %717 = getelementptr inbounds %struct.jpeg_component_info, ptr %716, i32 0, i32 9
  %718 = load i32, ptr %717, align 4
  %719 = load i32, ptr %19, align 4
  %720 = add i32 %719, %718
  store i32 %720, ptr %19, align 4
  br label %721

721:                                              ; preds = %697
  %722 = load i32, ptr %8, align 4
  %723 = add i32 %722, 1
  store i32 %723, ptr %8, align 4
  br label %321, !llvm.loop !27

724:                                              ; preds = %321
  %725 = load ptr, ptr %20, align 8
  %726 = getelementptr inbounds %struct.jpeg_component_info, ptr %725, i32 0, i32 9
  %727 = load i32, ptr %726, align 4
  %728 = load ptr, ptr %18, align 8
  %729 = sext i32 %727 to i64
  %730 = getelementptr inbounds ptr, ptr %728, i64 %729
  store ptr %730, ptr %18, align 8
  br label %731

731:                                              ; preds = %724
  %732 = load i32, ptr %11, align 4
  %733 = add nsw i32 %732, 1
  store i32 %733, ptr %11, align 4
  br label %260, !llvm.loop !28

734:                                              ; preds = %260
  br label %735

735:                                              ; preds = %734, %123
  %736 = load i32, ptr %10, align 4
  %737 = add nsw i32 %736, 1
  store i32 %737, ptr %10, align 4
  %738 = load ptr, ptr %20, align 8
  %739 = getelementptr inbounds %struct.jpeg_component_info, ptr %738, i32 1
  store ptr %739, ptr %20, align 8
  br label %112, !llvm.loop !29

740:                                              ; preds = %112
  %741 = load ptr, ptr %4, align 8
  %742 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %741, i32 0, i32 37
  %743 = load i32, ptr %742, align 8
  %744 = add i32 %743, 1
  store i32 %744, ptr %742, align 8
  %745 = load ptr, ptr %4, align 8
  %746 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %745, i32 0, i32 60
  %747 = load i32, ptr %746, align 8
  %748 = icmp ult i32 %744, %747
  br i1 %748, label %749, label %750

749:                                              ; preds = %740
  store i32 3, ptr %3, align 4
  br label %751

750:                                              ; preds = %740
  store i32 4, ptr %3, align 4
  br label %751

751:                                              ; preds = %750, %749, %106
  %752 = load i32, ptr %3, align 4
  ret i32 %752
}

declare void @jcopy_block_row(ptr noundef, ptr noundef, i32 noundef) #1

declare void @jzero_far(ptr noundef, i64 noundef) #1

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !7}
!20 = distinct !{!20, !7}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !7}
!23 = distinct !{!23, !7}
!24 = distinct !{!24, !7}
!25 = distinct !{!25, !7}
!26 = distinct !{!26, !7}
!27 = distinct !{!27, !7}
!28 = distinct !{!28, !7}
!29 = distinct !{!29, !7}
