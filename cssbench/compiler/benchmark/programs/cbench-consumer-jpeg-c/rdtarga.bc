; ModuleID = 'rdtarga.bc'
source_filename = "rdtarga.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_compress_struct = type { ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32, double, i32, i32, i32, ptr, [4 x ptr], [4 x ptr], [4 x ptr], [16 x i8], [16 x i8], [16 x i8], i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x ptr], i32, i32, i32, [10 x i32], i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jpeg_memory_mgr = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64 }
%struct._tga_source_struct = type { %struct.cjpeg_source_struct, ptr, ptr, ptr, i32, ptr, [4 x i8], i32, i32, i32, ptr }
%struct.cjpeg_source_struct = type { ptr, ptr, ptr, ptr, ptr, i32 }
%struct.jpeg_error_mgr = type { ptr, ptr, ptr, ptr, ptr, i32, %union.anon, i32, i64, ptr, i32, ptr, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.cdjpeg_progress_mgr = type { %struct.jpeg_progress_mgr, i32, i32, i32 }
%struct.jpeg_progress_mgr = type { ptr, i64, i64, i32, i32 }

@c5to8bits = internal constant [32 x i8] c"\00\08\10\19!)1:BJRZcks{\84\8C\94\9C\A5\AD\B5\BD\C5\CE\D6\DE\E6\EF\F7\FF", align 16

; Function Attrs: noinline nounwind uwtable
define dso_local ptr @jinit_read_targa(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %4, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %6, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %2, align 8
  %10 = call ptr %8(ptr noundef %9, i32 noundef 1, i64 noundef 112)
  store ptr %10, ptr %3, align 8
  %11 = load ptr, ptr %2, align 8
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct._tga_source_struct, ptr %12, i32 0, i32 1
  store ptr %11, ptr %13, align 8
  %14 = load ptr, ptr %3, align 8
  %15 = getelementptr inbounds %struct._tga_source_struct, ptr %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %15, i32 0, i32 0
  store ptr @start_input_tga, ptr %16, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = getelementptr inbounds %struct._tga_source_struct, ptr %17, i32 0, i32 0
  %19 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %18, i32 0, i32 2
  store ptr @finish_input_tga, ptr %19, align 8
  %20 = load ptr, ptr %3, align 8
  ret ptr %20
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_input_tga(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca [18 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %18 = load ptr, ptr %4, align 8
  store ptr %18, ptr %5, align 8
  %19 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 0
  %20 = load ptr, ptr %5, align 8
  %21 = getelementptr inbounds %struct._tga_source_struct, ptr %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %21, i32 0, i32 3
  %23 = load ptr, ptr %22, align 8
  %24 = call i64 @fread(ptr noundef %19, i64 noundef 1, i64 noundef 18, ptr noundef %23)
  %25 = icmp eq i64 %24, 18
  br i1 %25, label %37, label %26

26:                                               ; preds = %2
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %27, i32 0, i32 0
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %29, i32 0, i32 5
  store i32 42, ptr %30, align 8
  %31 = load ptr, ptr %3, align 8
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %31, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %33, i32 0, i32 0
  %35 = load ptr, ptr %34, align 8
  %36 = load ptr, ptr %3, align 8
  call void %35(ptr noundef %36)
  br label %37

37:                                               ; preds = %26, %2
  %38 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 16
  %39 = load i8, ptr %38, align 16
  %40 = zext i8 %39 to i32
  %41 = icmp eq i32 %40, 15
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 16
  store i8 16, ptr %43, align 16
  br label %44

44:                                               ; preds = %42, %37
  %45 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 0
  %46 = load i8, ptr %45, align 16
  %47 = zext i8 %46 to i32
  store i32 %47, ptr %7, align 4
  %48 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 1
  %49 = load i8, ptr %48, align 1
  %50 = zext i8 %49 to i32
  store i32 %50, ptr %8, align 4
  %51 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 2
  %52 = load i8, ptr %51, align 2
  %53 = zext i8 %52 to i32
  store i32 %53, ptr %9, align 4
  %54 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 5
  %55 = load i8, ptr %54, align 1
  %56 = zext i8 %55 to i32
  %57 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 6
  %58 = load i8, ptr %57, align 2
  %59 = zext i8 %58 to i32
  %60 = shl i32 %59, 8
  %61 = add i32 %56, %60
  store i32 %61, ptr %15, align 4
  %62 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 12
  %63 = load i8, ptr %62, align 4
  %64 = zext i8 %63 to i32
  %65 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 13
  %66 = load i8, ptr %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl i32 %67, 8
  %69 = add i32 %64, %68
  store i32 %69, ptr %13, align 4
  %70 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 14
  %71 = load i8, ptr %70, align 2
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 15
  %74 = load i8, ptr %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl i32 %75, 8
  %77 = add i32 %72, %76
  store i32 %77, ptr %14, align 4
  %78 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 16
  %79 = load i8, ptr %78, align 16
  %80 = zext i8 %79 to i32
  %81 = ashr i32 %80, 3
  %82 = load ptr, ptr %5, align 8
  %83 = getelementptr inbounds %struct._tga_source_struct, ptr %82, i32 0, i32 7
  store i32 %81, ptr %83, align 4
  %84 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 17
  %85 = load i8, ptr %84, align 1
  %86 = zext i8 %85 to i32
  store i32 %86, ptr %10, align 4
  %87 = load i32, ptr %10, align 4
  %88 = and i32 %87, 32
  %89 = icmp eq i32 %88, 0
  %90 = zext i1 %89 to i32
  store i32 %90, ptr %16, align 4
  %91 = load i32, ptr %10, align 4
  %92 = ashr i32 %91, 6
  store i32 %92, ptr %11, align 4
  %93 = load i32, ptr %8, align 4
  %94 = icmp sgt i32 %93, 1
  br i1 %94, label %114, label %95

95:                                               ; preds = %44
  %96 = load ptr, ptr %5, align 8
  %97 = getelementptr inbounds %struct._tga_source_struct, ptr %96, i32 0, i32 7
  %98 = load i32, ptr %97, align 4
  %99 = icmp slt i32 %98, 1
  br i1 %99, label %114, label %100

100:                                              ; preds = %95
  %101 = load ptr, ptr %5, align 8
  %102 = getelementptr inbounds %struct._tga_source_struct, ptr %101, i32 0, i32 7
  %103 = load i32, ptr %102, align 4
  %104 = icmp sgt i32 %103, 4
  br i1 %104, label %114, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 16
  %107 = load i8, ptr %106, align 16
  %108 = zext i8 %107 to i32
  %109 = and i32 %108, 7
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = load i32, ptr %11, align 4
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %125

114:                                              ; preds = %111, %105, %100, %95, %44
  %115 = load ptr, ptr %3, align 8
  %116 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %115, i32 0, i32 0
  %117 = load ptr, ptr %116, align 8
  %118 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %117, i32 0, i32 5
  store i32 1033, ptr %118, align 8
  %119 = load ptr, ptr %3, align 8
  %120 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %119, i32 0, i32 0
  %121 = load ptr, ptr %120, align 8
  %122 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %121, i32 0, i32 0
  %123 = load ptr, ptr %122, align 8
  %124 = load ptr, ptr %3, align 8
  call void %123(ptr noundef %124)
  br label %125

125:                                              ; preds = %114, %111
  %126 = load i32, ptr %9, align 4
  %127 = icmp sgt i32 %126, 8
  br i1 %127, label %128, label %137

128:                                              ; preds = %125
  %129 = load ptr, ptr %5, align 8
  %130 = getelementptr inbounds %struct._tga_source_struct, ptr %129, i32 0, i32 5
  store ptr @read_rle_pixel, ptr %130, align 8
  %131 = load ptr, ptr %5, align 8
  %132 = getelementptr inbounds %struct._tga_source_struct, ptr %131, i32 0, i32 9
  store i32 0, ptr %132, align 4
  %133 = load ptr, ptr %5, align 8
  %134 = getelementptr inbounds %struct._tga_source_struct, ptr %133, i32 0, i32 8
  store i32 0, ptr %134, align 8
  %135 = load i32, ptr %9, align 4
  %136 = sub nsw i32 %135, 8
  store i32 %136, ptr %9, align 4
  br label %140

137:                                              ; preds = %125
  %138 = load ptr, ptr %5, align 8
  %139 = getelementptr inbounds %struct._tga_source_struct, ptr %138, i32 0, i32 5
  store ptr @read_non_rle_pixel, ptr %139, align 8
  br label %140

140:                                              ; preds = %137, %128
  store i32 3, ptr %12, align 4
  %141 = load ptr, ptr %3, align 8
  %142 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %141, i32 0, i32 9
  store i32 2, ptr %142, align 4
  %143 = load i32, ptr %9, align 4
  switch i32 %143, label %280 [
    i32 1, label %144
    i32 2, label %189
    i32 3, label %236
  ]

144:                                              ; preds = %140
  %145 = load ptr, ptr %5, align 8
  %146 = getelementptr inbounds %struct._tga_source_struct, ptr %145, i32 0, i32 7
  %147 = load i32, ptr %146, align 4
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %144
  %150 = load i32, ptr %8, align 4
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %155

152:                                              ; preds = %149
  %153 = load ptr, ptr %5, align 8
  %154 = getelementptr inbounds %struct._tga_source_struct, ptr %153, i32 0, i32 10
  store ptr @get_8bit_row, ptr %154, align 8
  br label %166

155:                                              ; preds = %149, %144
  %156 = load ptr, ptr %3, align 8
  %157 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %156, i32 0, i32 0
  %158 = load ptr, ptr %157, align 8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %158, i32 0, i32 5
  store i32 1033, ptr %159, align 8
  %160 = load ptr, ptr %3, align 8
  %161 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %160, i32 0, i32 0
  %162 = load ptr, ptr %161, align 8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %162, i32 0, i32 0
  %164 = load ptr, ptr %163, align 8
  %165 = load ptr, ptr %3, align 8
  call void %164(ptr noundef %165)
  br label %166

166:                                              ; preds = %155, %152
  %167 = load ptr, ptr %3, align 8
  %168 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %167, i32 0, i32 0
  %169 = load ptr, ptr %168, align 8
  %170 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %169, i32 0, i32 5
  store i32 1037, ptr %170, align 8
  %171 = load i32, ptr %13, align 4
  %172 = load ptr, ptr %3, align 8
  %173 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %172, i32 0, i32 0
  %174 = load ptr, ptr %173, align 8
  %175 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %174, i32 0, i32 6
  %176 = getelementptr inbounds [8 x i32], ptr %175, i64 0, i64 0
  store i32 %171, ptr %176, align 4
  %177 = load i32, ptr %14, align 4
  %178 = load ptr, ptr %3, align 8
  %179 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %178, i32 0, i32 0
  %180 = load ptr, ptr %179, align 8
  %181 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %180, i32 0, i32 6
  %182 = getelementptr inbounds [8 x i32], ptr %181, i64 0, i64 1
  store i32 %177, ptr %182, align 4
  %183 = load ptr, ptr %3, align 8
  %184 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %183, i32 0, i32 0
  %185 = load ptr, ptr %184, align 8
  %186 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %185, i32 0, i32 1
  %187 = load ptr, ptr %186, align 8
  %188 = load ptr, ptr %3, align 8
  call void %187(ptr noundef %188, i32 noundef 1)
  br label %291

189:                                              ; preds = %140
  %190 = load ptr, ptr %5, align 8
  %191 = getelementptr inbounds %struct._tga_source_struct, ptr %190, i32 0, i32 7
  %192 = load i32, ptr %191, align 4
  switch i32 %192, label %202 [
    i32 2, label %193
    i32 3, label %196
    i32 4, label %199
  ]

193:                                              ; preds = %189
  %194 = load ptr, ptr %5, align 8
  %195 = getelementptr inbounds %struct._tga_source_struct, ptr %194, i32 0, i32 10
  store ptr @get_16bit_row, ptr %195, align 8
  br label %213

196:                                              ; preds = %189
  %197 = load ptr, ptr %5, align 8
  %198 = getelementptr inbounds %struct._tga_source_struct, ptr %197, i32 0, i32 10
  store ptr @get_24bit_row, ptr %198, align 8
  br label %213

199:                                              ; preds = %189
  %200 = load ptr, ptr %5, align 8
  %201 = getelementptr inbounds %struct._tga_source_struct, ptr %200, i32 0, i32 10
  store ptr @get_24bit_row, ptr %201, align 8
  br label %213

202:                                              ; preds = %189
  %203 = load ptr, ptr %3, align 8
  %204 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %203, i32 0, i32 0
  %205 = load ptr, ptr %204, align 8
  %206 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %205, i32 0, i32 5
  store i32 1033, ptr %206, align 8
  %207 = load ptr, ptr %3, align 8
  %208 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %207, i32 0, i32 0
  %209 = load ptr, ptr %208, align 8
  %210 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %209, i32 0, i32 0
  %211 = load ptr, ptr %210, align 8
  %212 = load ptr, ptr %3, align 8
  call void %211(ptr noundef %212)
  br label %213

213:                                              ; preds = %202, %199, %196, %193
  %214 = load ptr, ptr %3, align 8
  %215 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %214, i32 0, i32 0
  %216 = load ptr, ptr %215, align 8
  %217 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %216, i32 0, i32 5
  store i32 1035, ptr %217, align 8
  %218 = load i32, ptr %13, align 4
  %219 = load ptr, ptr %3, align 8
  %220 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %219, i32 0, i32 0
  %221 = load ptr, ptr %220, align 8
  %222 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %221, i32 0, i32 6
  %223 = getelementptr inbounds [8 x i32], ptr %222, i64 0, i64 0
  store i32 %218, ptr %223, align 4
  %224 = load i32, ptr %14, align 4
  %225 = load ptr, ptr %3, align 8
  %226 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %225, i32 0, i32 0
  %227 = load ptr, ptr %226, align 8
  %228 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %227, i32 0, i32 6
  %229 = getelementptr inbounds [8 x i32], ptr %228, i64 0, i64 1
  store i32 %224, ptr %229, align 4
  %230 = load ptr, ptr %3, align 8
  %231 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %230, i32 0, i32 0
  %232 = load ptr, ptr %231, align 8
  %233 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %232, i32 0, i32 1
  %234 = load ptr, ptr %233, align 8
  %235 = load ptr, ptr %3, align 8
  call void %234(ptr noundef %235, i32 noundef 1)
  br label %291

236:                                              ; preds = %140
  store i32 1, ptr %12, align 4
  %237 = load ptr, ptr %3, align 8
  %238 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %237, i32 0, i32 9
  store i32 1, ptr %238, align 4
  %239 = load ptr, ptr %5, align 8
  %240 = getelementptr inbounds %struct._tga_source_struct, ptr %239, i32 0, i32 7
  %241 = load i32, ptr %240, align 4
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %246

243:                                              ; preds = %236
  %244 = load ptr, ptr %5, align 8
  %245 = getelementptr inbounds %struct._tga_source_struct, ptr %244, i32 0, i32 10
  store ptr @get_8bit_gray_row, ptr %245, align 8
  br label %257

246:                                              ; preds = %236
  %247 = load ptr, ptr %3, align 8
  %248 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %247, i32 0, i32 0
  %249 = load ptr, ptr %248, align 8
  %250 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %249, i32 0, i32 5
  store i32 1033, ptr %250, align 8
  %251 = load ptr, ptr %3, align 8
  %252 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %251, i32 0, i32 0
  %253 = load ptr, ptr %252, align 8
  %254 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %253, i32 0, i32 0
  %255 = load ptr, ptr %254, align 8
  %256 = load ptr, ptr %3, align 8
  call void %255(ptr noundef %256)
  br label %257

257:                                              ; preds = %246, %243
  %258 = load ptr, ptr %3, align 8
  %259 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %258, i32 0, i32 0
  %260 = load ptr, ptr %259, align 8
  %261 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %260, i32 0, i32 5
  store i32 1036, ptr %261, align 8
  %262 = load i32, ptr %13, align 4
  %263 = load ptr, ptr %3, align 8
  %264 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %263, i32 0, i32 0
  %265 = load ptr, ptr %264, align 8
  %266 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %265, i32 0, i32 6
  %267 = getelementptr inbounds [8 x i32], ptr %266, i64 0, i64 0
  store i32 %262, ptr %267, align 4
  %268 = load i32, ptr %14, align 4
  %269 = load ptr, ptr %3, align 8
  %270 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %269, i32 0, i32 0
  %271 = load ptr, ptr %270, align 8
  %272 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %271, i32 0, i32 6
  %273 = getelementptr inbounds [8 x i32], ptr %272, i64 0, i64 1
  store i32 %268, ptr %273, align 4
  %274 = load ptr, ptr %3, align 8
  %275 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %274, i32 0, i32 0
  %276 = load ptr, ptr %275, align 8
  %277 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %276, i32 0, i32 1
  %278 = load ptr, ptr %277, align 8
  %279 = load ptr, ptr %3, align 8
  call void %278(ptr noundef %279, i32 noundef 1)
  br label %291

280:                                              ; preds = %140
  %281 = load ptr, ptr %3, align 8
  %282 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %281, i32 0, i32 0
  %283 = load ptr, ptr %282, align 8
  %284 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %283, i32 0, i32 5
  store i32 1033, ptr %284, align 8
  %285 = load ptr, ptr %3, align 8
  %286 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %285, i32 0, i32 0
  %287 = load ptr, ptr %286, align 8
  %288 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %287, i32 0, i32 0
  %289 = load ptr, ptr %288, align 8
  %290 = load ptr, ptr %3, align 8
  call void %289(ptr noundef %290)
  br label %291

291:                                              ; preds = %280, %257, %213, %166
  %292 = load i32, ptr %16, align 4
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %294, label %327

294:                                              ; preds = %291
  %295 = load ptr, ptr %3, align 8
  %296 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %295, i32 0, i32 1
  %297 = load ptr, ptr %296, align 8
  %298 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %297, i32 0, i32 4
  %299 = load ptr, ptr %298, align 8
  %300 = load ptr, ptr %3, align 8
  %301 = load i32, ptr %13, align 4
  %302 = load i32, ptr %12, align 4
  %303 = mul i32 %301, %302
  %304 = load i32, ptr %14, align 4
  %305 = call ptr %299(ptr noundef %300, i32 noundef 1, i32 noundef 0, i32 noundef %303, i32 noundef %304, i32 noundef 1)
  %306 = load ptr, ptr %5, align 8
  %307 = getelementptr inbounds %struct._tga_source_struct, ptr %306, i32 0, i32 3
  store ptr %305, ptr %307, align 8
  %308 = load ptr, ptr %3, align 8
  %309 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %308, i32 0, i32 2
  %310 = load ptr, ptr %309, align 8
  %311 = icmp ne ptr %310, null
  br i1 %311, label %312, label %320

312:                                              ; preds = %294
  %313 = load ptr, ptr %3, align 8
  %314 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %313, i32 0, i32 2
  %315 = load ptr, ptr %314, align 8
  store ptr %315, ptr %17, align 8
  %316 = load ptr, ptr %17, align 8
  %317 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %316, i32 0, i32 2
  %318 = load i32, ptr %317, align 4
  %319 = add nsw i32 %318, 1
  store i32 %319, ptr %317, align 4
  br label %320

320:                                              ; preds = %312, %294
  %321 = load ptr, ptr %5, align 8
  %322 = getelementptr inbounds %struct._tga_source_struct, ptr %321, i32 0, i32 0
  %323 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %322, i32 0, i32 5
  store i32 1, ptr %323, align 8
  %324 = load ptr, ptr %5, align 8
  %325 = getelementptr inbounds %struct._tga_source_struct, ptr %324, i32 0, i32 0
  %326 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %325, i32 0, i32 1
  store ptr @preload_image, ptr %326, align 8
  br label %352

327:                                              ; preds = %291
  %328 = load ptr, ptr %5, align 8
  %329 = getelementptr inbounds %struct._tga_source_struct, ptr %328, i32 0, i32 3
  store ptr null, ptr %329, align 8
  %330 = load ptr, ptr %3, align 8
  %331 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %330, i32 0, i32 1
  %332 = load ptr, ptr %331, align 8
  %333 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %332, i32 0, i32 2
  %334 = load ptr, ptr %333, align 8
  %335 = load ptr, ptr %3, align 8
  %336 = load i32, ptr %13, align 4
  %337 = load i32, ptr %12, align 4
  %338 = mul i32 %336, %337
  %339 = call ptr %334(ptr noundef %335, i32 noundef 1, i32 noundef %338, i32 noundef 1)
  %340 = load ptr, ptr %5, align 8
  %341 = getelementptr inbounds %struct._tga_source_struct, ptr %340, i32 0, i32 0
  %342 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %341, i32 0, i32 4
  store ptr %339, ptr %342, align 8
  %343 = load ptr, ptr %5, align 8
  %344 = getelementptr inbounds %struct._tga_source_struct, ptr %343, i32 0, i32 0
  %345 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %344, i32 0, i32 5
  store i32 1, ptr %345, align 8
  %346 = load ptr, ptr %5, align 8
  %347 = getelementptr inbounds %struct._tga_source_struct, ptr %346, i32 0, i32 10
  %348 = load ptr, ptr %347, align 8
  %349 = load ptr, ptr %5, align 8
  %350 = getelementptr inbounds %struct._tga_source_struct, ptr %349, i32 0, i32 0
  %351 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %350, i32 0, i32 1
  store ptr %348, ptr %351, align 8
  br label %352

352:                                              ; preds = %327, %320
  br label %353

353:                                              ; preds = %357, %352
  %354 = load i32, ptr %7, align 4
  %355 = add nsw i32 %354, -1
  store i32 %355, ptr %7, align 4
  %356 = icmp ne i32 %354, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %353
  %358 = load ptr, ptr %5, align 8
  %359 = call i32 @read_byte(ptr noundef %358)
  br label %353, !llvm.loop !6

360:                                              ; preds = %353
  %361 = load i32, ptr %15, align 4
  %362 = icmp ugt i32 %361, 0
  br i1 %362, label %363, label %403

363:                                              ; preds = %360
  %364 = load i32, ptr %15, align 4
  %365 = icmp ugt i32 %364, 256
  br i1 %365, label %376, label %366

366:                                              ; preds = %363
  %367 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 3
  %368 = load i8, ptr %367, align 1
  %369 = zext i8 %368 to i32
  %370 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 4
  %371 = load i8, ptr %370, align 4
  %372 = zext i8 %371 to i32
  %373 = shl i32 %372, 8
  %374 = add i32 %369, %373
  %375 = icmp ne i32 %374, 0
  br i1 %375, label %376, label %387

376:                                              ; preds = %366, %363
  %377 = load ptr, ptr %3, align 8
  %378 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %377, i32 0, i32 0
  %379 = load ptr, ptr %378, align 8
  %380 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %379, i32 0, i32 5
  store i32 1032, ptr %380, align 8
  %381 = load ptr, ptr %3, align 8
  %382 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %381, i32 0, i32 0
  %383 = load ptr, ptr %382, align 8
  %384 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %383, i32 0, i32 0
  %385 = load ptr, ptr %384, align 8
  %386 = load ptr, ptr %3, align 8
  call void %385(ptr noundef %386)
  br label %387

387:                                              ; preds = %376, %366
  %388 = load ptr, ptr %3, align 8
  %389 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %388, i32 0, i32 1
  %390 = load ptr, ptr %389, align 8
  %391 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %390, i32 0, i32 2
  %392 = load ptr, ptr %391, align 8
  %393 = load ptr, ptr %3, align 8
  %394 = load i32, ptr %15, align 4
  %395 = call ptr %392(ptr noundef %393, i32 noundef 1, i32 noundef %394, i32 noundef 3)
  %396 = load ptr, ptr %5, align 8
  %397 = getelementptr inbounds %struct._tga_source_struct, ptr %396, i32 0, i32 2
  store ptr %395, ptr %397, align 8
  %398 = load ptr, ptr %5, align 8
  %399 = load i32, ptr %15, align 4
  %400 = getelementptr inbounds [18 x i8], ptr %6, i64 0, i64 7
  %401 = load i8, ptr %400, align 1
  %402 = zext i8 %401 to i32
  call void @read_colormap(ptr noundef %398, i32 noundef %399, i32 noundef %402)
  br label %420

403:                                              ; preds = %360
  %404 = load i32, ptr %8, align 4
  %405 = icmp ne i32 %404, 0
  br i1 %405, label %406, label %417

406:                                              ; preds = %403
  %407 = load ptr, ptr %3, align 8
  %408 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %407, i32 0, i32 0
  %409 = load ptr, ptr %408, align 8
  %410 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %409, i32 0, i32 5
  store i32 1033, ptr %410, align 8
  %411 = load ptr, ptr %3, align 8
  %412 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %411, i32 0, i32 0
  %413 = load ptr, ptr %412, align 8
  %414 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %413, i32 0, i32 0
  %415 = load ptr, ptr %414, align 8
  %416 = load ptr, ptr %3, align 8
  call void %415(ptr noundef %416)
  br label %417

417:                                              ; preds = %406, %403
  %418 = load ptr, ptr %5, align 8
  %419 = getelementptr inbounds %struct._tga_source_struct, ptr %418, i32 0, i32 2
  store ptr null, ptr %419, align 8
  br label %420

420:                                              ; preds = %417, %387
  %421 = load i32, ptr %12, align 4
  %422 = load ptr, ptr %3, align 8
  %423 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %422, i32 0, i32 8
  store i32 %421, ptr %423, align 8
  %424 = load ptr, ptr %3, align 8
  %425 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %424, i32 0, i32 11
  store i32 8, ptr %425, align 8
  %426 = load i32, ptr %13, align 4
  %427 = load ptr, ptr %3, align 8
  %428 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %427, i32 0, i32 6
  store i32 %426, ptr %428, align 8
  %429 = load i32, ptr %14, align 4
  %430 = load ptr, ptr %3, align 8
  %431 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %430, i32 0, i32 7
  store i32 %429, ptr %431, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_input_tga(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  ret void
}

declare i64 @fread(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #1

; Function Attrs: noinline nounwind uwtable
define internal void @read_rle_pixel(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %5 = load ptr, ptr %2, align 8
  %6 = getelementptr inbounds %struct._tga_source_struct, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %6, i32 0, i32 3
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %3, align 8
  %9 = load ptr, ptr %2, align 8
  %10 = getelementptr inbounds %struct._tga_source_struct, ptr %9, i32 0, i32 9
  %11 = load i32, ptr %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %1
  %14 = load ptr, ptr %2, align 8
  %15 = getelementptr inbounds %struct._tga_source_struct, ptr %14, i32 0, i32 9
  %16 = load i32, ptr %15, align 4
  %17 = add nsw i32 %16, -1
  store i32 %17, ptr %15, align 4
  br label %62

18:                                               ; preds = %1
  %19 = load ptr, ptr %2, align 8
  %20 = getelementptr inbounds %struct._tga_source_struct, ptr %19, i32 0, i32 8
  %21 = load i32, ptr %20, align 8
  %22 = add nsw i32 %21, -1
  store i32 %22, ptr %20, align 8
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %43

24:                                               ; preds = %18
  %25 = load ptr, ptr %2, align 8
  %26 = call i32 @read_byte(ptr noundef %25)
  store i32 %26, ptr %4, align 4
  %27 = load i32, ptr %4, align 4
  %28 = and i32 %27, 128
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %24
  %31 = load i32, ptr %4, align 4
  %32 = and i32 %31, 127
  %33 = load ptr, ptr %2, align 8
  %34 = getelementptr inbounds %struct._tga_source_struct, ptr %33, i32 0, i32 9
  store i32 %32, ptr %34, align 4
  %35 = load ptr, ptr %2, align 8
  %36 = getelementptr inbounds %struct._tga_source_struct, ptr %35, i32 0, i32 8
  store i32 0, ptr %36, align 8
  br label %42

37:                                               ; preds = %24
  %38 = load i32, ptr %4, align 4
  %39 = and i32 %38, 127
  %40 = load ptr, ptr %2, align 8
  %41 = getelementptr inbounds %struct._tga_source_struct, ptr %40, i32 0, i32 8
  store i32 %39, ptr %41, align 8
  br label %42

42:                                               ; preds = %37, %30
  br label %43

43:                                               ; preds = %42, %18
  store i32 0, ptr %4, align 4
  br label %44

44:                                               ; preds = %59, %43
  %45 = load i32, ptr %4, align 4
  %46 = load ptr, ptr %2, align 8
  %47 = getelementptr inbounds %struct._tga_source_struct, ptr %46, i32 0, i32 7
  %48 = load i32, ptr %47, align 4
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %50, label %62

50:                                               ; preds = %44
  %51 = load ptr, ptr %3, align 8
  %52 = call i32 @getc(ptr noundef %51)
  %53 = trunc i32 %52 to i8
  %54 = load ptr, ptr %2, align 8
  %55 = getelementptr inbounds %struct._tga_source_struct, ptr %54, i32 0, i32 6
  %56 = load i32, ptr %4, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [4 x i8], ptr %55, i64 0, i64 %57
  store i8 %53, ptr %58, align 1
  br label %59

59:                                               ; preds = %50
  %60 = load i32, ptr %4, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, ptr %4, align 4
  br label %44, !llvm.loop !8

62:                                               ; preds = %13, %44
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @read_non_rle_pixel(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %5 = load ptr, ptr %2, align 8
  %6 = getelementptr inbounds %struct._tga_source_struct, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %6, i32 0, i32 3
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %3, align 8
  store i32 0, ptr %4, align 4
  br label %9

9:                                                ; preds = %24, %1
  %10 = load i32, ptr %4, align 4
  %11 = load ptr, ptr %2, align 8
  %12 = getelementptr inbounds %struct._tga_source_struct, ptr %11, i32 0, i32 7
  %13 = load i32, ptr %12, align 4
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %9
  %16 = load ptr, ptr %3, align 8
  %17 = call i32 @getc(ptr noundef %16)
  %18 = trunc i32 %17 to i8
  %19 = load ptr, ptr %2, align 8
  %20 = getelementptr inbounds %struct._tga_source_struct, ptr %19, i32 0, i32 6
  %21 = load i32, ptr %4, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [4 x i8], ptr %20, i64 0, i64 %22
  store i8 %18, ptr %23, align 1
  br label %24

24:                                               ; preds = %15
  %25 = load i32, ptr %4, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, ptr %4, align 4
  br label %9, !llvm.loop !9

27:                                               ; preds = %9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_8bit_row(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %10 = load ptr, ptr %4, align 8
  store ptr %10, ptr %5, align 8
  %11 = load ptr, ptr %5, align 8
  %12 = getelementptr inbounds %struct._tga_source_struct, ptr %11, i32 0, i32 2
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %9, align 8
  %14 = load ptr, ptr %5, align 8
  %15 = getelementptr inbounds %struct._tga_source_struct, ptr %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %15, i32 0, i32 4
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 0
  %19 = load ptr, ptr %18, align 8
  store ptr %19, ptr %7, align 8
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %20, i32 0, i32 6
  %22 = load i32, ptr %21, align 8
  store i32 %22, ptr %8, align 4
  br label %23

23:                                               ; preds = %63, %2
  %24 = load i32, ptr %8, align 4
  %25 = icmp ugt i32 %24, 0
  br i1 %25, label %26, label %66

26:                                               ; preds = %23
  %27 = load ptr, ptr %5, align 8
  %28 = getelementptr inbounds %struct._tga_source_struct, ptr %27, i32 0, i32 5
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr %5, align 8
  call void %29(ptr noundef %30)
  %31 = load ptr, ptr %5, align 8
  %32 = getelementptr inbounds %struct._tga_source_struct, ptr %31, i32 0, i32 6
  %33 = getelementptr inbounds [4 x i8], ptr %32, i64 0, i64 0
  %34 = load i8, ptr %33, align 8
  %35 = zext i8 %34 to i32
  store i32 %35, ptr %6, align 4
  %36 = load ptr, ptr %9, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 0
  %38 = load ptr, ptr %37, align 8
  %39 = load i32, ptr %6, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, ptr %38, i64 %40
  %42 = load i8, ptr %41, align 1
  %43 = load ptr, ptr %7, align 8
  %44 = getelementptr inbounds i8, ptr %43, i32 1
  store ptr %44, ptr %7, align 8
  store i8 %42, ptr %43, align 1
  %45 = load ptr, ptr %9, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 1
  %47 = load ptr, ptr %46, align 8
  %48 = load i32, ptr %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  %51 = load i8, ptr %50, align 1
  %52 = load ptr, ptr %7, align 8
  %53 = getelementptr inbounds i8, ptr %52, i32 1
  store ptr %53, ptr %7, align 8
  store i8 %51, ptr %52, align 1
  %54 = load ptr, ptr %9, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 2
  %56 = load ptr, ptr %55, align 8
  %57 = load i32, ptr %6, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, ptr %56, i64 %58
  %60 = load i8, ptr %59, align 1
  %61 = load ptr, ptr %7, align 8
  %62 = getelementptr inbounds i8, ptr %61, i32 1
  store ptr %62, ptr %7, align 8
  store i8 %60, ptr %61, align 1
  br label %63

63:                                               ; preds = %26
  %64 = load i32, ptr %8, align 4
  %65 = add i32 %64, -1
  store i32 %65, ptr %8, align 4
  br label %23, !llvm.loop !10

66:                                               ; preds = %23
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_16bit_row(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %9 = load ptr, ptr %4, align 8
  store ptr %9, ptr %5, align 8
  %10 = load ptr, ptr %5, align 8
  %11 = getelementptr inbounds %struct._tga_source_struct, ptr %10, i32 0, i32 0
  %12 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %11, i32 0, i32 4
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 0
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %7, align 8
  %16 = load ptr, ptr %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %16, i32 0, i32 6
  %18 = load i32, ptr %17, align 8
  store i32 %18, ptr %8, align 4
  br label %19

19:                                               ; preds = %67, %2
  %20 = load i32, ptr %8, align 4
  %21 = icmp ugt i32 %20, 0
  br i1 %21, label %22, label %70

22:                                               ; preds = %19
  %23 = load ptr, ptr %5, align 8
  %24 = getelementptr inbounds %struct._tga_source_struct, ptr %23, i32 0, i32 5
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %5, align 8
  call void %25(ptr noundef %26)
  %27 = load ptr, ptr %5, align 8
  %28 = getelementptr inbounds %struct._tga_source_struct, ptr %27, i32 0, i32 6
  %29 = getelementptr inbounds [4 x i8], ptr %28, i64 0, i64 0
  %30 = load i8, ptr %29, align 8
  %31 = zext i8 %30 to i32
  store i32 %31, ptr %6, align 4
  %32 = load ptr, ptr %5, align 8
  %33 = getelementptr inbounds %struct._tga_source_struct, ptr %32, i32 0, i32 6
  %34 = getelementptr inbounds [4 x i8], ptr %33, i64 0, i64 1
  %35 = load i8, ptr %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl i32 %36, 8
  %38 = load i32, ptr %6, align 4
  %39 = add nsw i32 %38, %37
  store i32 %39, ptr %6, align 4
  %40 = load i32, ptr %6, align 4
  %41 = and i32 %40, 31
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [32 x i8], ptr @c5to8bits, i64 0, i64 %42
  %44 = load i8, ptr %43, align 1
  %45 = load ptr, ptr %7, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 2
  store i8 %44, ptr %46, align 1
  %47 = load i32, ptr %6, align 4
  %48 = ashr i32 %47, 5
  store i32 %48, ptr %6, align 4
  %49 = load i32, ptr %6, align 4
  %50 = and i32 %49, 31
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [32 x i8], ptr @c5to8bits, i64 0, i64 %51
  %53 = load i8, ptr %52, align 1
  %54 = load ptr, ptr %7, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 1
  store i8 %53, ptr %55, align 1
  %56 = load i32, ptr %6, align 4
  %57 = ashr i32 %56, 5
  store i32 %57, ptr %6, align 4
  %58 = load i32, ptr %6, align 4
  %59 = and i32 %58, 31
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [32 x i8], ptr @c5to8bits, i64 0, i64 %60
  %62 = load i8, ptr %61, align 1
  %63 = load ptr, ptr %7, align 8
  %64 = getelementptr inbounds i8, ptr %63, i64 0
  store i8 %62, ptr %64, align 1
  %65 = load ptr, ptr %7, align 8
  %66 = getelementptr inbounds i8, ptr %65, i64 3
  store ptr %66, ptr %7, align 8
  br label %67

67:                                               ; preds = %22
  %68 = load i32, ptr %8, align 4
  %69 = add i32 %68, -1
  store i32 %69, ptr %8, align 4
  br label %19, !llvm.loop !11

70:                                               ; preds = %19
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_24bit_row(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %8 = load ptr, ptr %4, align 8
  store ptr %8, ptr %5, align 8
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds %struct._tga_source_struct, ptr %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %10, i32 0, i32 4
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 0
  %14 = load ptr, ptr %13, align 8
  store ptr %14, ptr %6, align 8
  %15 = load ptr, ptr %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %15, i32 0, i32 6
  %17 = load i32, ptr %16, align 8
  store i32 %17, ptr %7, align 4
  br label %18

18:                                               ; preds = %50, %2
  %19 = load i32, ptr %7, align 4
  %20 = icmp ugt i32 %19, 0
  br i1 %20, label %21, label %53

21:                                               ; preds = %18
  %22 = load ptr, ptr %5, align 8
  %23 = getelementptr inbounds %struct._tga_source_struct, ptr %22, i32 0, i32 5
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %5, align 8
  call void %24(ptr noundef %25)
  %26 = load ptr, ptr %5, align 8
  %27 = getelementptr inbounds %struct._tga_source_struct, ptr %26, i32 0, i32 6
  %28 = getelementptr inbounds [4 x i8], ptr %27, i64 0, i64 2
  %29 = load i8, ptr %28, align 2
  %30 = zext i8 %29 to i32
  %31 = trunc i32 %30 to i8
  %32 = load ptr, ptr %6, align 8
  %33 = getelementptr inbounds i8, ptr %32, i32 1
  store ptr %33, ptr %6, align 8
  store i8 %31, ptr %32, align 1
  %34 = load ptr, ptr %5, align 8
  %35 = getelementptr inbounds %struct._tga_source_struct, ptr %34, i32 0, i32 6
  %36 = getelementptr inbounds [4 x i8], ptr %35, i64 0, i64 1
  %37 = load i8, ptr %36, align 1
  %38 = zext i8 %37 to i32
  %39 = trunc i32 %38 to i8
  %40 = load ptr, ptr %6, align 8
  %41 = getelementptr inbounds i8, ptr %40, i32 1
  store ptr %41, ptr %6, align 8
  store i8 %39, ptr %40, align 1
  %42 = load ptr, ptr %5, align 8
  %43 = getelementptr inbounds %struct._tga_source_struct, ptr %42, i32 0, i32 6
  %44 = getelementptr inbounds [4 x i8], ptr %43, i64 0, i64 0
  %45 = load i8, ptr %44, align 8
  %46 = zext i8 %45 to i32
  %47 = trunc i32 %46 to i8
  %48 = load ptr, ptr %6, align 8
  %49 = getelementptr inbounds i8, ptr %48, i32 1
  store ptr %49, ptr %6, align 8
  store i8 %47, ptr %48, align 1
  br label %50

50:                                               ; preds = %21
  %51 = load i32, ptr %7, align 4
  %52 = add i32 %51, -1
  store i32 %52, ptr %7, align 4
  br label %18, !llvm.loop !12

53:                                               ; preds = %18
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_8bit_gray_row(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %8 = load ptr, ptr %4, align 8
  store ptr %8, ptr %5, align 8
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds %struct._tga_source_struct, ptr %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %10, i32 0, i32 4
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 0
  %14 = load ptr, ptr %13, align 8
  store ptr %14, ptr %6, align 8
  %15 = load ptr, ptr %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %15, i32 0, i32 6
  %17 = load i32, ptr %16, align 8
  store i32 %17, ptr %7, align 4
  br label %18

18:                                               ; preds = %34, %2
  %19 = load i32, ptr %7, align 4
  %20 = icmp ugt i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %18
  %22 = load ptr, ptr %5, align 8
  %23 = getelementptr inbounds %struct._tga_source_struct, ptr %22, i32 0, i32 5
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %5, align 8
  call void %24(ptr noundef %25)
  %26 = load ptr, ptr %5, align 8
  %27 = getelementptr inbounds %struct._tga_source_struct, ptr %26, i32 0, i32 6
  %28 = getelementptr inbounds [4 x i8], ptr %27, i64 0, i64 0
  %29 = load i8, ptr %28, align 8
  %30 = zext i8 %29 to i32
  %31 = trunc i32 %30 to i8
  %32 = load ptr, ptr %6, align 8
  %33 = getelementptr inbounds i8, ptr %32, i32 1
  store ptr %33, ptr %6, align 8
  store i8 %31, ptr %32, align 1
  br label %34

34:                                               ; preds = %21
  %35 = load i32, ptr %7, align 4
  %36 = add i32 %35, -1
  store i32 %36, ptr %7, align 4
  br label %18, !llvm.loop !13

37:                                               ; preds = %18
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @preload_image(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %8 = load ptr, ptr %4, align 8
  store ptr %8, ptr %5, align 8
  %9 = load ptr, ptr %3, align 8
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %9, i32 0, i32 2
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %7, align 8
  store i32 0, ptr %6, align 4
  br label %12

12:                                               ; preds = %60, %2
  %13 = load i32, ptr %6, align 4
  %14 = load ptr, ptr %3, align 8
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %14, i32 0, i32 7
  %16 = load i32, ptr %15, align 4
  %17 = icmp ult i32 %13, %16
  br i1 %17, label %18, label %63

18:                                               ; preds = %12
  %19 = load ptr, ptr %7, align 8
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %39

21:                                               ; preds = %18
  %22 = load i32, ptr %6, align 4
  %23 = zext i32 %22 to i64
  %24 = load ptr, ptr %7, align 8
  %25 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.jpeg_progress_mgr, ptr %25, i32 0, i32 1
  store i64 %23, ptr %26, align 8
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %27, i32 0, i32 7
  %29 = load i32, ptr %28, align 4
  %30 = zext i32 %29 to i64
  %31 = load ptr, ptr %7, align 8
  %32 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %31, i32 0, i32 0
  %33 = getelementptr inbounds %struct.jpeg_progress_mgr, ptr %32, i32 0, i32 2
  store i64 %30, ptr %33, align 8
  %34 = load ptr, ptr %7, align 8
  %35 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %34, i32 0, i32 0
  %36 = getelementptr inbounds %struct.jpeg_progress_mgr, ptr %35, i32 0, i32 0
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr %3, align 8
  call void %37(ptr noundef %38)
  br label %39

39:                                               ; preds = %21, %18
  %40 = load ptr, ptr %3, align 8
  %41 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %40, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %42, i32 0, i32 7
  %44 = load ptr, ptr %43, align 8
  %45 = load ptr, ptr %3, align 8
  %46 = load ptr, ptr %5, align 8
  %47 = getelementptr inbounds %struct._tga_source_struct, ptr %46, i32 0, i32 3
  %48 = load ptr, ptr %47, align 8
  %49 = load i32, ptr %6, align 4
  %50 = call ptr %44(ptr noundef %45, ptr noundef %48, i32 noundef %49, i32 noundef 1, i32 noundef 1)
  %51 = load ptr, ptr %5, align 8
  %52 = getelementptr inbounds %struct._tga_source_struct, ptr %51, i32 0, i32 0
  %53 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %52, i32 0, i32 4
  store ptr %50, ptr %53, align 8
  %54 = load ptr, ptr %5, align 8
  %55 = getelementptr inbounds %struct._tga_source_struct, ptr %54, i32 0, i32 10
  %56 = load ptr, ptr %55, align 8
  %57 = load ptr, ptr %3, align 8
  %58 = load ptr, ptr %4, align 8
  %59 = call i32 %56(ptr noundef %57, ptr noundef %58)
  br label %60

60:                                               ; preds = %39
  %61 = load i32, ptr %6, align 4
  %62 = add i32 %61, 1
  store i32 %62, ptr %6, align 4
  br label %12, !llvm.loop !14

63:                                               ; preds = %12
  %64 = load ptr, ptr %7, align 8
  %65 = icmp ne ptr %64, null
  br i1 %65, label %66, label %71

66:                                               ; preds = %63
  %67 = load ptr, ptr %7, align 8
  %68 = getelementptr inbounds %struct.cdjpeg_progress_mgr, ptr %67, i32 0, i32 1
  %69 = load i32, ptr %68, align 8
  %70 = add nsw i32 %69, 1
  store i32 %70, ptr %68, align 8
  br label %71

71:                                               ; preds = %66, %63
  %72 = load ptr, ptr %5, align 8
  %73 = getelementptr inbounds %struct._tga_source_struct, ptr %72, i32 0, i32 0
  %74 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %73, i32 0, i32 1
  store ptr @get_memory_row, ptr %74, align 8
  %75 = load ptr, ptr %5, align 8
  %76 = getelementptr inbounds %struct._tga_source_struct, ptr %75, i32 0, i32 4
  store i32 0, ptr %76, align 8
  %77 = load ptr, ptr %3, align 8
  %78 = load ptr, ptr %4, align 8
  %79 = call i32 @get_memory_row(ptr noundef %77, ptr noundef %78)
  ret i32 %79
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @read_byte(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %5 = load ptr, ptr %2, align 8
  %6 = getelementptr inbounds %struct._tga_source_struct, ptr %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %6, i32 0, i32 3
  %8 = load ptr, ptr %7, align 8
  store ptr %8, ptr %3, align 8
  %9 = load ptr, ptr %3, align 8
  %10 = call i32 @getc(ptr noundef %9)
  store i32 %10, ptr %4, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %29

12:                                               ; preds = %1
  %13 = load ptr, ptr %2, align 8
  %14 = getelementptr inbounds %struct._tga_source_struct, ptr %13, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %15, i32 0, i32 0
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %17, i32 0, i32 5
  store i32 42, ptr %18, align 8
  %19 = load ptr, ptr %2, align 8
  %20 = getelementptr inbounds %struct._tga_source_struct, ptr %19, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %21, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %23, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %2, align 8
  %27 = getelementptr inbounds %struct._tga_source_struct, ptr %26, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  call void %25(ptr noundef %28)
  br label %29

29:                                               ; preds = %12, %1
  %30 = load i32, ptr %4, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind uwtable
define internal void @read_colormap(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store ptr %0, ptr %4, align 8
  store i32 %1, ptr %5, align 4
  store i32 %2, ptr %6, align 4
  %8 = load i32, ptr %6, align 4
  %9 = icmp ne i32 %8, 24
  br i1 %9, label %10, label %27

10:                                               ; preds = %3
  %11 = load ptr, ptr %4, align 8
  %12 = getelementptr inbounds %struct._tga_source_struct, ptr %11, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %13, i32 0, i32 0
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %15, i32 0, i32 5
  store i32 1032, ptr %16, align 8
  %17 = load ptr, ptr %4, align 8
  %18 = getelementptr inbounds %struct._tga_source_struct, ptr %17, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %19, i32 0, i32 0
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %21, i32 0, i32 0
  %23 = load ptr, ptr %22, align 8
  %24 = load ptr, ptr %4, align 8
  %25 = getelementptr inbounds %struct._tga_source_struct, ptr %24, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8
  call void %23(ptr noundef %26)
  br label %27

27:                                               ; preds = %10, %3
  store i32 0, ptr %7, align 4
  br label %28

28:                                               ; preds = %66, %27
  %29 = load i32, ptr %7, align 4
  %30 = load i32, ptr %5, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %69

32:                                               ; preds = %28
  %33 = load ptr, ptr %4, align 8
  %34 = call i32 @read_byte(ptr noundef %33)
  %35 = trunc i32 %34 to i8
  %36 = load ptr, ptr %4, align 8
  %37 = getelementptr inbounds %struct._tga_source_struct, ptr %36, i32 0, i32 2
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 2
  %40 = load ptr, ptr %39, align 8
  %41 = load i32, ptr %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, ptr %40, i64 %42
  store i8 %35, ptr %43, align 1
  %44 = load ptr, ptr %4, align 8
  %45 = call i32 @read_byte(ptr noundef %44)
  %46 = trunc i32 %45 to i8
  %47 = load ptr, ptr %4, align 8
  %48 = getelementptr inbounds %struct._tga_source_struct, ptr %47, i32 0, i32 2
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 1
  %51 = load ptr, ptr %50, align 8
  %52 = load i32, ptr %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, ptr %51, i64 %53
  store i8 %46, ptr %54, align 1
  %55 = load ptr, ptr %4, align 8
  %56 = call i32 @read_byte(ptr noundef %55)
  %57 = trunc i32 %56 to i8
  %58 = load ptr, ptr %4, align 8
  %59 = getelementptr inbounds %struct._tga_source_struct, ptr %58, i32 0, i32 2
  %60 = load ptr, ptr %59, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 0
  %62 = load ptr, ptr %61, align 8
  %63 = load i32, ptr %7, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, ptr %62, i64 %64
  store i8 %57, ptr %65, align 1
  br label %66

66:                                               ; preds = %32
  %67 = load i32, ptr %7, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, ptr %7, align 4
  br label %28, !llvm.loop !15

69:                                               ; preds = %28
  ret void
}

declare i32 @getc(ptr noundef) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_memory_row(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  %7 = load ptr, ptr %4, align 8
  store ptr %7, ptr %5, align 8
  %8 = load ptr, ptr %3, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %8, i32 0, i32 7
  %10 = load i32, ptr %9, align 4
  %11 = load ptr, ptr %5, align 8
  %12 = getelementptr inbounds %struct._tga_source_struct, ptr %11, i32 0, i32 4
  %13 = load i32, ptr %12, align 8
  %14 = sub i32 %10, %13
  %15 = sub i32 %14, 1
  store i32 %15, ptr %6, align 4
  %16 = load ptr, ptr %3, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %16, i32 0, i32 1
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %struct.jpeg_memory_mgr, ptr %18, i32 0, i32 7
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr %3, align 8
  %22 = load ptr, ptr %5, align 8
  %23 = getelementptr inbounds %struct._tga_source_struct, ptr %22, i32 0, i32 3
  %24 = load ptr, ptr %23, align 8
  %25 = load i32, ptr %6, align 4
  %26 = call ptr %20(ptr noundef %21, ptr noundef %24, i32 noundef %25, i32 noundef 1, i32 noundef 0)
  %27 = load ptr, ptr %5, align 8
  %28 = getelementptr inbounds %struct._tga_source_struct, ptr %27, i32 0, i32 0
  %29 = getelementptr inbounds %struct.cjpeg_source_struct, ptr %28, i32 0, i32 4
  store ptr %26, ptr %29, align 8
  %30 = load ptr, ptr %5, align 8
  %31 = getelementptr inbounds %struct._tga_source_struct, ptr %30, i32 0, i32 4
  %32 = load i32, ptr %31, align 8
  %33 = add i32 %32, 1
  store i32 %33, ptr %31, align 8
  ret i32 1
}

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
