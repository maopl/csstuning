; ModuleID = 'cssbench.bc'
source_filename = "../../utilities/cssbench.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.timeval = type { i64, i64 }
%struct.rusage = type { %struct.timeval, %struct.timeval, %union.anon, %union.anon.0, %union.anon.1, %union.anon.2, %union.anon.3, %union.anon.4, %union.anon.5, %union.anon.6, %union.anon.7, %union.anon.8, %union.anon.9, %union.anon.10, %union.anon.11, %union.anon.12 }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%union.anon.2 = type { i64 }
%union.anon.3 = type { i64 }
%union.anon.4 = type { i64 }
%union.anon.5 = type { i64 }
%union.anon.6 = type { i64 }
%union.anon.7 = type { i64 }
%union.anon.8 = type { i64 }
%union.anon.9 = type { i64 }
%union.anon.10 = type { i64 }
%union.anon.11 = type { i64 }
%union.anon.12 = type { i64 }

@numCounters = internal global i32 0, align 4
@numVars = internal global i32 0, align 4
@timerSeconds = internal global ptr null, align 8
@timerStarts = internal global ptr null, align 8
@timerBefores = internal global ptr null, align 8
@vars = internal global ptr null, align 8
@timerAfter = internal global %struct.timeval zeroinitializer, align 8
@resfile = internal global ptr @.str.28, align 8
@.str = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"Error: can't open timer file %s for writing\0A\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c" \22execution_time\22:%.6lf\00", align 1
@numPapiEvent = internal global i32 0, align 4
@papiEventlist = internal global [128 x i32] zeroinitializer, align 16
@stderr = external global ptr, align 8
@.str.4 = private unnamed_addr constant [40 x i8] c"Error converting event code %d to name\0A\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c",\0A \22%s\22:%lld\00", align 1
@eventVals = internal global ptr null, align 8
@.str.6 = private unnamed_addr constant [29 x i8] c",\0A \22execution_time_%u\22:%.6lf\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c",\0A \22%s_%u\22:%lld\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c",\0A \22maxrss\22:%ld\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c",\0A \22run_time_state\22:{\0A\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"  %s\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"\0A }\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"\0A}\0A\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"Error opening file %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.17 = private unnamed_addr constant [45 x i8] c"Error converting PAPI event name %s to code\0A\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"../../utilities/cssbench.c\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"PAPI_event_name_to_code\00", align 1
@papiEventSet = internal global i32 -1, align 4
@.str.20 = private unnamed_addr constant [39 x i8] c"Error adding PAPI event %s\0A retval: %d\00", align 1
@stdout = external global ptr, align 8
@.str.21 = private unnamed_addr constant [21 x i8] c"Added PAPI event %s\0A\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"Error: PAPI_library_init failed\0A\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"PAPI_create_eventset\00", align 1
@eventsfile = internal global ptr @.str.31, align 8
@.str.24 = private unnamed_addr constant [22 x i8] c"PAPI_destroy_eventset\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"PAPI_cleanup_eventset\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"PAPI_start\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"PAPI_stop\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"tmp_result.json\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"Error: %-40s:line #%d\0A\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"Error %d in %s: %s\0A\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"papi_events.txt\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchInit(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  store i32 %1, ptr %4, align 4
  %7 = load i32, ptr %3, align 4
  store i32 %7, ptr @numCounters, align 4
  %8 = load i32, ptr %4, align 4
  store i32 %8, ptr @numVars, align 4
  %9 = load i32, ptr @numCounters, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %43

11:                                               ; preds = %2
  %12 = load i32, ptr @numCounters, align 4
  %13 = add nsw i32 %12, 1
  %14 = sext i32 %13 to i64
  %15 = mul i64 %14, 8
  %16 = call noalias ptr @malloc(i64 noundef %15) #7
  store ptr %16, ptr @timerSeconds, align 8
  %17 = load i32, ptr @numCounters, align 4
  %18 = add nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = mul i64 %19, 8
  %21 = call noalias ptr @malloc(i64 noundef %20) #7
  store ptr %21, ptr @timerStarts, align 8
  %22 = load i32, ptr @numCounters, align 4
  %23 = sext i32 %22 to i64
  %24 = mul i64 %23, 16
  %25 = call noalias ptr @malloc(i64 noundef %24) #7
  store ptr %25, ptr @timerBefores, align 8
  store i32 0, ptr %5, align 4
  br label %26

26:                                               ; preds = %39, %11
  %27 = load i32, ptr %5, align 4
  %28 = load i32, ptr @numCounters, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = load ptr, ptr @timerSeconds, align 8
  %32 = load i32, ptr %5, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds double, ptr %31, i64 %33
  store double 0.000000e+00, ptr %34, align 8
  %35 = load ptr, ptr @timerStarts, align 8
  %36 = load i32, ptr %5, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds double, ptr %35, i64 %37
  store double 0.000000e+00, ptr %38, align 8
  br label %39

39:                                               ; preds = %30
  %40 = load i32, ptr %5, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, ptr %5, align 4
  br label %26, !llvm.loop !6

42:                                               ; preds = %26
  br label %43

43:                                               ; preds = %42, %2
  %44 = load i32, ptr @numVars, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %72

46:                                               ; preds = %43
  %47 = load i32, ptr @numVars, align 4
  %48 = add nsw i32 %47, 1
  %49 = sext i32 %48 to i64
  %50 = mul i64 %49, 8
  %51 = call noalias ptr @malloc(i64 noundef %50) #7
  store ptr %51, ptr @vars, align 8
  store i32 0, ptr %6, align 4
  br label %52

52:                                               ; preds = %68, %46
  %53 = load i32, ptr %6, align 4
  %54 = load i32, ptr @numVars, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %71

56:                                               ; preds = %52
  %57 = call noalias ptr @malloc(i64 noundef 512) #7
  %58 = load ptr, ptr @vars, align 8
  %59 = load i32, ptr %6, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds ptr, ptr %58, i64 %60
  store ptr %57, ptr %61, align 8
  %62 = load ptr, ptr @vars, align 8
  %63 = load i32, ptr %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds ptr, ptr %62, i64 %64
  %66 = load ptr, ptr %65, align 8
  %67 = getelementptr inbounds i8, ptr %66, i64 0
  store i8 0, ptr %67, align 1
  br label %68

68:                                               ; preds = %56
  %69 = load i32, ptr %6, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, ptr %6, align 4
  br label %52, !llvm.loop !8

71:                                               ; preds = %52
  br label %72

72:                                               ; preds = %71, %43
  %73 = load i32, ptr %3, align 4
  call void @InitPapi(i32 noundef %73)
  ret void
}

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @InitPapi(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %5 = call i32 @PAPI_library_init(i32 noundef 117440512)
  store i32 %5, ptr %3, align 4
  %6 = icmp ne i32 %5, 117440512
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = load ptr, ptr @stderr, align 8
  %9 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.22)
  call void @exit(i32 noundef 1) #8
  unreachable

10:                                               ; preds = %1
  %11 = call i32 @PAPI_create_eventset(ptr noundef @papiEventSet)
  store i32 %11, ptr %3, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = load i32, ptr %3, align 4
  call void @HandleError(ptr noundef @.str.18, i32 noundef 272, ptr noundef @.str.23, i32 noundef %14)
  br label %15

15:                                               ; preds = %13, %10
  %16 = load ptr, ptr @eventsfile, align 8
  %17 = call i32 @LoadAndAddEventsFromFile(ptr noundef %16)
  store i32 %17, ptr @numPapiEvent, align 4
  %18 = load i32, ptr @numPapiEvent, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  br label %50

21:                                               ; preds = %15
  %22 = load i32, ptr %2, align 4
  %23 = sext i32 %22 to i64
  %24 = mul i64 8, %23
  %25 = call noalias ptr @malloc(i64 noundef %24) #7
  store ptr %25, ptr @eventVals, align 8
  store i32 0, ptr %4, align 4
  br label %26

26:                                               ; preds = %47, %21
  %27 = load i32, ptr %4, align 4
  %28 = load i32, ptr %2, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %50

30:                                               ; preds = %26
  %31 = load i32, ptr @numPapiEvent, align 4
  %32 = sext i32 %31 to i64
  %33 = mul i64 8, %32
  %34 = call noalias ptr @malloc(i64 noundef %33) #7
  %35 = load ptr, ptr @eventVals, align 8
  %36 = load i32, ptr %4, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds ptr, ptr %35, i64 %37
  store ptr %34, ptr %38, align 8
  %39 = load ptr, ptr @eventVals, align 8
  %40 = load i32, ptr %4, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds ptr, ptr %39, i64 %41
  %43 = load ptr, ptr %42, align 8
  %44 = load i32, ptr @numPapiEvent, align 4
  %45 = sext i32 %44 to i64
  %46 = mul i64 8, %45
  call void @llvm.memset.p0.i64(ptr align 8 %43, i8 0, i64 %46, i1 false)
  br label %47

47:                                               ; preds = %30
  %48 = load i32, ptr %4, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, ptr %4, align 4
  br label %26, !llvm.loop !9

50:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchStartCounter(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = load ptr, ptr @timerBefores, align 8
  %4 = load i32, ptr %2, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.timeval, ptr %3, i64 %5
  %7 = call i32 @gettimeofday(ptr noundef %6, ptr noundef null) #9
  call void @StartPapiCounter()
  ret void
}

; Function Attrs: nounwind
declare i32 @gettimeofday(ptr noundef, ptr noundef) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchStopCounter(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = call i32 @gettimeofday(ptr noundef @timerAfter, ptr noundef null) #9
  %4 = load i64, ptr @timerAfter, align 8
  %5 = load ptr, ptr @timerBefores, align 8
  %6 = load i32, ptr %2, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.timeval, ptr %5, i64 %7
  %9 = getelementptr inbounds %struct.timeval, ptr %8, i32 0, i32 0
  %10 = load i64, ptr %9, align 8
  %11 = sub nsw i64 %4, %10
  %12 = sitofp i64 %11 to double
  %13 = load i64, ptr getelementptr inbounds (%struct.timeval, ptr @timerAfter, i32 0, i32 1), align 8
  %14 = load ptr, ptr @timerBefores, align 8
  %15 = load i32, ptr %2, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.timeval, ptr %14, i64 %16
  %18 = getelementptr inbounds %struct.timeval, ptr %17, i32 0, i32 1
  %19 = load i64, ptr %18, align 8
  %20 = sub nsw i64 %13, %19
  %21 = sitofp i64 %20 to double
  %22 = fdiv double %21, 1.000000e+06
  %23 = fadd double %12, %22
  %24 = load ptr, ptr @timerSeconds, align 8
  %25 = load i32, ptr %2, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds double, ptr %24, i64 %26
  store double %23, ptr %27, align 8
  %28 = load i32, ptr %2, align 4
  call void @StopPapiCounter(i32 noundef %28)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @StopPapiCounter(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %4 = load i32, ptr @numPapiEvent, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %18

7:                                                ; preds = %1
  %8 = load i32, ptr @papiEventSet, align 4
  %9 = load ptr, ptr @eventVals, align 8
  %10 = load i32, ptr %2, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds ptr, ptr %9, i64 %11
  %13 = load ptr, ptr %12, align 8
  %14 = call i32 @PAPI_stop(i32 noundef %8, ptr noundef %13)
  store i32 %14, ptr %3, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %7
  %17 = load i32, ptr %3, align 4
  call void @HandleError(ptr noundef @.str.18, i32 noundef 339, ptr noundef @.str.27, i32 noundef %17)
  br label %18

18:                                               ; preds = %6, %16, %7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchAddVarI(i32 noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  store i32 %2, ptr %6, align 4
  %7 = load ptr, ptr @vars, align 8
  %8 = load i32, ptr %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds ptr, ptr %7, i64 %9
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %5, align 8
  %13 = load i32, ptr %6, align 4
  %14 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %11, ptr noundef %12, i32 noundef %13) #9
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(ptr noundef, ptr noundef, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchAddVarF(i32 noundef %0, ptr noundef %1, float noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca float, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  store float %2, ptr %6, align 4
  %7 = load ptr, ptr @vars, align 8
  %8 = load i32, ptr %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds ptr, ptr %7, i64 %9
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %5, align 8
  %13 = load float, ptr %6, align 4
  %14 = fpext float %13 to double
  %15 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %11, ptr noundef %12, double noundef %14) #9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchAddVarD(i32 noundef %0, ptr noundef %1, double noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca double, align 8
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  store double %2, ptr %6, align 8
  %7 = load ptr, ptr @vars, align 8
  %8 = load i32, ptr %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds ptr, ptr %7, i64 %9
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %5, align 8
  %13 = load double, ptr %6, align 8
  %14 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %11, ptr noundef %12, double noundef %13) #9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchAddVarS(i32 noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  store ptr %2, ptr %6, align 8
  %7 = load ptr, ptr @vars, align 8
  %8 = load i32, ptr %4, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds ptr, ptr %7, i64 %9
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %5, align 8
  %13 = load ptr, ptr %6, align 8
  %14 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %11, ptr noundef %12, ptr noundef %13) #9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchDumpState() #0 {
  %1 = alloca ptr, align 8
  %2 = alloca [128 x i8], align 16
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.rusage, align 8
  %7 = alloca i32, align 4
  %8 = load ptr, ptr @resfile, align 8
  %9 = call ptr @fopen(ptr noundef %8, ptr noundef @.str)
  store ptr %9, ptr %1, align 8
  %10 = load ptr, ptr %1, align 8
  %11 = icmp eq ptr %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %0
  %13 = load ptr, ptr @resfile, align 8
  %14 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, ptr noundef %13)
  call void @exit(i32 noundef 1) #8
  unreachable

15:                                               ; preds = %0
  %16 = load ptr, ptr %1, align 8
  %17 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef @.str.2)
  %18 = load i32, ptr @numCounters, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %116

20:                                               ; preds = %15
  %21 = load ptr, ptr %1, align 8
  %22 = load ptr, ptr @timerSeconds, align 8
  %23 = getelementptr inbounds double, ptr %22, i64 0
  %24 = load double, ptr %23, align 8
  %25 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %21, ptr noundef @.str.3, double noundef %24)
  store i32 0, ptr %3, align 4
  br label %26

26:                                               ; preds = %57, %20
  %27 = load i32, ptr %3, align 4
  %28 = load i32, ptr @numPapiEvent, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %60

30:                                               ; preds = %26
  %31 = load i32, ptr %3, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [128 x i32], ptr @papiEventlist, i64 0, i64 %32
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds [128 x i8], ptr %2, i64 0, i64 0
  %36 = call i32 @PAPI_event_code_to_name(i32 noundef %34, ptr noundef %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %30
  %39 = load ptr, ptr @stderr, align 8
  %40 = load i32, ptr %3, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [128 x i32], ptr @papiEventlist, i64 0, i64 %41
  %43 = load i32, ptr %42, align 4
  %44 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %39, ptr noundef @.str.4, i32 noundef %43)
  br label %56

45:                                               ; preds = %30
  %46 = load ptr, ptr %1, align 8
  %47 = getelementptr inbounds [128 x i8], ptr %2, i64 0, i64 0
  %48 = load ptr, ptr @eventVals, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 0
  %50 = load ptr, ptr %49, align 8
  %51 = load i32, ptr %3, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i64, ptr %50, i64 %52
  %54 = load i64, ptr %53, align 8
  %55 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %46, ptr noundef @.str.5, ptr noundef %47, i64 noundef %54)
  br label %56

56:                                               ; preds = %45, %38
  br label %57

57:                                               ; preds = %56
  %58 = load i32, ptr %3, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, ptr %3, align 4
  br label %26, !llvm.loop !10

60:                                               ; preds = %26
  store i32 1, ptr %4, align 4
  br label %61

61:                                               ; preds = %112, %60
  %62 = load i32, ptr %4, align 4
  %63 = load i32, ptr @numCounters, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %115

65:                                               ; preds = %61
  %66 = load ptr, ptr %1, align 8
  %67 = load i32, ptr %4, align 4
  %68 = load ptr, ptr @timerSeconds, align 8
  %69 = load i32, ptr %4, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds double, ptr %68, i64 %70
  %72 = load double, ptr %71, align 8
  %73 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %66, ptr noundef @.str.6, i32 noundef %67, double noundef %72)
  store i32 0, ptr %5, align 4
  br label %74

74:                                               ; preds = %108, %65
  %75 = load i32, ptr %5, align 4
  %76 = load i32, ptr @numPapiEvent, align 4
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %78, label %111

78:                                               ; preds = %74
  %79 = load i32, ptr %5, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [128 x i32], ptr @papiEventlist, i64 0, i64 %80
  %82 = load i32, ptr %81, align 4
  %83 = getelementptr inbounds [128 x i8], ptr %2, i64 0, i64 0
  %84 = call i32 @PAPI_event_code_to_name(i32 noundef %82, ptr noundef %83)
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %78
  %87 = load ptr, ptr @stderr, align 8
  %88 = load i32, ptr %5, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [128 x i32], ptr @papiEventlist, i64 0, i64 %89
  %91 = load i32, ptr %90, align 4
  %92 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %87, ptr noundef @.str.4, i32 noundef %91)
  br label %107

93:                                               ; preds = %78
  %94 = load ptr, ptr %1, align 8
  %95 = getelementptr inbounds [128 x i8], ptr %2, i64 0, i64 0
  %96 = load i32, ptr %4, align 4
  %97 = load ptr, ptr @eventVals, align 8
  %98 = load i32, ptr %4, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds ptr, ptr %97, i64 %99
  %101 = load ptr, ptr %100, align 8
  %102 = load i32, ptr %5, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i64, ptr %101, i64 %103
  %105 = load i64, ptr %104, align 8
  %106 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %94, ptr noundef @.str.7, ptr noundef %95, i32 noundef %96, i64 noundef %105)
  br label %107

107:                                              ; preds = %93, %86
  br label %108

108:                                              ; preds = %107
  %109 = load i32, ptr %5, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, ptr %5, align 4
  br label %74, !llvm.loop !11

111:                                              ; preds = %74
  br label %112

112:                                              ; preds = %111
  %113 = load i32, ptr %4, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, ptr %4, align 4
  br label %61, !llvm.loop !12

115:                                              ; preds = %61
  br label %116

116:                                              ; preds = %115, %15
  %117 = call i32 @getrusage(i32 noundef 0, ptr noundef %6) #9
  %118 = load ptr, ptr %1, align 8
  %119 = getelementptr inbounds %struct.rusage, ptr %6, i32 0, i32 2
  %120 = load i64, ptr %119, align 8
  %121 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %118, ptr noundef @.str.8, i64 noundef %120)
  %122 = load i32, ptr @numVars, align 4
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %162

124:                                              ; preds = %116
  %125 = load ptr, ptr %1, align 8
  %126 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %125, ptr noundef @.str.9)
  store i32 0, ptr %7, align 4
  br label %127

127:                                              ; preds = %156, %124
  %128 = load i32, ptr %7, align 4
  %129 = load i32, ptr @numVars, align 4
  %130 = icmp slt i32 %128, %129
  br i1 %130, label %131, label %159

131:                                              ; preds = %127
  %132 = load ptr, ptr @vars, align 8
  %133 = load i32, ptr %7, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds ptr, ptr %132, i64 %134
  %136 = load ptr, ptr %135, align 8
  %137 = getelementptr inbounds i8, ptr %136, i64 0
  %138 = load i8, ptr %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %155

141:                                              ; preds = %131
  %142 = load i32, ptr %7, align 4
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %141
  %145 = load ptr, ptr %1, align 8
  %146 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %145, ptr noundef @.str.10)
  br label %147

147:                                              ; preds = %144, %141
  %148 = load ptr, ptr %1, align 8
  %149 = load ptr, ptr @vars, align 8
  %150 = load i32, ptr %7, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds ptr, ptr %149, i64 %151
  %153 = load ptr, ptr %152, align 8
  %154 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %148, ptr noundef @.str.11, ptr noundef %153)
  br label %155

155:                                              ; preds = %147, %131
  br label %156

156:                                              ; preds = %155
  %157 = load i32, ptr %7, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, ptr %7, align 4
  br label %127, !llvm.loop !13

159:                                              ; preds = %127
  %160 = load ptr, ptr %1, align 8
  %161 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %160, ptr noundef @.str.12)
  br label %162

162:                                              ; preds = %159, %116
  %163 = load ptr, ptr %1, align 8
  %164 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %163, ptr noundef @.str.13)
  %165 = load ptr, ptr %1, align 8
  %166 = call i32 @fclose(ptr noundef %165)
  ret void
}

declare ptr @fopen(ptr noundef, ptr noundef) #3

declare i32 @printf(ptr noundef, ...) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) #4

declare i32 @fprintf(ptr noundef, ptr noundef, ...) #3

declare i32 @PAPI_event_code_to_name(i32 noundef, ptr noundef) #3

; Function Attrs: nounwind
declare i32 @getrusage(i32 noundef, ptr noundef) #2

declare i32 @fclose(ptr noundef) #3

; Function Attrs: noinline nounwind uwtable
define dso_local double @CSSBenchGetTimer(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, ptr %2, align 4
  %3 = load ptr, ptr @timerSeconds, align 8
  %4 = load i32, ptr %2, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds double, ptr %3, i64 %5
  %7 = load double, ptr %6, align 8
  ret double %7
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @CSSBenchFinish() #0 {
  %1 = alloca i32, align 4
  store i32 0, ptr %1, align 4
  br label %2

2:                                                ; preds = %12, %0
  %3 = load i32, ptr %1, align 4
  %4 = load i32, ptr @numVars, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = load ptr, ptr @vars, align 8
  %8 = load i32, ptr %1, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds ptr, ptr %7, i64 %9
  %11 = load ptr, ptr %10, align 8
  call void @free(ptr noundef %11) #9
  br label %12

12:                                               ; preds = %6
  %13 = load i32, ptr %1, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, ptr %1, align 4
  br label %2, !llvm.loop !14

15:                                               ; preds = %2
  %16 = load ptr, ptr @vars, align 8
  call void @free(ptr noundef %16) #9
  %17 = load ptr, ptr @timerSeconds, align 8
  call void @free(ptr noundef %17) #9
  %18 = load ptr, ptr @timerStarts, align 8
  call void @free(ptr noundef %18) #9
  %19 = load ptr, ptr @timerBefores, align 8
  call void @free(ptr noundef %19) #9
  call void @FinishPapi()
  ret void
}

; Function Attrs: nounwind
declare void @free(ptr noundef) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LoadAndAddEventsFromFile(ptr noundef %0) #0 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca [128 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  %7 = load ptr, ptr %2, align 8
  %8 = call ptr @fopen(ptr noundef %7, ptr noundef @.str.14)
  store ptr %8, ptr %3, align 8
  %9 = load ptr, ptr %3, align 8
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = load ptr, ptr @stderr, align 8
  %13 = load ptr, ptr %2, align 8
  %14 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %12, ptr noundef @.str.15, ptr noundef %13)
  call void @exit(i32 noundef 1) #8
  unreachable

15:                                               ; preds = %1
  store i32 0, ptr %5, align 4
  br label %16

16:                                               ; preds = %56, %51, %15
  %17 = getelementptr inbounds [128 x i8], ptr %4, i64 0, i64 0
  %18 = load ptr, ptr %3, align 8
  %19 = call ptr @fgets(ptr noundef %17, i32 noundef 128, ptr noundef %18)
  %20 = icmp ne ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = load i32, ptr %5, align 4
  %23 = icmp slt i32 %22, 128
  br label %24

24:                                               ; preds = %21, %16
  %25 = phi i1 [ false, %16 ], [ %23, %21 ]
  br i1 %25, label %26, label %62

26:                                               ; preds = %24
  %27 = getelementptr inbounds [128 x i8], ptr %4, i64 0, i64 0
  %28 = call i64 @strcspn(ptr noundef %27, ptr noundef @.str.16) #10
  %29 = getelementptr inbounds [128 x i8], ptr %4, i64 0, i64 %28
  store i8 0, ptr %29, align 1
  %30 = getelementptr inbounds [128 x i8], ptr %4, i64 0, i64 0
  %31 = load i32, ptr %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, ptr @papiEventlist, i64 %32
  %34 = call i32 @PAPI_event_name_to_code(ptr noundef %30, ptr noundef %33)
  store i32 %34, ptr %6, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %26
  %37 = load ptr, ptr %3, align 8
  %38 = call i32 @fclose(ptr noundef %37)
  %39 = load ptr, ptr @stderr, align 8
  %40 = getelementptr inbounds [128 x i8], ptr %4, i64 0, i64 0
  %41 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %39, ptr noundef @.str.17, ptr noundef %40)
  %42 = load i32, ptr %6, align 4
  call void @HandleError(ptr noundef @.str.18, i32 noundef 245, ptr noundef @.str.19, i32 noundef %42)
  br label %43

43:                                               ; preds = %36, %26
  %44 = load i32, ptr @papiEventSet, align 4
  %45 = load i32, ptr %5, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [128 x i32], ptr @papiEventlist, i64 0, i64 %46
  %48 = load i32, ptr %47, align 4
  %49 = call i32 @PAPI_add_event(i32 noundef %44, i32 noundef %48)
  store i32 %49, ptr %6, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %43
  %52 = load ptr, ptr @stderr, align 8
  %53 = getelementptr inbounds [128 x i8], ptr %4, i64 0, i64 0
  %54 = load i32, ptr %6, align 4
  %55 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %52, ptr noundef @.str.20, ptr noundef %53, i32 noundef %54)
  br label %16, !llvm.loop !15

56:                                               ; preds = %43
  %57 = load ptr, ptr @stdout, align 8
  %58 = getelementptr inbounds [128 x i8], ptr %4, i64 0, i64 0
  %59 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %57, ptr noundef @.str.21, ptr noundef %58)
  %60 = load i32, ptr %5, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, ptr %5, align 4
  br label %16, !llvm.loop !15

62:                                               ; preds = %24
  %63 = load ptr, ptr %3, align 8
  %64 = call i32 @fclose(ptr noundef %63)
  %65 = load i32, ptr %5, align 4
  ret i32 %65
}

declare ptr @fgets(ptr noundef, i32 noundef, ptr noundef) #3

; Function Attrs: nounwind readonly willreturn
declare i64 @strcspn(ptr noundef, ptr noundef) #5

declare i32 @PAPI_event_name_to_code(ptr noundef, ptr noundef) #3

; Function Attrs: noinline nounwind uwtable
define internal void @HandleError(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  store ptr %0, ptr %5, align 8
  store i32 %1, ptr %6, align 4
  store ptr %2, ptr %7, align 8
  store i32 %3, ptr %8, align 4
  %9 = load ptr, ptr @stderr, align 8
  %10 = load ptr, ptr %5, align 8
  %11 = load i32, ptr %6, align 4
  %12 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %9, ptr noundef @.str.29, ptr noundef %10, i32 noundef %11)
  %13 = load ptr, ptr @stderr, align 8
  %14 = load i32, ptr %8, align 4
  %15 = load ptr, ptr %7, align 8
  %16 = load i32, ptr %8, align 4
  %17 = call ptr @PAPI_strerror(i32 noundef %16)
  %18 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef @.str.30, i32 noundef %14, ptr noundef %15, ptr noundef %17)
  %19 = call i32 @PAPI_is_initialized()
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %4
  call void @PAPI_shutdown()
  br label %22

22:                                               ; preds = %21, %4
  %23 = load i32, ptr %8, align 4
  call void @exit(i32 noundef %23) #8
  unreachable
}

declare i32 @PAPI_add_event(i32 noundef, i32 noundef) #3

declare i32 @PAPI_library_init(i32 noundef) #3

declare i32 @PAPI_create_eventset(ptr noundef) #3

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define dso_local void @FinishPapi() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [128 x i64], align 16
  %3 = alloca i32, align 4
  %4 = load i32, ptr @numPapiEvent, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %0
  %7 = call i32 @PAPI_destroy_eventset(ptr noundef @papiEventSet)
  store i32 %7, ptr %1, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = load i32, ptr %1, align 4
  call void @HandleError(ptr noundef @.str.18, i32 noundef 298, ptr noundef @.str.24, i32 noundef %10)
  br label %11

11:                                               ; preds = %9, %6
  call void @PAPI_shutdown()
  br label %39

12:                                               ; preds = %0
  %13 = load i32, ptr @papiEventSet, align 4
  %14 = call i32 @PAPI_cleanup_eventset(i32 noundef %13)
  store i32 %14, ptr %1, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = load i32, ptr %1, align 4
  call void @HandleError(ptr noundef @.str.18, i32 noundef 305, ptr noundef @.str.25, i32 noundef %17)
  br label %18

18:                                               ; preds = %16, %12
  %19 = call i32 @PAPI_destroy_eventset(ptr noundef @papiEventSet)
  store i32 %19, ptr %1, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = load i32, ptr %1, align 4
  call void @HandleError(ptr noundef @.str.18, i32 noundef 308, ptr noundef @.str.24, i32 noundef %22)
  br label %23

23:                                               ; preds = %21, %18
  call void @PAPI_shutdown()
  store i32 0, ptr %3, align 4
  br label %24

24:                                               ; preds = %34, %23
  %25 = load i32, ptr %3, align 4
  %26 = load i32, ptr @numCounters, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %24
  %29 = load ptr, ptr @eventVals, align 8
  %30 = load i32, ptr %3, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds ptr, ptr %29, i64 %31
  %33 = load ptr, ptr %32, align 8
  call void @free(ptr noundef %33) #9
  br label %34

34:                                               ; preds = %28
  %35 = load i32, ptr %3, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, ptr %3, align 4
  br label %24, !llvm.loop !16

37:                                               ; preds = %24
  %38 = load ptr, ptr @eventVals, align 8
  call void @free(ptr noundef %38) #9
  br label %39

39:                                               ; preds = %37, %11
  ret void
}

declare i32 @PAPI_destroy_eventset(ptr noundef) #3

declare void @PAPI_shutdown() #3

declare i32 @PAPI_cleanup_eventset(i32 noundef) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @StartPapiCounter() #0 {
  %1 = alloca i32, align 4
  %2 = load i32, ptr @numPapiEvent, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  br label %11

5:                                                ; preds = %0
  %6 = load i32, ptr @papiEventSet, align 4
  %7 = call i32 @PAPI_start(i32 noundef %6)
  store i32 %7, ptr %1, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = load i32, ptr %1, align 4
  call void @HandleError(ptr noundef @.str.18, i32 noundef 327, ptr noundef @.str.26, i32 noundef %10)
  br label %11

11:                                               ; preds = %4, %9, %5
  ret void
}

declare i32 @PAPI_start(i32 noundef) #3

declare i32 @PAPI_stop(i32 noundef, ptr noundef) #3

declare ptr @PAPI_strerror(i32 noundef) #3

declare i32 @PAPI_is_initialized() #3

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #7 = { nounwind allocsize(0) }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly willreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 15.0.7"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
